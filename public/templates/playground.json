{"file":{"uuid":"llHO_U0hhj_YWNrFwUUaj","characterList":[{"uuid":"sMqxsV6mecAOfl1zst6M7","type":"text","character":{"uuid":"9ckb27ei-Ddv9bMu68ct5","text":"1","unicode":"31","components":[]},"components":[{"uuid":"GS0S9utGolXe5vj_m7lAb","type":"glyph","name":"横9791","lock":false,"visible":true,"value":{"uuid":"CAnu-QCv88jubN28nkm_D","type":"system","name":"横","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"vgVdDfK8pZQQeIzLjU4ZM","name":"长度","type":0,"value":500,"min":50,"max":1000},{"uuid":"9PlgKbxQ1QWyZsQ5uReWB","name":"字重","type":0,"value":50,"min":10,"max":100},{"uuid":"TZMq6hXE0fUenMVYG7l7O","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"cDQEFbiXNLbiCXxuLolzr","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"egVRd_VugdEHEuaP5FK7U","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"PhJPRtgpmMmHXVmGF0VP8","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"dPxdrk5HIpbqU8_OPtgcz","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"VNyz0v9nDnn1CQvMQIdv0","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"vcEVTlpvplikUiGe5dquV","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":null,"script_reference":"CAnu-QCv88jubN28nkm_D","objData":{"_joints":[{"_x":250,"_y":500,"uuid":"t9iAhb0FMFkTmZyoy9dhV","name":"start_ref"},{"_x":750,"_y":500,"uuid":"tF-r0j-MLX8fM6fPP5nQB","name":"end_ref"},{"_x":250,"_y":500,"uuid":"FVbr33M_azaoudsVf9Wfq","name":"start"},{"_x":750,"_y":500,"uuid":"iE9KN_QlJxN5zI3rKXWo4","name":"end"}],"_reflines":[{"name":"start_ref-end_ref","start":"start_ref","end":"end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"}],"_components":[{"points":[{"uuid":"LJMUi-704epApbP9cmTGF","type":"anchor","x":250,"y":462.5,"origin":null},{"uuid":"KgVAUSOUhI-8c9K-qVs3q","type":"control","x":250,"y":462.5,"origin":"LJMUi-704epApbP9cmTGF"},{"uuid":"BKB2G18BPmBSQPSSWNqmk","type":"control","x":270,"y":462.5,"origin":"lgYhDVHLnNxCOuHeGtT-d"},{"uuid":"lgYhDVHLnNxCOuHeGtT-d","type":"anchor","x":270,"y":462.5,"origin":null},{"uuid":"lQVkp1qvr158qAEmHoNrw","type":"control","x":270,"y":470.8333333333333,"origin":"lgYhDVHLnNxCOuHeGtT-d"},{"uuid":"29poGjrvgx1qyWPotasHP","type":"control","x":276.6666666666667,"y":475,"origin":"3QzylcipgkdvhghCEy-en"},{"uuid":"3QzylcipgkdvhghCEy-en","type":"anchor","x":290,"y":475,"origin":null},{"uuid":"QMdfVc8lwZy2n4Dv4xfL6","type":"control","x":290,"y":475,"origin":"3QzylcipgkdvhghCEy-en"},{"uuid":"gygVf0UVDxxa-Zt0oPpyM","type":"control","x":750,"y":475,"origin":"VJ3R9ZE41IZgdpGdloy1i"},{"uuid":"VJ3R9ZE41IZgdpGdloy1i","type":"anchor","x":750,"y":475,"origin":null},{"uuid":"dc2g6m3dC3SNch7lStA17","type":"control","x":750,"y":475,"origin":"VJ3R9ZE41IZgdpGdloy1i"},{"uuid":"_77uVNkQBuabVC4z14BDn","type":"control","x":750,"y":525,"origin":"AIv1EPTOrMcCO6XIgekLy"},{"uuid":"AIv1EPTOrMcCO6XIgekLy","type":"anchor","x":750,"y":525,"origin":null},{"uuid":"8ItDXTkTer5kHbDc8bRgj","type":"control","x":750,"y":525,"origin":"AIv1EPTOrMcCO6XIgekLy"},{"uuid":"rWjl3BW5dLkg_xXlIztgQ","type":"control","x":290,"y":525,"origin":"v50AJ497NcrRu-YnZv6E3"},{"uuid":"v50AJ497NcrRu-YnZv6E3","type":"anchor","x":290,"y":525,"origin":null},{"uuid":"BRHpOGHWdfEVpQfdyQgsn","type":"control","x":276.6666666666667,"y":525,"origin":"v50AJ497NcrRu-YnZv6E3"},{"uuid":"XCF-7aAD6BMeXMihgu5hT","type":"control","x":270,"y":529.1666666666666,"origin":"qDNQtPDiopsshT-NfKkNJ"},{"uuid":"qDNQtPDiopsshT-NfKkNJ","type":"anchor","x":270,"y":537.5,"origin":null},{"uuid":"aXVvUEGWTemOSncVyv-oj","type":"control","x":270,"y":537.5,"origin":"qDNQtPDiopsshT-NfKkNJ"},{"uuid":"wR6QYPiOdB5jgFggKL9hk","type":"control","x":250,"y":537.5,"origin":"7XOxAVQtBdkY2jlrt1lIp"},{"uuid":"7XOxAVQtBdkY2jlrt1lIp","type":"anchor","x":250,"y":537.5,"origin":null},{"uuid":"bgOM21lyvhtA8u5qwK0sk","type":"control","x":250,"y":537.5,"origin":"7XOxAVQtBdkY2jlrt1lIp"},{"uuid":"16x0fDg36_f_-IrnP2kqA","type":"control","x":250,"y":462.5,"origin":"xAD-jDnjWNbrOvQ-km6bG"},{"uuid":"xAD-jDnjWNbrOvQ-km6bG","type":"anchor","x":250,"y":462.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":337.5},"end":{"x":270,"y":337.5},"control1":{"x":250,"y":337.5},"control2":{"x":270,"y":337.5},"fill":false},{"type":2,"start":{"x":270,"y":337.5},"end":{"x":290,"y":325},"control1":{"x":270,"y":329.16666666666674},"control2":{"x":276.6666666666667,"y":325},"fill":false},{"type":2,"start":{"x":290,"y":325},"end":{"x":750,"y":325},"control1":{"x":290,"y":325},"control2":{"x":750,"y":325},"fill":false},{"type":2,"start":{"x":750,"y":325},"end":{"x":750,"y":275},"control1":{"x":750,"y":325},"control2":{"x":750,"y":275},"fill":false},{"type":2,"start":{"x":750,"y":275},"end":{"x":290,"y":275},"control1":{"x":750,"y":275},"control2":{"x":290,"y":275},"fill":false},{"type":2,"start":{"x":290,"y":275},"end":{"x":270,"y":262.5},"control1":{"x":276.6666666666667,"y":275},"control2":{"x":270,"y":270.83333333333337},"fill":false},{"type":2,"start":{"x":270,"y":262.5},"end":{"x":250,"y":262.5},"control1":{"x":270,"y":262.5},"control2":{"x":250,"y":262.5},"fill":false},{"type":2,"start":{"x":250,"y":262.5},"end":{"x":250,"y":337.5},"control1":{"x":250,"y":262.5},"control2":{"x":250,"y":337.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":46.25},"end":{"x":27,"y":46.25},"control1":{"x":25,"y":46.25},"control2":{"x":27,"y":46.25},"fill":false},{"type":2,"start":{"x":27,"y":46.25},"end":{"x":29,"y":47.5},"control1":{"x":27,"y":47.083333333333336},"control2":{"x":27.66666666666667,"y":47.5},"fill":false},{"type":2,"start":{"x":29,"y":47.5},"end":{"x":75,"y":47.5},"control1":{"x":29,"y":47.5},"control2":{"x":75,"y":47.5},"fill":false},{"type":2,"start":{"x":75,"y":47.5},"end":{"x":75,"y":52.5},"control1":{"x":75,"y":47.5},"control2":{"x":75,"y":52.5},"fill":false},{"type":2,"start":{"x":75,"y":52.5},"end":{"x":29,"y":52.5},"control1":{"x":75,"y":52.5},"control2":{"x":29,"y":52.5},"fill":false},{"type":2,"start":{"x":29,"y":52.5},"end":{"x":27,"y":53.75},"control1":{"x":27.66666666666667,"y":52.5},"control2":{"x":27,"y":52.916666666666664},"fill":false},{"type":2,"start":{"x":27,"y":53.75},"end":{"x":25,"y":53.75},"control1":{"x":27,"y":53.75},"control2":{"x":25,"y":53.75},"fill":false},{"type":2,"start":{"x":25,"y":53.75},"end":{"x":25,"y":46.25},"control1":{"x":25,"y":53.75},"control2":{"x":25,"y":46.25},"fill":false}]}]}},"ox":0,"oy":0,"usedInCharacter":true}],"groups":[],"orderedList":[{"type":"component","uuid":"GS0S9utGolXe5vj_m7lAb"}],"selectedComponentsUUIDs":["GS0S9utGolXe5vj_m7lAb"],"script":"function script_sMqxsV6mecAOfl1zst6M7 (character, constants, FP) {\n\t//Todo something\n}","view":{"zoom":100,"translateX":0,"translateY":0},"info":{"gridSettings":{"dx":0,"dy":0,"centerSquareSize":333.3333333333333,"size":1000,"default":true},"useSkeletonGrid":false,"layout":"","layoutTree":[]}},{"uuid":"uMMrfERry1ZlRLBZjTIPR","type":"text","character":{"uuid":"mbXex1_pzPrQEyoZ1GmQs","text":"2","unicode":"32","components":[]},"components":[{"uuid":"2jXJ68h-4i1NojoP6jVGV","type":"glyph","name":"横1909","lock":false,"visible":true,"value":{"uuid":"CAnu-QCv88jubN28nkm_D","type":"system","name":"横","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"vgVdDfK8pZQQeIzLjU4ZM","name":"长度","type":0,"value":500,"min":50,"max":1000},{"uuid":"9PlgKbxQ1QWyZsQ5uReWB","name":"字重","type":0,"value":50,"min":10,"max":100},{"uuid":"TZMq6hXE0fUenMVYG7l7O","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"cDQEFbiXNLbiCXxuLolzr","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"egVRd_VugdEHEuaP5FK7U","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"PhJPRtgpmMmHXVmGF0VP8","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"dPxdrk5HIpbqU8_OPtgcz","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"VNyz0v9nDnn1CQvMQIdv0","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"vcEVTlpvplikUiGe5dquV","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":null,"script_reference":"CAnu-QCv88jubN28nkm_D","objData":{"_joints":[{"_x":250,"_y":500,"uuid":"QT-yVweyKNFsY3adIHoXm","name":"start_ref"},{"_x":750,"_y":500,"uuid":"oR9xQXjvXiAbNxTOpMhNT","name":"end_ref"},{"_x":250,"_y":500,"uuid":"J0maT8e7kcMy7VHDOt8pU","name":"start"},{"_x":750,"_y":500,"uuid":"Yc0FK8HFei_eJIPVM7znG","name":"end"}],"_reflines":[{"name":"start_ref-end_ref","start":"start_ref","end":"end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"}],"_components":[{"points":[{"uuid":"zuR12GmAH48Kvl4DpQyVf","type":"anchor","x":250,"y":462.5,"origin":null},{"uuid":"OJurkl-b7rLBzMPI8k3TC","type":"control","x":250,"y":462.5,"origin":"zuR12GmAH48Kvl4DpQyVf"},{"uuid":"H0EbqcT6PUC106WZzwfhu","type":"control","x":270,"y":462.5,"origin":"3FULSnMulbMoITi7y2pNc"},{"uuid":"3FULSnMulbMoITi7y2pNc","type":"anchor","x":270,"y":462.5,"origin":null},{"uuid":"qkuM3fNCTr8cs5fXiO2H7","type":"control","x":270,"y":470.8333333333333,"origin":"3FULSnMulbMoITi7y2pNc"},{"uuid":"LUBtJiFcF6c7egr2GQzpc","type":"control","x":276.6666666666667,"y":475,"origin":"oPm6bYAkD6ZtyrnunxqJ2"},{"uuid":"oPm6bYAkD6ZtyrnunxqJ2","type":"anchor","x":290,"y":475,"origin":null},{"uuid":"WCJOyr5B9jyRc8vZLaXaN","type":"control","x":290,"y":475,"origin":"oPm6bYAkD6ZtyrnunxqJ2"},{"uuid":"2lR_5bzAX33mwTHIH3eq9","type":"control","x":750,"y":475,"origin":"yv-ioEbfBZRycDTwEmN25"},{"uuid":"yv-ioEbfBZRycDTwEmN25","type":"anchor","x":750,"y":475,"origin":null},{"uuid":"DpiEhjmQeClyERQ4SQa2T","type":"control","x":750,"y":475,"origin":"yv-ioEbfBZRycDTwEmN25"},{"uuid":"hv3zMKd9WHQDdWS-encHT","type":"control","x":750,"y":525,"origin":"LsvnoflNXOvSUhU_S_FzH"},{"uuid":"LsvnoflNXOvSUhU_S_FzH","type":"anchor","x":750,"y":525,"origin":null},{"uuid":"JCkf0qnAp0iRUFO7OJlEu","type":"control","x":750,"y":525,"origin":"LsvnoflNXOvSUhU_S_FzH"},{"uuid":"Mb6HYVuEaTN5gFlj3A08Q","type":"control","x":290,"y":525,"origin":"sFNwv0zXgRN9g-EmMeNra"},{"uuid":"sFNwv0zXgRN9g-EmMeNra","type":"anchor","x":290,"y":525,"origin":null},{"uuid":"U53-XoWyIiaQJ50ZDv7U5","type":"control","x":276.6666666666667,"y":525,"origin":"sFNwv0zXgRN9g-EmMeNra"},{"uuid":"ReGOzQBw9jPhb_-lni-Bx","type":"control","x":270,"y":529.1666666666666,"origin":"slmPFEuzL0Z-Y35K93ugO"},{"uuid":"slmPFEuzL0Z-Y35K93ugO","type":"anchor","x":270,"y":537.5,"origin":null},{"uuid":"l-YK8-JcxbXd65TdboEBg","type":"control","x":270,"y":537.5,"origin":"slmPFEuzL0Z-Y35K93ugO"},{"uuid":"oo5nvXtDP5FnRz7f5KDYP","type":"control","x":250,"y":537.5,"origin":"9hL5_SQ0LDHT_AtLI23Aj"},{"uuid":"9hL5_SQ0LDHT_AtLI23Aj","type":"anchor","x":250,"y":537.5,"origin":null},{"uuid":"QEKo26F3dKoSfikBb74GQ","type":"control","x":250,"y":537.5,"origin":"9hL5_SQ0LDHT_AtLI23Aj"},{"uuid":"5Z4hJLuL2rAKStKgXD67u","type":"control","x":250,"y":462.5,"origin":"j5p2S5tIfPFvU_wqctOHO"},{"uuid":"j5p2S5tIfPFvU_wqctOHO","type":"anchor","x":250,"y":462.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":337.5},"end":{"x":270,"y":337.5},"control1":{"x":250,"y":337.5},"control2":{"x":270,"y":337.5},"fill":false},{"type":2,"start":{"x":270,"y":337.5},"end":{"x":290,"y":325},"control1":{"x":270,"y":329.16666666666674},"control2":{"x":276.6666666666667,"y":325},"fill":false},{"type":2,"start":{"x":290,"y":325},"end":{"x":750,"y":325},"control1":{"x":290,"y":325},"control2":{"x":750,"y":325},"fill":false},{"type":2,"start":{"x":750,"y":325},"end":{"x":750,"y":275},"control1":{"x":750,"y":325},"control2":{"x":750,"y":275},"fill":false},{"type":2,"start":{"x":750,"y":275},"end":{"x":290,"y":275},"control1":{"x":750,"y":275},"control2":{"x":290,"y":275},"fill":false},{"type":2,"start":{"x":290,"y":275},"end":{"x":270,"y":262.5},"control1":{"x":276.6666666666667,"y":275},"control2":{"x":270,"y":270.83333333333337},"fill":false},{"type":2,"start":{"x":270,"y":262.5},"end":{"x":250,"y":262.5},"control1":{"x":270,"y":262.5},"control2":{"x":250,"y":262.5},"fill":false},{"type":2,"start":{"x":250,"y":262.5},"end":{"x":250,"y":337.5},"control1":{"x":250,"y":262.5},"control2":{"x":250,"y":337.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":46.25},"end":{"x":27,"y":46.25},"control1":{"x":25,"y":46.25},"control2":{"x":27,"y":46.25},"fill":false},{"type":2,"start":{"x":27,"y":46.25},"end":{"x":29,"y":47.5},"control1":{"x":27,"y":47.083333333333336},"control2":{"x":27.66666666666667,"y":47.5},"fill":false},{"type":2,"start":{"x":29,"y":47.5},"end":{"x":75,"y":47.5},"control1":{"x":29,"y":47.5},"control2":{"x":75,"y":47.5},"fill":false},{"type":2,"start":{"x":75,"y":47.5},"end":{"x":75,"y":52.5},"control1":{"x":75,"y":47.5},"control2":{"x":75,"y":52.5},"fill":false},{"type":2,"start":{"x":75,"y":52.5},"end":{"x":29,"y":52.5},"control1":{"x":75,"y":52.5},"control2":{"x":29,"y":52.5},"fill":false},{"type":2,"start":{"x":29,"y":52.5},"end":{"x":27,"y":53.75},"control1":{"x":27.66666666666667,"y":52.5},"control2":{"x":27,"y":52.916666666666664},"fill":false},{"type":2,"start":{"x":27,"y":53.75},"end":{"x":25,"y":53.75},"control1":{"x":27,"y":53.75},"control2":{"x":25,"y":53.75},"fill":false},{"type":2,"start":{"x":25,"y":53.75},"end":{"x":25,"y":46.25},"control1":{"x":25,"y":53.75},"control2":{"x":25,"y":46.25},"fill":false}]}]}},"ox":0,"oy":0,"usedInCharacter":true}],"groups":[],"orderedList":[{"type":"component","uuid":"2jXJ68h-4i1NojoP6jVGV"}],"selectedComponentsUUIDs":["2jXJ68h-4i1NojoP6jVGV"],"script":"function script_uMMrfERry1ZlRLBZjTIPR (character, constants, FP) {\n\t//Todo something\n}","view":{"zoom":100,"translateX":0,"translateY":0},"info":{"gridSettings":{"dx":0,"dy":0,"centerSquareSize":333.3333333333333,"size":1000,"default":true},"useSkeletonGrid":false,"layout":"","layoutTree":[]}},{"uuid":"hOFWdexiWlQNyLRUyin3G","type":"text","character":{"uuid":"L_Oob6iBnZzitjWdzuDOY","text":"3","unicode":"33","components":[]},"components":[{"uuid":"d6ChMzL0_BM7NNnxvt0JO","type":"glyph","name":"竖9593","lock":false,"visible":true,"value":{"uuid":"EUF-rki8LAIhQjxS23mlB","type":"system","name":"竖","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Qtn7LXUiRD4EaI5TuHwgd","name":"长度","type":0,"value":500,"min":50,"max":1000},{"uuid":"o3JpjVgjQApupOMm_y3db","name":"字重","type":0,"value":50,"min":10,"max":100},{"uuid":"nK7PAegeIqQcr-Kl7P1b-","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"mVu3fs4_EJy1_2dDJiBvh","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"Un1fpNXItfsEZEP6xS0Iw","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"3YUbcOipZLRvpnfnJtvVC","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"B3lVxpDCKx_SZtAGyLc9T","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"PdmYRWOqYBRt1ENft-WG6","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"90AbkybI27kJhAZ8Qi54u","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":null,"script_reference":"EUF-rki8LAIhQjxS23mlB","objData":{"_joints":[{"_x":500,"_y":250,"uuid":"tovxtCEr6vfP2W4QTvIPP","name":"start_ref"},{"_x":500,"_y":750,"uuid":"N_ZDDMegoodqnq5VNiPKp","name":"end_ref"},{"_x":500,"_y":250,"uuid":"-h74dQ381cSbIGmUZD5mw","name":"start"},{"_x":500,"_y":750,"uuid":"cv1XfNeHeECXm6xGiceAd","name":"end"}],"_reflines":[{"name":"start_ref-end_ref","start":"start_ref","end":"end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"}],"_components":[{"points":[{"uuid":"vF-uTEYLruijn0BhICL_A","type":"anchor","x":462.5,"y":250,"origin":null},{"uuid":"AwgnQxtg9jjo0uFOwCTxs","type":"control","x":462.5,"y":250,"origin":"vF-uTEYLruijn0BhICL_A"},{"uuid":"s8T4H3NwoNOQfDeAhmL0f","type":"control","x":462.5,"y":270,"origin":"MZifyIbrQVT6d_UR7R_9x"},{"uuid":"MZifyIbrQVT6d_UR7R_9x","type":"anchor","x":462.5,"y":270,"origin":null},{"uuid":"9gVRP8jJnBhQAH1FbvNFL","type":"control","x":470.8333333333333,"y":270,"origin":"MZifyIbrQVT6d_UR7R_9x"},{"uuid":"duO05dafVR9-OzqANswVG","type":"control","x":475,"y":276.6666666666667,"origin":"bY6gNmoLbRlyzOBmZ7xX_"},{"uuid":"bY6gNmoLbRlyzOBmZ7xX_","type":"anchor","x":475,"y":290,"origin":null},{"uuid":"pxkS94GVPW1DWhtHjhrpT","type":"control","x":475,"y":290,"origin":"bY6gNmoLbRlyzOBmZ7xX_"},{"uuid":"wxmzUP2xUtxZMXjMNi3Vg","type":"control","x":475,"y":750,"origin":"jpXyK7Is5EyuBiS2UTaRg"},{"uuid":"jpXyK7Is5EyuBiS2UTaRg","type":"anchor","x":475,"y":750,"origin":null},{"uuid":"RvsGZs4rUzsLMPGK84f8n","type":"control","x":475,"y":750,"origin":"jpXyK7Is5EyuBiS2UTaRg"},{"uuid":"bWrD-emtS4swJUqO6vI-u","type":"control","x":525,"y":750,"origin":"tgQkyfE4x8Q1gA9XPZMxm"},{"uuid":"tgQkyfE4x8Q1gA9XPZMxm","type":"anchor","x":525,"y":750,"origin":null},{"uuid":"pzDqYQRarjgQXHvYzHQ1u","type":"control","x":525,"y":750,"origin":"tgQkyfE4x8Q1gA9XPZMxm"},{"uuid":"Yv1nfvcrLKdr_7esx5GuM","type":"control","x":525,"y":290,"origin":"282qVlI4Yl1ajA6jeEfLn"},{"uuid":"282qVlI4Yl1ajA6jeEfLn","type":"anchor","x":525,"y":290,"origin":null},{"uuid":"5OZM7K45OVtAmnQzYxLru","type":"control","x":525,"y":276.6666666666667,"origin":"282qVlI4Yl1ajA6jeEfLn"},{"uuid":"rPUpphT6Z57TeBauw1UXC","type":"control","x":529.1666666666666,"y":270,"origin":"FxLwZ5rOcWXAs38sDXXgg"},{"uuid":"FxLwZ5rOcWXAs38sDXXgg","type":"anchor","x":537.5,"y":270,"origin":null},{"uuid":"Mwc-CqP0J5TwusFNGUY4T","type":"control","x":537.5,"y":270,"origin":"FxLwZ5rOcWXAs38sDXXgg"},{"uuid":"Ebst0-Lmnn6jEc50CpueG","type":"control","x":537.5,"y":250,"origin":"7qGLopiqrPHeWNRONMjUE"},{"uuid":"7qGLopiqrPHeWNRONMjUE","type":"anchor","x":537.5,"y":250,"origin":null},{"uuid":"biZ39uKb0zYkaqbMiw9RC","type":"control","x":537.5,"y":250,"origin":"7qGLopiqrPHeWNRONMjUE"},{"uuid":"2E113pUWQq8kV9KBOCeYH","type":"control","x":462.5,"y":250,"origin":"mhQ1S7BuX3RkTg93E9wdX"},{"uuid":"mhQ1S7BuX3RkTg93E9wdX","type":"anchor","x":462.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":462.5,"y":550},"end":{"x":462.5,"y":530},"control1":{"x":462.5,"y":550},"control2":{"x":462.5,"y":530},"fill":false},{"type":2,"start":{"x":462.5,"y":530},"end":{"x":475,"y":510},"control1":{"x":470.8333333333333,"y":530},"control2":{"x":475,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":475,"y":510},"end":{"x":475,"y":50},"control1":{"x":475,"y":510},"control2":{"x":475,"y":50},"fill":false},{"type":2,"start":{"x":475,"y":50},"end":{"x":525,"y":50},"control1":{"x":475,"y":50},"control2":{"x":525,"y":50},"fill":false},{"type":2,"start":{"x":525,"y":50},"end":{"x":525,"y":510},"control1":{"x":525,"y":50},"control2":{"x":525,"y":510},"fill":false},{"type":2,"start":{"x":525,"y":510},"end":{"x":537.5,"y":530},"control1":{"x":525,"y":523.3333333333333},"control2":{"x":529.1666666666666,"y":530},"fill":false},{"type":2,"start":{"x":537.5,"y":530},"end":{"x":537.5,"y":550},"control1":{"x":537.5,"y":530},"control2":{"x":537.5,"y":550},"fill":false},{"type":2,"start":{"x":537.5,"y":550},"end":{"x":462.5,"y":550},"control1":{"x":537.5,"y":550},"control2":{"x":462.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":46.25,"y":25},"end":{"x":46.25,"y":27},"control1":{"x":46.25,"y":25},"control2":{"x":46.25,"y":27},"fill":false},{"type":2,"start":{"x":46.25,"y":27},"end":{"x":47.5,"y":29},"control1":{"x":47.083333333333336,"y":27},"control2":{"x":47.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":47.5,"y":29},"end":{"x":47.5,"y":75},"control1":{"x":47.5,"y":29},"control2":{"x":47.5,"y":75},"fill":false},{"type":2,"start":{"x":47.5,"y":75},"end":{"x":52.5,"y":75},"control1":{"x":47.5,"y":75},"control2":{"x":52.5,"y":75},"fill":false},{"type":2,"start":{"x":52.5,"y":75},"end":{"x":52.5,"y":29},"control1":{"x":52.5,"y":75},"control2":{"x":52.5,"y":29},"fill":false},{"type":2,"start":{"x":52.5,"y":29},"end":{"x":53.75,"y":27},"control1":{"x":52.5,"y":27.66666666666667},"control2":{"x":52.916666666666664,"y":27},"fill":false},{"type":2,"start":{"x":53.75,"y":27},"end":{"x":53.75,"y":25},"control1":{"x":53.75,"y":27},"control2":{"x":53.75,"y":25},"fill":false},{"type":2,"start":{"x":53.75,"y":25},"end":{"x":46.25,"y":25},"control1":{"x":53.75,"y":25},"control2":{"x":46.25,"y":25},"fill":false}]}]}},"ox":0,"oy":0,"usedInCharacter":true}],"groups":[],"orderedList":[{"type":"component","uuid":"d6ChMzL0_BM7NNnxvt0JO"}],"selectedComponentsUUIDs":["d6ChMzL0_BM7NNnxvt0JO"],"script":"function script_hOFWdexiWlQNyLRUyin3G (character, constants, FP) {\n\t//Todo something\n}","view":{"zoom":100,"translateX":0,"translateY":0},"info":{"gridSettings":{"dx":0,"dy":0,"centerSquareSize":333.3333333333333,"size":1000,"default":true},"useSkeletonGrid":false,"layout":"","layoutTree":[]}}],"name":"untitled","width":1000,"height":1000,"saved":false,"iconsCount":0,"fontSettings":{"unitsPerEm":1000,"ascender":800,"descender":-200,"tables":{"head":{"majorVersion":1,"minorVersion":0,"fontRevision":65536,"flags":[true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false],"created":{"timestamp":3827363330,"value":1744518530989},"modified":{"timestamp":3827363330,"value":1744518530989},"macStyle":[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],"lowestRecPPEM":7,"fontDirectionHint":2},"hhea":{"majorVersion":1,"minorVersion":0,"lineGap":0,"caretSlopeRise":1,"caretSlopeRun":0,"caretOffset":0},"os2":{"version":5,"usWeightClass":400,"usWidthClass":5,"fsType":0,"ySubscriptXSize":650,"ySubscriptYSize":699,"ySubscriptXOffset":0,"ySubscriptYOffset":140,"ySuperscriptXSize":650,"ySuperscriptYSize":699,"ySuperscriptXOffset":0,"ySuperscriptYOffset":479,"yStrikeoutSize":49,"yStrikeoutPosition":258,"sFamilyClass":0,"panose":[0,0,0,0,0,0,0,0,0,0],"achVendID":"UKWN","fsSelection":[false,false,false,false,false,false,true,false,false,false],"usMaxContext":0,"usLowerOpticalPointSize":8,"usUpperOpticalPointSize":72},"name":[{"nameID":1,"nameLabel":"fontFamily","platformID":3,"encodingID":1,"langID":2052,"value":"untitled","default":true},{"nameID":1,"nameLabel":"fontFamily","platformID":3,"encodingID":1,"langID":1033,"value":"untitled","default":true},{"nameID":2,"nameLabel":"fontSubfamily","platformID":3,"encodingID":1,"langID":2052,"value":"常规体","default":true},{"nameID":2,"nameLabel":"fontSubfamily","platformID":3,"encodingID":1,"langID":1033,"value":"Regular","default":true},{"nameID":4,"nameLabel":"fullName","platformID":3,"encodingID":1,"langID":2052,"value":"untitled 常规体","default":true},{"nameID":4,"nameLabel":"fullName","platformID":3,"encodingID":1,"langID":1033,"value":"untitled Regular","default":true},{"nameID":5,"nameLabel":"version","platformID":3,"encodingID":1,"langID":2052,"value":"版本 1.0","default":true},{"nameID":5,"nameLabel":"version","platformID":3,"encodingID":1,"langID":1033,"value":"Version 1.0","default":true},{"nameID":6,"nameLabel":"postScriptName","platformID":3,"encodingID":1,"langID":2052,"value":"untitled-Regular","default":true},{"nameID":6,"nameLabel":"postScriptName","platformID":3,"encodingID":1,"langID":1033,"value":"untitled-Regular","default":true}],"post":{"version":196608,"italicAngle":0,"underlinePosition":0,"underlineThickness":0,"isFixedPitch":1,"minMemType42":0,"maxMemType42":0,"minMemType1":0,"maxMemType1":0}}}},"constants":[],"constantGlyphMap":{},"version":1,"glyphs":[],"stroke_glyphs":[{"uuid":"CAnu-QCv88jubN28nkm_D","type":"system","name":"横","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"vgVdDfK8pZQQeIzLjU4ZM","name":"长度","type":0,"value":500,"min":50,"max":1000},{"uuid":"9PlgKbxQ1QWyZsQ5uReWB","name":"字重","type":0,"value":50,"min":10,"max":100},{"uuid":"TZMq6hXE0fUenMVYG7l7O","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"cDQEFbiXNLbiCXxuLolzr","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"egVRd_VugdEHEuaP5FK7U","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"PhJPRtgpmMmHXVmGF0VP8","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"dPxdrk5HIpbqU8_OPtgcz","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"VNyz0v9nDnn1CQvMQIdv0","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"vcEVTlpvplikUiGe5dquV","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_CAnu_QCv88jubN28nkm_D (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 500\nconst params = {\n  length: glyph.getParam('长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('长度', _params.length)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end } = jointsMap\n  const length_range = glyph.getParamRange('长度')\n  const length = range(end.x - start.x, length_range)\n  return {\n    length,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const { length, skeletonRefPos } = params\n  const { weight } = global_params\n\n  let start, end\n  const start_ref = new FP.Joint(\n    'start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end_ref = new FP.Joint(\n    'end_ref',\n    {\n      x: start_ref.x + length,\n      y: start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x,\n        y: start_ref.y + weight / 2,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x,\n        y: end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x,\n        y: start_ref.y - weight / 2,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x,\n        y: end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x,\n        y: start_ref.y,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x,\n        y: end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(start_ref)\n  glyph.addJoint(end_ref)\n  glyph.addRefLine(refline(start_ref, end_ref, 'ref'))\n  \n  glyph.addJoint(start)\n  glyph.addJoint(end)\n\n  const skeleton = {\n    start,\n    end,\n  }\n  \n  glyph.addRefLine(refline(start, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton, global_params) => {\n  // 获取骨架以外的全局风格变量\n  const { start_style_type, start_style_value, weight } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n\n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  // 根据骨架计算轮廓关键点\n  const { start, end } = skeleton\n\n  // out指上侧（外侧）轮廓线\n  // in指下侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start: start, heng_end: end }, weight)\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制横的上侧轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  pen.lineTo(out_heng_end.x, out_heng_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_heng_end.x, in_heng_end.y)\n\n  // 绘制横的下侧轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":500,"uuid":"dXEkQcekpc-F2dNy9-3Cl","name":"start_ref"},{"_x":750,"_y":500,"uuid":"Uo8FwyukpS8OvjY2NV8XB","name":"end_ref"},{"_x":250,"_y":500,"uuid":"8wMHaXbyOz0duQiJGNcTE","name":"start"},{"_x":750,"_y":500,"uuid":"TJpiK_RwSpzeb_3UC1Llb","name":"end"}],"_reflines":[{"name":"start_ref-end_ref","start":"start_ref","end":"end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"}],"_components":[{"points":[{"uuid":"-E7JmvAQu1BrLAaxiTJp4","type":"anchor","x":250,"y":462.5,"origin":null},{"uuid":"HlaNpAzWBwkTvwUgyjZ0O","type":"control","x":250,"y":462.5,"origin":"-E7JmvAQu1BrLAaxiTJp4"},{"uuid":"RLoIVQi3WGM-5fUhQIAmh","type":"control","x":270,"y":462.5,"origin":"M2GdLFCN64-wwaqMJvHly"},{"uuid":"M2GdLFCN64-wwaqMJvHly","type":"anchor","x":270,"y":462.5,"origin":null},{"uuid":"JAg5SE7Ga_e7YiEgrK9CF","type":"control","x":270,"y":470.8333333333333,"origin":"M2GdLFCN64-wwaqMJvHly"},{"uuid":"d1tIOjeZ-c46O23c4hRr0","type":"control","x":276.6666666666667,"y":475,"origin":"uGU9AKqN1Zaxx7ZuFlYxA"},{"uuid":"uGU9AKqN1Zaxx7ZuFlYxA","type":"anchor","x":290,"y":475,"origin":null},{"uuid":"CFelMO-G-WKKpvwHT_J5g","type":"control","x":290,"y":475,"origin":"uGU9AKqN1Zaxx7ZuFlYxA"},{"uuid":"3GwJt0CMHSNY6liIOt6aU","type":"control","x":750,"y":475,"origin":"ETMGd2u7aQ_UBSOmRYAmN"},{"uuid":"ETMGd2u7aQ_UBSOmRYAmN","type":"anchor","x":750,"y":475,"origin":null},{"uuid":"V-aIifQesAPCU7I2A2Hqt","type":"control","x":750,"y":475,"origin":"ETMGd2u7aQ_UBSOmRYAmN"},{"uuid":"g6cEOT4Db2Xwp0uFm0hVa","type":"control","x":750,"y":525,"origin":"EcSlJL7OiWerNA6lp8WOS"},{"uuid":"EcSlJL7OiWerNA6lp8WOS","type":"anchor","x":750,"y":525,"origin":null},{"uuid":"z6TZoPRrY7su2-ZEgAtXG","type":"control","x":750,"y":525,"origin":"EcSlJL7OiWerNA6lp8WOS"},{"uuid":"UyW_8i5ubWgpo7AIEddIm","type":"control","x":290,"y":525,"origin":"xvO3-JZ3preiOPHCe2jRh"},{"uuid":"xvO3-JZ3preiOPHCe2jRh","type":"anchor","x":290,"y":525,"origin":null},{"uuid":"hkXcKuLRVNlEpyd9wu4P2","type":"control","x":276.6666666666667,"y":525,"origin":"xvO3-JZ3preiOPHCe2jRh"},{"uuid":"LwGuHWpGa25D4PfxpSa1J","type":"control","x":270,"y":529.1666666666666,"origin":"pspLrwkHLsCd6nlN6T0T_"},{"uuid":"pspLrwkHLsCd6nlN6T0T_","type":"anchor","x":270,"y":537.5,"origin":null},{"uuid":"6tnIC7Nq_8MoZjJXvU2bH","type":"control","x":270,"y":537.5,"origin":"pspLrwkHLsCd6nlN6T0T_"},{"uuid":"TqPWTgvjaQMBpS8XnEVtO","type":"control","x":250,"y":537.5,"origin":"fkIFtH5Jvn650KiyTmxNm"},{"uuid":"fkIFtH5Jvn650KiyTmxNm","type":"anchor","x":250,"y":537.5,"origin":null},{"uuid":"0QRvtTZLGlLrNa9Qp_Xko","type":"control","x":250,"y":537.5,"origin":"fkIFtH5Jvn650KiyTmxNm"},{"uuid":"VZWDAgaz99hvQjQ10UMMV","type":"control","x":250,"y":462.5,"origin":"AtlLNukUSYqQ8zQElttoH"},{"uuid":"AtlLNukUSYqQ8zQElttoH","type":"anchor","x":250,"y":462.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":337.5},"end":{"x":270,"y":337.5},"control1":{"x":250,"y":337.5},"control2":{"x":270,"y":337.5},"fill":false},{"type":2,"start":{"x":270,"y":337.5},"end":{"x":290,"y":325},"control1":{"x":270,"y":329.16666666666674},"control2":{"x":276.6666666666667,"y":325},"fill":false},{"type":2,"start":{"x":290,"y":325},"end":{"x":750,"y":325},"control1":{"x":290,"y":325},"control2":{"x":750,"y":325},"fill":false},{"type":2,"start":{"x":750,"y":325},"end":{"x":750,"y":275},"control1":{"x":750,"y":325},"control2":{"x":750,"y":275},"fill":false},{"type":2,"start":{"x":750,"y":275},"end":{"x":290,"y":275},"control1":{"x":750,"y":275},"control2":{"x":290,"y":275},"fill":false},{"type":2,"start":{"x":290,"y":275},"end":{"x":270,"y":262.5},"control1":{"x":276.6666666666667,"y":275},"control2":{"x":270,"y":270.83333333333337},"fill":false},{"type":2,"start":{"x":270,"y":262.5},"end":{"x":250,"y":262.5},"control1":{"x":270,"y":262.5},"control2":{"x":250,"y":262.5},"fill":false},{"type":2,"start":{"x":250,"y":262.5},"end":{"x":250,"y":337.5},"control1":{"x":250,"y":262.5},"control2":{"x":250,"y":337.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":46.25},"end":{"x":27,"y":46.25},"control1":{"x":25,"y":46.25},"control2":{"x":27,"y":46.25},"fill":false},{"type":2,"start":{"x":27,"y":46.25},"end":{"x":29,"y":47.5},"control1":{"x":27,"y":47.083333333333336},"control2":{"x":27.66666666666667,"y":47.5},"fill":false},{"type":2,"start":{"x":29,"y":47.5},"end":{"x":75,"y":47.5},"control1":{"x":29,"y":47.5},"control2":{"x":75,"y":47.5},"fill":false},{"type":2,"start":{"x":75,"y":47.5},"end":{"x":75,"y":52.5},"control1":{"x":75,"y":47.5},"control2":{"x":75,"y":52.5},"fill":false},{"type":2,"start":{"x":75,"y":52.5},"end":{"x":29,"y":52.5},"control1":{"x":75,"y":52.5},"control2":{"x":29,"y":52.5},"fill":false},{"type":2,"start":{"x":29,"y":52.5},"end":{"x":27,"y":53.75},"control1":{"x":27.66666666666667,"y":52.5},"control2":{"x":27,"y":52.916666666666664},"fill":false},{"type":2,"start":{"x":27,"y":53.75},"end":{"x":25,"y":53.75},"control1":{"x":27,"y":53.75},"control2":{"x":25,"y":53.75},"fill":false},{"type":2,"start":{"x":25,"y":53.75},"end":{"x":25,"y":46.25},"control1":{"x":25,"y":53.75},"control2":{"x":25,"y":46.25},"fill":false}]}]}},{"uuid":"EUF-rki8LAIhQjxS23mlB","type":"system","name":"竖","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Qtn7LXUiRD4EaI5TuHwgd","name":"长度","type":0,"value":500,"min":50,"max":1000},{"uuid":"o3JpjVgjQApupOMm_y3db","name":"字重","type":0,"value":50,"min":10,"max":100},{"uuid":"nK7PAegeIqQcr-Kl7P1b-","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"mVu3fs4_EJy1_2dDJiBvh","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"Un1fpNXItfsEZEP6xS0Iw","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"3YUbcOipZLRvpnfnJtvVC","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"B3lVxpDCKx_SZtAGyLc9T","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"PdmYRWOqYBRt1ENft-WG6","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"90AbkybI27kJhAZ8Qi54u","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_EUF_rki8LAIhQjxS23mlB (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 500\nconst y0 = 250\nconst params = {\n  length: glyph.getParam('长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('长度', _params.length)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end } = jointsMap\n  const length_range = glyph.getParamRange('长度')\n  const length = range(end.y - start.y, length_range)\n  return {\n    length,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    length,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  let start, end\n  const start_ref = new FP.Joint(\n    'start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end_ref = new FP.Joint(\n    'end_ref',\n    {\n      x: start_ref.x,\n      y: start_ref.y + length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x - weight / 2,\n        y: start_ref.y,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x - weight / 2,\n        y: end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x + weight / 2,\n        y: start_ref.y,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x + weight / 2,\n        y: end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    start = new FP.Joint(\n      'start',\n      {\n        x: start_ref.x,\n        y: start_ref.y,\n      },\n    )\n    end = new FP.Joint(\n      'end',\n      {\n        x: end_ref.x,\n        y: end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(start_ref)\n  glyph.addJoint(end_ref)\n  glyph.addRefLine(refline(start_ref, end_ref, 'ref'))\n  \n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  \n  const skeleton = {\n    start,\n    end,\n  }\n  \n  glyph.addRefLine(refline(start, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  // 根据骨架计算轮廓关键点\n  const { start, end } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start: start, shu_end: end }, weight, {\n    unticlockwise: true,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  pen.lineTo(out_shu_end.x, out_shu_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_shu_end.x, in_shu_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x + start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":500,"_y":250,"uuid":"4yuPUIhXXW3vrDzDBrtWC","name":"start_ref"},{"_x":500,"_y":750,"uuid":"bepXr4EIn00fSHgWkwUBG","name":"end_ref"},{"_x":500,"_y":250,"uuid":"Up47kBffILvfMcCbyJfVT","name":"start"},{"_x":500,"_y":750,"uuid":"PkMwFgXm8B2qKO7NMh8UC","name":"end"}],"_reflines":[{"name":"start_ref-end_ref","start":"start_ref","end":"end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"}],"_components":[{"points":[{"uuid":"mNyFudgxaTAr_wVWTiNag","type":"anchor","x":462.5,"y":250,"origin":null},{"uuid":"Z00-ZnBzNkL0Hsb3Zlb8s","type":"control","x":462.5,"y":250,"origin":"mNyFudgxaTAr_wVWTiNag"},{"uuid":"R_Rg-WM0RXk8FJwJj-k_G","type":"control","x":462.5,"y":270,"origin":"ytLxYAtX605vtvI1Y8Ap6"},{"uuid":"ytLxYAtX605vtvI1Y8Ap6","type":"anchor","x":462.5,"y":270,"origin":null},{"uuid":"Rwx1oGWeW5uKAtI-Zh78x","type":"control","x":470.8333333333333,"y":270,"origin":"ytLxYAtX605vtvI1Y8Ap6"},{"uuid":"868VlnkP6WCAfGTCJkjI-","type":"control","x":475,"y":276.6666666666667,"origin":"yX_J-Gb7w7KLeHh0taud-"},{"uuid":"yX_J-Gb7w7KLeHh0taud-","type":"anchor","x":475,"y":290,"origin":null},{"uuid":"1OR8Yu2ajbvYF9y730XcW","type":"control","x":475,"y":290,"origin":"yX_J-Gb7w7KLeHh0taud-"},{"uuid":"ua1tiis7-1tOWTApzA2gw","type":"control","x":475,"y":750,"origin":"mk3O6e5YLlP_Qcns79Mav"},{"uuid":"mk3O6e5YLlP_Qcns79Mav","type":"anchor","x":475,"y":750,"origin":null},{"uuid":"twz3l695u-EWWlohE9cDS","type":"control","x":475,"y":750,"origin":"mk3O6e5YLlP_Qcns79Mav"},{"uuid":"sCIUQjGH3BVn2TmkVibwz","type":"control","x":525,"y":750,"origin":"sSX3e5cbjx1mnEFHZVchm"},{"uuid":"sSX3e5cbjx1mnEFHZVchm","type":"anchor","x":525,"y":750,"origin":null},{"uuid":"80y4XXoar5JuSF0S_8cJ0","type":"control","x":525,"y":750,"origin":"sSX3e5cbjx1mnEFHZVchm"},{"uuid":"LApyTgq6iRCDZWN_2oWL0","type":"control","x":525,"y":290,"origin":"hXfBSFfuafh88rUC3Uydo"},{"uuid":"hXfBSFfuafh88rUC3Uydo","type":"anchor","x":525,"y":290,"origin":null},{"uuid":"eqVLLKfxMAhH2F41w8zdB","type":"control","x":525,"y":276.6666666666667,"origin":"hXfBSFfuafh88rUC3Uydo"},{"uuid":"vP8qTFpAfKMSdiKDILJlj","type":"control","x":529.1666666666666,"y":270,"origin":"4umnLFcLG60gE9dvK_30S"},{"uuid":"4umnLFcLG60gE9dvK_30S","type":"anchor","x":537.5,"y":270,"origin":null},{"uuid":"p1XGYohvbpN_BSlPD7-5O","type":"control","x":537.5,"y":270,"origin":"4umnLFcLG60gE9dvK_30S"},{"uuid":"eUWO73VcTVPQsBRY2W-TU","type":"control","x":537.5,"y":250,"origin":"2_tusPs7OvgzBrwsU66zy"},{"uuid":"2_tusPs7OvgzBrwsU66zy","type":"anchor","x":537.5,"y":250,"origin":null},{"uuid":"uIPp3opa3pB2r52Cb9ryU","type":"control","x":537.5,"y":250,"origin":"2_tusPs7OvgzBrwsU66zy"},{"uuid":"_Njl5ZtMGtQHlzwGmKIdq","type":"control","x":462.5,"y":250,"origin":"9D8pectxtibEddTd2_Ydw"},{"uuid":"9D8pectxtibEddTd2_Ydw","type":"anchor","x":462.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":462.5,"y":550},"end":{"x":462.5,"y":530},"control1":{"x":462.5,"y":550},"control2":{"x":462.5,"y":530},"fill":false},{"type":2,"start":{"x":462.5,"y":530},"end":{"x":475,"y":510},"control1":{"x":470.8333333333333,"y":530},"control2":{"x":475,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":475,"y":510},"end":{"x":475,"y":50},"control1":{"x":475,"y":510},"control2":{"x":475,"y":50},"fill":false},{"type":2,"start":{"x":475,"y":50},"end":{"x":525,"y":50},"control1":{"x":475,"y":50},"control2":{"x":525,"y":50},"fill":false},{"type":2,"start":{"x":525,"y":50},"end":{"x":525,"y":510},"control1":{"x":525,"y":50},"control2":{"x":525,"y":510},"fill":false},{"type":2,"start":{"x":525,"y":510},"end":{"x":537.5,"y":530},"control1":{"x":525,"y":523.3333333333333},"control2":{"x":529.1666666666666,"y":530},"fill":false},{"type":2,"start":{"x":537.5,"y":530},"end":{"x":537.5,"y":550},"control1":{"x":537.5,"y":530},"control2":{"x":537.5,"y":550},"fill":false},{"type":2,"start":{"x":537.5,"y":550},"end":{"x":462.5,"y":550},"control1":{"x":537.5,"y":550},"control2":{"x":462.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":46.25,"y":25},"end":{"x":46.25,"y":27},"control1":{"x":46.25,"y":25},"control2":{"x":46.25,"y":27},"fill":false},{"type":2,"start":{"x":46.25,"y":27},"end":{"x":47.5,"y":29},"control1":{"x":47.083333333333336,"y":27},"control2":{"x":47.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":47.5,"y":29},"end":{"x":47.5,"y":75},"control1":{"x":47.5,"y":29},"control2":{"x":47.5,"y":75},"fill":false},{"type":2,"start":{"x":47.5,"y":75},"end":{"x":52.5,"y":75},"control1":{"x":47.5,"y":75},"control2":{"x":52.5,"y":75},"fill":false},{"type":2,"start":{"x":52.5,"y":75},"end":{"x":52.5,"y":29},"control1":{"x":52.5,"y":75},"control2":{"x":52.5,"y":29},"fill":false},{"type":2,"start":{"x":52.5,"y":29},"end":{"x":53.75,"y":27},"control1":{"x":52.5,"y":27.66666666666667},"control2":{"x":52.916666666666664,"y":27},"fill":false},{"type":2,"start":{"x":53.75,"y":27},"end":{"x":53.75,"y":25},"control1":{"x":53.75,"y":27},"control2":{"x":53.75,"y":25},"fill":false},{"type":2,"start":{"x":53.75,"y":25},"end":{"x":46.25,"y":25},"control1":{"x":53.75,"y":25},"control2":{"x":46.25,"y":25},"fill":false}]}]}},{"uuid":"qSgbd1e6kydvFHcX-jL4b","type":"system","name":"撇","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"W0-m3NLDru_SbBkpA6rUz","name":"水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"nYBXmQoQuoJVRAewXAYLS","name":"竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"aXQ4l4lP8tHJ4o2IyOWgH","name":"弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"tTNdOXIAtehyx8WbL5AhO","name":"弯曲度","type":0,"value":150,"min":0,"max":500},{"uuid":"j3UfDxIccj89tx6TLwjL5","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"ggzuZh_1yYIp-Bu7TR1Q2","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"vCSwUBZu7ls-HpOs_azag","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"1MN-HKdgxg1JauQYSvbYA","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"PvcAB05TGz3pKyO6GuTqM","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"DVkg3m4PXcIugbZUiidDg","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"IZ1WPNAekoilJHBSaEnQF","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"1MLy8JL7Bvs_lHYlcbf7N","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_qSgbd1e6kydvFHcX_jL4b (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 750\nconst y0 = 250\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  horizonalSpan: glyph.getParam('水平延伸'),\n  verticalSpan: glyph.getParam('竖直延伸'),\n  bendCursor: glyph.getParam('弯曲游标'),\n  bendDegree: glyph.getParam('弯曲度') + 30 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'bend': {\n      jointsMap['bend'] = {\n        x: glyph.tempData['bend'].x + deltaX,\n        y: glyph.tempData['bend'].y + deltaY,\n      }\n      break\n    }\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['start'], jointsMap['end'])\n      jointsMap['bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { bendCursor, bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x - bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x + bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('水平延伸', _params.horizonalSpan)\n  glyph.setParam('竖直延伸', _params.verticalSpan)\n  glyph.setParam('弯曲游标', _params.bendCursor)\n  glyph.setParam('弯曲度', _params.bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end, bend } = jointsMap\n  const horizonal_span_range = glyph.getParamRange('水平延伸')\n  const vertical_span_range = glyph.getParamRange('竖直延伸')\n  const bend_cursor_range = glyph.getParamRange('弯曲游标')\n  const bend_degree_range = glyph.getParamRange('弯曲度')\n  const horizonalSpan = range(start.x - end.x, horizonal_span_range)\n  const verticalSpan = range(end.y - start.y, vertical_span_range)\n  const data = FP.distanceAndFootPoint(start, end, bend)\n  const bendCursor = range(data.percentageFromA, bend_cursor_range)\n  const bendDegree = range(data.distance, bend_degree_range)\n  return {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  } = params\n\n  const start = new FP.Joint(\n    'start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end = new FP.Joint(\n    'end',\n    {\n      x: start.x - horizonalSpan,\n      y: start.y + verticalSpan,\n    },\n  )\n  \n  const length = distance(start, end)\n  const cursor_x = start.x - bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = new FP.Joint(\n    'bend',\n    {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y + bendDegree * Math.cos(angle),\n    },\n  )\n  \n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  glyph.addJoint(bend)\n  \n  const skeleton = {\n    start,\n    end,\n    bend,\n  }\n  \n  glyph.addRefLine(refline(start, bend))\n  glyph.addRefLine(refline(bend, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const { start, bend, end } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start: start, pie_bend: bend, pie_end: end }, weight, {\n    weightsVariation: 'pow',\n    weightsVariationDir: 'reverse',\n    weightsVariationPower: weights_variation_power,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制横的右侧轮廓\n  pen.moveTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n  for (let i = 0; i < out_pie_curves.length; i++) {\n    const curve = out_pie_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_pie_curves[in_pie_curves.length - 1].end.x, in_pie_curves[in_pie_curves.length - 1].end.y)\n\n  // 绘制横的左侧轮廓\n  for (let i = in_pie_curves.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":750,"_y":250,"uuid":"3cAx3hgddOMtWPehvh1uk","name":"start"},{"_x":250,"_y":750,"uuid":"aSAjCy_Ua8dMloDd9fBL4","name":"end"},{"_x":627.2792206135786,"_y":627.2792206135786,"uuid":"nq5WRVkEji3KQ2xJRtHCZ","name":"bend"}],"_reflines":[{"name":"start-bend","start":"start","end":"bend"},{"name":"bend-end","start":"bend","end":"end"}],"_components":[{"points":[{"uuid":"XB4Uv1dub8kQQS7eeVvth","type":"anchor","x":773.7739054360176,"y":257.73313780552843,"origin":null},{"uuid":"21MpbSmgdjPn4nOHr7I2x","type":"control","x":688.5537488260418,"y":516.1602799051773,"origin":"XB4Uv1dub8kQQS7eeVvth"},{"uuid":"7Ss_y8FeWKg8sqZYvghc2","type":"control","x":516.1602799051741,"y":688.553748826039,"origin":"19L355QoD-AFLZxj-gax5"},{"uuid":"19L355QoD-AFLZxj-gax5","type":"anchor","x":257.73313780552843,"y":773.7739054360176,"origin":null},{"uuid":"_CLo99gI-IUJHKiJG7aaz","type":"control","x":257.73313780552843,"y":773.7739054360176,"origin":"19L355QoD-AFLZxj-gax5"},{"uuid":"-B-0k66t9hcAjYZcQ0Md3","type":"control","x":242.26686219447157,"y":726.2260945639824,"origin":"cthZs8H8ZVbsZL_edl3_W"},{"uuid":"cthZs8H8ZVbsZL_edl3_W","type":"anchor","x":242.26686219447157,"y":726.2260945639824,"origin":null},{"uuid":"eYOt2cNuv36aNDMDass4e","type":"control","x":485.42478105197296,"y":646.0413041277941,"origin":"cthZs8H8ZVbsZL_edl3_W"},{"uuid":"B6CKRxpBKAB9P8-m_4NWO","type":"control","x":646.0413041277972,"y":485.4247810519752,"origin":"-_6bnqqTK6qaXzhHwF81g"},{"uuid":"-_6bnqqTK6qaXzhHwF81g","type":"anchor","x":726.2260945639824,"y":242.26686219447157,"origin":null},{"uuid":"hjoZ2iS5i1RVThHXrXt1J","type":"control","x":726.2260945639824,"y":242.26686219447157,"origin":"-_6bnqqTK6qaXzhHwF81g"},{"uuid":"T0K7c5wGbWRZ9LBKMoi-b","type":"control","x":773.7739054360176,"y":257.73313780552843,"origin":"VsR4_zF_ZQW6HAozix3RN"},{"uuid":"VsR4_zF_ZQW6HAozix3RN","type":"anchor","x":773.7739054360176,"y":257.73313780552843,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":773.7739054360176,"y":542.2668621944715},"end":{"x":257.73313780552843,"y":26.22609456398243},"control1":{"x":688.5537488260418,"y":283.8397200948227},"control2":{"x":516.1602799051741,"y":111.44625117396095},"fill":false},{"type":2,"start":{"x":257.73313780552843,"y":26.22609456398243},"end":{"x":242.26686219447157,"y":73.77390543601757},"control1":{"x":257.73313780552843,"y":26.22609456398243},"control2":{"x":242.26686219447157,"y":73.77390543601757},"fill":false},{"type":2,"start":{"x":242.26686219447157,"y":73.77390543601757},"end":{"x":726.2260945639824,"y":557.7331378055285},"control1":{"x":485.42478105197296,"y":153.9586958722059},"control2":{"x":646.0413041277972,"y":314.5752189480248},"fill":false},{"type":2,"start":{"x":726.2260945639824,"y":557.7331378055285},"end":{"x":773.7739054360176,"y":542.2668621944715},"control1":{"x":726.2260945639824,"y":557.7331378055285},"control2":{"x":773.7739054360176,"y":542.2668621944715},"fill":false}],"preview":[{"type":2,"start":{"x":77.37739054360176,"y":25.773313780552844},"end":{"x":25.773313780552844,"y":77.37739054360176},"control1":{"x":68.85537488260418,"y":51.61602799051773},"control2":{"x":51.61602799051741,"y":68.85537488260391},"fill":false},{"type":2,"start":{"x":25.773313780552844,"y":77.37739054360176},"end":{"x":24.22668621944716,"y":72.62260945639825},"control1":{"x":25.773313780552844,"y":77.37739054360176},"control2":{"x":24.22668621944716,"y":72.62260945639825},"fill":false},{"type":2,"start":{"x":24.22668621944716,"y":72.62260945639825},"end":{"x":72.62260945639825,"y":24.22668621944716},"control1":{"x":48.5424781051973,"y":64.60413041277941},"control2":{"x":64.60413041277972,"y":48.54247810519752},"fill":false},{"type":2,"start":{"x":72.62260945639825,"y":24.22668621944716},"end":{"x":77.37739054360176,"y":25.773313780552844},"control1":{"x":72.62260945639825,"y":24.22668621944716},"control2":{"x":77.37739054360176,"y":25.773313780552844},"fill":false}]}]}},{"uuid":"no8OaF2yeNMwhGd105h2q","type":"system","name":"竖撇","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"SKkjxWPu2FaisonGQex5m","name":"竖-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"0_ieOh67fnPxRP50EF0Xd","name":"撇-水平延伸","type":0,"value":200,"min":0,"max":1000},{"uuid":"1OQTWz5U3M_FoyjXxDrZ5","name":"撇-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"MXYv8rVKaNJyd35_iWIz2","name":"撇-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"j6OgN-TStFSY1ErJkD8Ff","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"ayoOeY7Gt4pQSmXpQMUzf","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"--Jah2rx6mp-AvRIN4o-5","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"zlDy9tiN_dPTl9TAStuh8","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"woCegCgWeKVORWmvjq0zI","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"HeZQASImEXpng6jSRE9iA","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"2nliT_hxcpnuj_t9TBewU","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"Cu61LZltmRhnT-2KpTiSK","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_no8OaF2yeNMwhGd105h2q (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 600\nconst y0 = 250\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  pie_bendCursor: glyph.getParam('撇-弯曲游标'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x,\n        y: glyph.tempData['pie_start'].y + deltaY,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x,\n        y: glyph.tempData['pie_start'].y + deltaY,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_bend': {\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'])\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲游标，所以依据现有参数计算新的bend\n  const { pie_bendCursor } = params\n  const verticalSpan = Math.abs(end.y - start.y)\n\n  const bend = {\n    x: start.x,\n    y: start.y + pie_bendCursor * verticalSpan,\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('撇-弯曲游标', _params.pie_bendCursor)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, pie_start, pie_bend, pie_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const pie_bend_cursor_range = glyph.getParamRange('撇-弯曲游标')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const pie_bendCursor = range((pie_bend.y - pie_start.y) / pie_verticalSpan, pie_bend_cursor_range)\n  return {\n    shu_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  let shu_start, shu_end\n  const shu_start_ref = new FP.Joint(\n    'shu_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end_ref = new FP.Joint(\n    'shu_end_ref',\n    {\n      x: shu_start_ref.x,\n      y: shu_start_ref.y + shu_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x - weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x - weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x + weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x + weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x,\n        y: shu_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(shu_start_ref)\n  glyph.addJoint(shu_end_ref)\n  glyph.addRefLine(refline(shu_start_ref, shu_end_ref, 'ref'))\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const pie_bend = new FP.Joint(\n    'pie_bend',\n    {\n      x: pie_start.x,\n      y: pie_start.y + pie_bendCursor * pie_verticalSpan,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(pie_bend)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(pie_start, pie_bend))\n  glyph.addRefLine(refline(pie_bend, pie_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight)\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start, pie_bend, pie_end }, weight)\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  pen.lineTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n  for (let i = 0; i < out_pie_curves.length; i++) {\n    const curve = out_pie_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_pie_curves[in_pie_curves.length - 1].end.x, in_pie_curves[in_pie_curves.length - 1].end.y)\n\n  // 绘制左侧（内侧）轮廓\n  for (let i = in_pie_curves.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x - start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":600,"_y":250,"uuid":"q43V5cQcwwHRnRLhVM3wl","name":"shu_start_ref"},{"_x":600,"_y":450,"uuid":"fDzv9TwoypLcDGJdq1E1z","name":"shu_end_ref"},{"_x":600,"_y":250,"uuid":"IhfwaLjHsjUJT2owKulW4","name":"shu_start"},{"_x":600,"_y":450,"uuid":"LnNBuPF4RzoxL7epG2oJ_","name":"shu_end"},{"_x":600,"_y":450,"uuid":"OBE5YwExaL9eLuTdB8JXP","name":"pie_start"},{"_x":400,"_y":750,"uuid":"d31L_vTeNeST8LQwJ_eRG","name":"pie_end"},{"_x":600,"_y":600,"uuid":"Tav2IgMs2hP8loDu6Yh3J","name":"pie_bend"}],"_reflines":[{"name":"shu_start_ref-shu_end_ref","start":"shu_start_ref","end":"shu_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"pie_start-pie_bend","start":"pie_start","end":"pie_bend"},{"name":"pie_bend-pie_end","start":"pie_bend","end":"pie_end"}],"_components":[{"points":[{"uuid":"CTvWU_8rMZrJLIQVbWFIo","type":"anchor","x":637.5,"y":250,"origin":null},{"uuid":"uKcMva_EECFOM75radRDE","type":"control","x":637.5,"y":250,"origin":"CTvWU_8rMZrJLIQVbWFIo"},{"uuid":"SBqBZ8fNArNoK1qFdWNSJ","type":"control","x":637.5,"y":270,"origin":"tNRczQyKtvluTYn9LTc2v"},{"uuid":"tNRczQyKtvluTYn9LTc2v","type":"anchor","x":637.5,"y":270,"origin":null},{"uuid":"qfcaOnBk3StvgGOWE5mhZ","type":"control","x":629.1666666666666,"y":270,"origin":"tNRczQyKtvluTYn9LTc2v"},{"uuid":"TBJb0oO7ngW749sWRoZGv","type":"control","x":625,"y":276.6666666666667,"origin":"ea39QOlMJSLrc_T5U5nr1"},{"uuid":"ea39QOlMJSLrc_T5U5nr1","type":"anchor","x":625,"y":290,"origin":null},{"uuid":"j-R-VBBChoYjLT74ctFkJ","type":"control","x":625,"y":290,"origin":"ea39QOlMJSLrc_T5U5nr1"},{"uuid":"KbRhh3ilYrNt26f6c1YEp","type":"control","x":625,"y":450,"origin":"neeXhphtNG7WHSYvrxmUq"},{"uuid":"neeXhphtNG7WHSYvrxmUq","type":"anchor","x":625,"y":450,"origin":null},{"uuid":"A563jmPJ0vrZl53WWN5xq","type":"control","x":624.0882014609022,"y":586.7703886304944,"origin":"neeXhphtNG7WHSYvrxmUq"},{"uuid":"QBQsfsPQCXMAqz5mciSd-","type":"control","x":516.967686661835,"y":693.139905395569,"origin":"iZC_hs3r536q0BSvYRhg_"},{"uuid":"iZC_hs3r536q0BSvYRhg_","type":"anchor","x":415,"y":770,"origin":null},{"uuid":"m9d0pTK_B4zJEr40McmAX","type":"control","x":415,"y":770,"origin":"iZC_hs3r536q0BSvYRhg_"},{"uuid":"0TRpoJ_YvWsl29iluuo28","type":"control","x":385,"y":730,"origin":"kTlO86uXXuDGTb5MryD1V"},{"uuid":"kTlO86uXXuDGTb5MryD1V","type":"anchor","x":385,"y":730,"origin":null},{"uuid":"2RFfTTZYe3QNNDBo50n1p","type":"control","x":473.4032772567143,"y":663.3643905239362,"origin":"kTlO86uXXuDGTb5MryD1V"},{"uuid":"LYiEHCbkzZmDPu7XlkYoe","type":"control","x":574.2016842882491,"y":569.7466916290307,"origin":"leaTALtAg5YL5CBe5O0gM"},{"uuid":"leaTALtAg5YL5CBe5O0gM","type":"anchor","x":575,"y":450,"origin":null},{"uuid":"aUfJ_F-42v6jsEMySwiwq","type":"control","x":575,"y":450,"origin":"leaTALtAg5YL5CBe5O0gM"},{"uuid":"3OKXlnY6CenMGIYdE1-mx","type":"control","x":575,"y":290,"origin":"hCLIfeibbZlgEnNk43gW7"},{"uuid":"hCLIfeibbZlgEnNk43gW7","type":"anchor","x":575,"y":290,"origin":null},{"uuid":"Hjs_Ba7k87GRGTTKjKInb","type":"control","x":575,"y":276.6666666666667,"origin":"hCLIfeibbZlgEnNk43gW7"},{"uuid":"7sGEM6edh_wSn38JOUVPG","type":"control","x":570.8333333333334,"y":270,"origin":"CcHblRfhwaF0Bw8VoQaqx"},{"uuid":"CcHblRfhwaF0Bw8VoQaqx","type":"anchor","x":562.5,"y":270,"origin":null},{"uuid":"XEPSQAVFFsqMmm4iHgQbE","type":"control","x":562.5,"y":270,"origin":"CcHblRfhwaF0Bw8VoQaqx"},{"uuid":"cevNBY18jc0HO94pDT6l8","type":"control","x":562.5,"y":250,"origin":"-qGDnI18I_GmKzDRcCoHA"},{"uuid":"-qGDnI18I_GmKzDRcCoHA","type":"anchor","x":562.5,"y":250,"origin":null},{"uuid":"iZk-clLL9r20Gn7OVF9Xb","type":"control","x":562.5,"y":250,"origin":"-qGDnI18I_GmKzDRcCoHA"},{"uuid":"dGw2utn2zecd7l-g9Wal5","type":"control","x":637.5,"y":250,"origin":"06g5c7JpZ8sI0ztcWnMzm"},{"uuid":"06g5c7JpZ8sI0ztcWnMzm","type":"anchor","x":637.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":637.5,"y":550},"end":{"x":637.5,"y":530},"control1":{"x":637.5,"y":550},"control2":{"x":637.5,"y":530},"fill":false},{"type":2,"start":{"x":637.5,"y":530},"end":{"x":625,"y":510},"control1":{"x":629.1666666666666,"y":530},"control2":{"x":625,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":625,"y":510},"end":{"x":625,"y":350},"control1":{"x":625,"y":510},"control2":{"x":625,"y":350},"fill":false},{"type":2,"start":{"x":625,"y":350},"end":{"x":415,"y":30},"control1":{"x":624.0882014609022,"y":213.22961136950562},"control2":{"x":516.967686661835,"y":106.86009460443097},"fill":false},{"type":2,"start":{"x":415,"y":30},"end":{"x":385,"y":70},"control1":{"x":415,"y":30},"control2":{"x":385,"y":70},"fill":false},{"type":2,"start":{"x":385,"y":70},"end":{"x":575,"y":350},"control1":{"x":473.4032772567143,"y":136.6356094760638},"control2":{"x":574.2016842882491,"y":230.2533083709693},"fill":false},{"type":2,"start":{"x":575,"y":350},"end":{"x":575,"y":510},"control1":{"x":575,"y":350},"control2":{"x":575,"y":510},"fill":false},{"type":2,"start":{"x":575,"y":510},"end":{"x":562.5,"y":530},"control1":{"x":575,"y":523.3333333333333},"control2":{"x":570.8333333333334,"y":530},"fill":false},{"type":2,"start":{"x":562.5,"y":530},"end":{"x":562.5,"y":550},"control1":{"x":562.5,"y":530},"control2":{"x":562.5,"y":550},"fill":false},{"type":2,"start":{"x":562.5,"y":550},"end":{"x":637.5,"y":550},"control1":{"x":562.5,"y":550},"control2":{"x":637.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":63.75,"y":25},"end":{"x":63.75,"y":27},"control1":{"x":63.75,"y":25},"control2":{"x":63.75,"y":27},"fill":false},{"type":2,"start":{"x":63.75,"y":27},"end":{"x":62.5,"y":29},"control1":{"x":62.916666666666664,"y":27},"control2":{"x":62.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":62.5,"y":29},"end":{"x":62.5,"y":45},"control1":{"x":62.5,"y":29},"control2":{"x":62.5,"y":45},"fill":false},{"type":2,"start":{"x":62.5,"y":45},"end":{"x":41.5,"y":77},"control1":{"x":62.40882014609022,"y":58.67703886304944},"control2":{"x":51.69676866618351,"y":69.31399053955691},"fill":false},{"type":2,"start":{"x":41.5,"y":77},"end":{"x":38.5,"y":73},"control1":{"x":41.5,"y":77},"control2":{"x":38.5,"y":73},"fill":false},{"type":2,"start":{"x":38.5,"y":73},"end":{"x":57.5,"y":45},"control1":{"x":47.340327725671436,"y":66.33643905239363},"control2":{"x":57.420168428824915,"y":56.97466916290307},"fill":false},{"type":2,"start":{"x":57.5,"y":45},"end":{"x":57.5,"y":29},"control1":{"x":57.5,"y":45},"control2":{"x":57.5,"y":29},"fill":false},{"type":2,"start":{"x":57.5,"y":29},"end":{"x":56.25,"y":27},"control1":{"x":57.5,"y":27.66666666666667},"control2":{"x":57.08333333333334,"y":27},"fill":false},{"type":2,"start":{"x":56.25,"y":27},"end":{"x":56.25,"y":25},"control1":{"x":56.25,"y":27},"control2":{"x":56.25,"y":25},"fill":false},{"type":2,"start":{"x":56.25,"y":25},"end":{"x":63.75,"y":25},"control1":{"x":56.25,"y":25},"control2":{"x":63.75,"y":25},"fill":false}]}]}},{"uuid":"bzbXz-rq4GvQDNgash3Px","type":"system","name":"捺","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"tYRBxuUWNhD2p-pfJpp13","name":"水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"RxmHsv1pqMP7WWw5pKlfl","name":"竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"sxswIya3Qfifj277_U1JD","name":"弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"LkGqZYA8gAxaUvzTuCw4I","name":"弯曲度","type":0,"value":150,"min":0,"max":500},{"uuid":"HWkavn2V8xADxH8eh4JUv","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"HXs8iDlmzXZ0HGZ55onsa","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"dK3BCLSR8eKzrGBtBUneS","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"nVeGtn45l7q9qWoE8J3HS","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"UXfq70YLQEIKL9u5YJDBj","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"GBxmXuZw0gwz5nQO2a3DR","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"enpEcN_-3aMh0pSODFp-_","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"966u6u8e1lfBaGz2xP8o-","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_bzbXz_rq4GvQDNgash3Px (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 250\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  horizonalSpan: glyph.getParam('水平延伸'),\n  verticalSpan: glyph.getParam('竖直延伸'),\n  bendCursor: glyph.getParam('弯曲游标'),\n  bendDegree: glyph.getParam('弯曲度') + 30 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'bend': {\n      jointsMap['bend'] = {\n        x: glyph.tempData['bend'].x + deltaX,\n        y: glyph.tempData['bend'].y + deltaY,\n      }\n      break\n    }\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['start'], jointsMap['end'])\n      jointsMap['bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { bendCursor, bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('水平延伸', _params.horizonalSpan)\n  glyph.setParam('竖直延伸', _params.verticalSpan)\n  glyph.setParam('弯曲游标', _params.bendCursor)\n  glyph.setParam('弯曲度', _params.bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end, bend } = jointsMap\n  const horizonal_span_range = glyph.getParamRange('水平延伸')\n  const vertical_span_range = glyph.getParamRange('竖直延伸')\n  const bend_cursor_range = glyph.getParamRange('弯曲游标')\n  const bend_degree_range = glyph.getParamRange('弯曲度')\n  const horizonalSpan = range(end.x - start.x, horizonal_span_range)\n  const verticalSpan = range(end.y - start.y, vertical_span_range)\n  const data = FP.distanceAndFootPoint(start, end, bend)\n  const bendCursor = range(data.percentageFromA, bend_cursor_range)\n  const bendDegree = range(data.distance, bend_degree_range)\n  return {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  } = params\n\n  const start = new FP.Joint(\n    'start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end = new FP.Joint(\n    'end',\n    {\n      x: start.x + horizonalSpan,\n      y: start.y + verticalSpan,\n    },\n  )\n\n  const length = distance(start, end)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n\n  const bend = new FP.Joint(\n    'bend',\n    {\n      x: cursor_x - bendDegree * Math.sin(angle),\n      y: cursor_y + bendDegree * Math.cos(angle),\n    },\n  )\n\n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  glyph.addJoint(bend)\n\n  const skeleton = {\n    start,\n    bend,\n    end,\n  }\n\n  glyph.addRefLine(refline(start, bend))\n  glyph.addRefLine(refline(bend, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const { start, bend, end } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_na_curves, out_na_points, in_na_curves, in_na_points } = FP.getCurveContours('na', { na_start: start, na_bend: bend, na_end: end }, weight, {\n    unticlockwise: true,\n    weightsVariation: 'pow',\n    weightsVariationPower: weights_variation_power,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  pen.moveTo(out_na_curves[0].start.x, out_na_curves[0].start.y)\n  for (let i = 0; i < out_na_curves.length; i++) {\n    const curve = out_na_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_na_curves[in_na_curves.length - 1].end.x, in_na_curves[in_na_curves.length - 1].end.y)\n\n  // 绘制右侧（内侧）轮廓\n  for (let i = in_na_curves.length - 1; i >= 0; i--) {\n    const curve = in_na_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_na_curves[0].start.x, out_na_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":250,"uuid":"_bwnrvVBF6ZiteuG7u4uq","name":"start"},{"_x":750,"_y":750,"uuid":"5zPirADKsfSSfXbbTm8Yn","name":"end"},{"_x":372.72077938642144,"_y":627.2792206135786,"uuid":"o_Ld9ZGKuSg3Yr0dKoWQX","name":"bend"}],"_reflines":[{"name":"start-bend","start":"start","end":"bend"},{"name":"bend-end","start":"bend","end":"end"}],"_components":[{"points":[{"uuid":"NmcawTv-gda7ZcEaxgnQZ","type":"anchor","x":226.2260945639824,"y":257.73313780552843,"origin":null},{"uuid":"uBGfCiGKODQMqZX11JLH2","type":"control","x":311.446251173962,"y":516.1602799051775,"origin":"NmcawTv-gda7ZcEaxgnQZ"},{"uuid":"LjZ-nk0aVtuyFvI2Sqiyl","type":"control","x":483.8397200948219,"y":688.5537488260384,"origin":"91-Zf0z2WtbQz-ubJ5gG9"},{"uuid":"91-Zf0z2WtbQz-ubJ5gG9","type":"anchor","x":742.2668621944716,"y":773.7739054360176,"origin":null},{"uuid":"Lwn314lkv3fq5ETD4aRAZ","type":"control","x":742.2668621944716,"y":773.7739054360176,"origin":"91-Zf0z2WtbQz-ubJ5gG9"},{"uuid":"1wVP9IbO-CeWoDt26KP7q","type":"control","x":757.7331378055284,"y":726.2260945639824,"origin":"wxHgJLbic2bH0wwxf1LZt"},{"uuid":"wxHgJLbic2bH0wwxf1LZt","type":"anchor","x":757.7331378055284,"y":726.2260945639824,"origin":null},{"uuid":"v-2uEXGF4abyjdS98Rd8e","type":"control","x":514.5752189480228,"y":646.0413041277922,"origin":"wxHgJLbic2bH0wwxf1LZt"},{"uuid":"oFtGExhV2y6kxETrgWT8Q","type":"control","x":353.9586958722074,"y":485.42478105197756,"origin":"ZfTZB_LKy6pok2wvAy8Tb"},{"uuid":"ZfTZB_LKy6pok2wvAy8Tb","type":"anchor","x":273.77390543601757,"y":242.26686219447157,"origin":null},{"uuid":"pBmbY777sQJP40QvetGgk","type":"control","x":273.77390543601757,"y":242.26686219447157,"origin":"ZfTZB_LKy6pok2wvAy8Tb"},{"uuid":"1FIuKjgkBK65HmSns8PG6","type":"control","x":226.2260945639824,"y":257.73313780552843,"origin":"coRKqdhB_RHCIOxEnf_wT"},{"uuid":"coRKqdhB_RHCIOxEnf_wT","type":"anchor","x":226.2260945639824,"y":257.73313780552843,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":226.2260945639824,"y":542.2668621944715},"end":{"x":742.2668621944716,"y":26.22609456398243},"control1":{"x":311.446251173962,"y":283.8397200948225},"control2":{"x":483.8397200948219,"y":111.44625117396163},"fill":false},{"type":2,"start":{"x":742.2668621944716,"y":26.22609456398243},"end":{"x":757.7331378055284,"y":73.77390543601757},"control1":{"x":742.2668621944716,"y":26.22609456398243},"control2":{"x":757.7331378055284,"y":73.77390543601757},"fill":false},{"type":2,"start":{"x":757.7331378055284,"y":73.77390543601757},"end":{"x":273.77390543601757,"y":557.7331378055285},"control1":{"x":514.5752189480228,"y":153.95869587220784},"control2":{"x":353.9586958722074,"y":314.57521894802244},"fill":false},{"type":2,"start":{"x":273.77390543601757,"y":557.7331378055285},"end":{"x":226.2260945639824,"y":542.2668621944715},"control1":{"x":273.77390543601757,"y":557.7331378055285},"control2":{"x":226.2260945639824,"y":542.2668621944715},"fill":false}],"preview":[{"type":2,"start":{"x":22.62260945639824,"y":25.773313780552844},"end":{"x":74.22668621944716,"y":77.37739054360176},"control1":{"x":31.144625117396203,"y":51.61602799051775},"control2":{"x":48.38397200948219,"y":68.85537488260384},"fill":false},{"type":2,"start":{"x":74.22668621944716,"y":77.37739054360176},"end":{"x":75.77331378055284,"y":72.62260945639825},"control1":{"x":74.22668621944716,"y":77.37739054360176},"control2":{"x":75.77331378055284,"y":72.62260945639825},"fill":false},{"type":2,"start":{"x":75.77331378055284,"y":72.62260945639825},"end":{"x":27.37739054360176,"y":24.22668621944716},"control1":{"x":51.457521894802284,"y":64.60413041277921},"control2":{"x":35.39586958722074,"y":48.54247810519776},"fill":false},{"type":2,"start":{"x":27.37739054360176,"y":24.22668621944716},"end":{"x":22.62260945639824,"y":25.773313780552844},"control1":{"x":27.37739054360176,"y":24.22668621944716},"control2":{"x":22.62260945639824,"y":25.773313780552844},"fill":false}]}]}},{"uuid":"IQyyWC7VwOfzZkqLlOkfH","type":"system","name":"平捺","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"y3JqWqfLB6bG6qzNlLpgO","name":"水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"kJdiV3BGF8q22aCwTsAU-","name":"竖直延伸","type":0,"value":150,"min":0,"max":1000},{"uuid":"Ed7FeRPseFgqr32UdxERI","name":"弯曲游标","type":0,"value":0.2,"min":0,"max":0.5},{"uuid":"LWGr7WoGgmW7pY6nr7oji","name":"弯曲度","type":0,"value":150,"min":0,"max":500},{"uuid":"79I-CMhos-bWzkuNZQUdU","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"atsG_TlAidwjOhSMZncsz","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"fXmT11z6_ETAiDNO966Wn","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"IokzQAoHSWmwD4pAIbj6_","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"Y8WLq2cJ89Vf-pXm5Ka0Z","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"cZ4U2BydbZrFTctJwmJs_","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"vNXBKXmcu_EMP8-ZFTQlk","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"LGqXtd5YwX5pCJoNB_fYB","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_IQyyWC7VwOfzZkqLlOkfH (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 425\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  horizonalSpan: glyph.getParam('水平延伸'),\n  verticalSpan: glyph.getParam('竖直延伸'),\n  bendCursor: glyph.getParam('弯曲游标'),\n  bendDegree: glyph.getParam('弯曲度') + 30 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'bend': {\n      jointsMap['bend'] = {\n        x: glyph.tempData['bend'].x + deltaX,\n        y: glyph.tempData['bend'].y + deltaY,\n      }\n      break\n    }\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['start'], jointsMap['end'])\n      jointsMap['bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { bendCursor, bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('水平延伸', _params.horizonalSpan)\n  glyph.setParam('竖直延伸', _params.verticalSpan)\n  glyph.setParam('弯曲游标', _params.bendCursor)\n  glyph.setParam('弯曲度', _params.bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { bending_degree } = global_params\n  const { start, end, bend } = jointsMap\n  const horizonal_span_range = glyph.getParamRange('水平延伸')\n  const vertical_span_range = glyph.getParamRange('竖直延伸')\n  const bend_cursor_range = glyph.getParamRange('弯曲游标')\n  const bend_degree_range = glyph.getParamRange('弯曲度')\n  const horizonalSpan = range(end.x - start.x, horizonal_span_range)\n  const verticalSpan = range(end.y - start.y, vertical_span_range)\n  const data = FP.distanceAndFootPoint(start, end, bend)\n  const bendCursor = range(data.percentageFromA, bend_cursor_range)\n  const bendDegree = range(data.distance, bend_degree_range)\n  return {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  } = params\n\n  const start = new FP.Joint(\n    'start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end = new FP.Joint(\n    'end',\n    {\n      x: start.x + horizonalSpan,\n      y: start.y + verticalSpan,\n    },\n  )\n  \n  const bend = new FP.Joint(\n    'bend',\n    {\n      x: start.x + horizonalSpan * bendCursor,\n      y: start.y + bendDegree,\n    },\n  )\n  \n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  glyph.addJoint(bend)\n  \n  const skeleton = {\n    start,\n    bend,\n    end,\n  }\n  \n  glyph.addRefLine(refline(start, bend))\n  glyph.addRefLine(refline(bend, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const { start, bend, end } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_na_curves, out_na_points, in_na_curves, in_na_points } = FP.getCurveContours('na', { na_start: start, na_bend: bend, na_end: end }, weight, {\n    unticlockwise: true,\n    weightsVariation: 'pow',\n    weightsVariationPower: weights_variation_power,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制横的左侧轮廓\n  pen.moveTo(out_na_curves[0].start.x, out_na_curves[0].start.y)\n  for (let i = 0; i < out_na_curves.length; i++) {\n    const curve = out_na_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_na_curves[in_na_curves.length - 1].end.x, in_na_curves[in_na_curves.length - 1].end.y)\n\n  // 绘制横的右侧轮廓\n  for (let i = in_na_curves.length - 1; i >= 0; i--) {\n    const curve = in_na_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_na_curves[0].start.x, out_na_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":425,"uuid":"WM2ybkky1b84HM_9NoXpU","name":"start"},{"_x":750,"_y":575,"uuid":"ZJp66pgPL32AKTDmQGLdD","name":"end"},{"_x":350,"_y":605,"uuid":"afGqqah1Ouk-Eb1Bceh6q","name":"bend"}],"_reflines":[{"name":"start-bend","start":"start","end":"bend"},{"name":"bend-end","start":"bend","end":"end"}],"_components":[{"points":[{"uuid":"TNFM3CQq3RWs6RbUpvYA-","type":"anchor","x":228.14606809696156,"y":437.1410732794658,"origin":null},{"uuid":"oaebLbfVL15EoUf18yAq4","type":"control","x":326.17392764801923,"y":609.9692094503091,"origin":"TNFM3CQq3RWs6RbUpvYA-"},{"uuid":"4ncoFzvnzDil_wv0nov1r","type":"control","x":579.3279034351926,"y":612.4646807804027,"origin":"0-5j7QAbGGTxEygcKf29-"},{"uuid":"0-5j7QAbGGTxEygcKf29-","type":"anchor","x":751.8697487060408,"y":599.9299827472114,"origin":null},{"uuid":"3hCp5H7ix4j4aB87hAORF","type":"control","x":751.8697487060408,"y":599.9299827472114,"origin":"0-5j7QAbGGTxEygcKf29-"},{"uuid":"ky4G1XJgleNz175OA2v7p","type":"control","x":748.1302512939592,"y":550.0700172527886,"origin":"sEXeBENNzKOT54kEDkCls"},{"uuid":"sEXeBENNzKOT54kEDkCls","type":"anchor","x":748.1302512939592,"y":550.0700172527886,"origin":null},{"uuid":"23U_5SZ3G0IrG5V_vDW0_","type":"control","x":599.7097888609637,"y":560.8524026619234,"origin":"sEXeBENNzKOT54kEDkCls"},{"uuid":"pl8lot4QRaHcMqSC0TQKr","type":"control","x":357.449626034784,"y":563.7690902350984,"origin":"3bd3XJm0nfLTlTvz0FSaE"},{"uuid":"3bd3XJm0nfLTlTvz0FSaE","type":"anchor","x":271.8539319030385,"y":412.8589267205342,"origin":null},{"uuid":"pz8-cBIQJk80RQ9sTV03g","type":"control","x":271.8539319030385,"y":412.8589267205342,"origin":"3bd3XJm0nfLTlTvz0FSaE"},{"uuid":"_JUiFyaOaB-2XLMd_PG9l","type":"control","x":228.14606809696156,"y":437.1410732794658,"origin":"OOf0FRAakHHaxESb1ovkP"},{"uuid":"OOf0FRAakHHaxESb1ovkP","type":"anchor","x":228.14606809696156,"y":437.1410732794658,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":228.14606809696156,"y":362.8589267205342},"end":{"x":751.8697487060408,"y":200.0700172527886},"control1":{"x":326.17392764801923,"y":190.0307905496909},"control2":{"x":579.3279034351926,"y":187.53531921959734},"fill":false},{"type":2,"start":{"x":751.8697487060408,"y":200.0700172527886},"end":{"x":748.1302512939592,"y":249.9299827472114},"control1":{"x":751.8697487060408,"y":200.0700172527886},"control2":{"x":748.1302512939592,"y":249.9299827472114},"fill":false},{"type":2,"start":{"x":748.1302512939592,"y":249.9299827472114},"end":{"x":271.8539319030385,"y":387.1410732794658},"control1":{"x":599.7097888609637,"y":239.1475973380766},"control2":{"x":357.449626034784,"y":236.23090976490164},"fill":false},{"type":2,"start":{"x":271.8539319030385,"y":387.1410732794658},"end":{"x":228.14606809696156,"y":362.8589267205342},"control1":{"x":271.8539319030385,"y":387.1410732794658},"control2":{"x":228.14606809696156,"y":362.8589267205342},"fill":false}],"preview":[{"type":2,"start":{"x":22.81460680969616,"y":43.71410732794658},"end":{"x":75.18697487060409,"y":59.992998274721145},"control1":{"x":32.61739276480193,"y":60.996920945030915},"control2":{"x":57.932790343519265,"y":61.246468078040266},"fill":false},{"type":2,"start":{"x":75.18697487060409,"y":59.992998274721145},"end":{"x":74.81302512939592,"y":55.00700172527886},"control1":{"x":75.18697487060409,"y":59.992998274721145},"control2":{"x":74.81302512939592,"y":55.00700172527886},"fill":false},{"type":2,"start":{"x":74.81302512939592,"y":55.00700172527886},"end":{"x":27.18539319030385,"y":41.28589267205342},"control1":{"x":59.970978886096376,"y":56.08524026619234},"control2":{"x":35.7449626034784,"y":56.37690902350984},"fill":false},{"type":2,"start":{"x":27.18539319030385,"y":41.28589267205342},"end":{"x":22.81460680969616,"y":43.71410732794658},"control1":{"x":27.18539319030385,"y":41.28589267205342},"control2":{"x":22.81460680969616,"y":43.71410732794658},"fill":false}]}]}},{"uuid":"F82ABQoG34kFdfqMU4TZs","type":"system","name":"挑捺","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"D4FosI-Z-ykHZ0ggKqWi5","name":"挑-水平延伸","type":0,"value":100,"min":0,"max":500},{"uuid":"Bx38p3jMrKmNGeuIATiaC","name":"挑-竖直延伸","type":0,"value":150,"min":0,"max":500},{"uuid":"-Pv-3q-KQGpKs7oDhHFMz","name":"捺-水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"dCR5M3OxplVwarXOMjvwk","name":"捺-竖直延伸","type":0,"value":150,"min":0,"max":1000},{"uuid":"FXycO5Kv6JMhzxVpDQZnM","name":"捺-弯曲游标","type":0,"value":0.2,"min":0,"max":0.5},{"uuid":"G2cPJm5LhD6rpBo4wQsG9","name":"捺-弯曲度","type":0,"value":150,"min":0,"max":500},{"uuid":"pLEhpwvV3yZvv5lurQFhF","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"RWnjKOMwKU9WAQyhYX4_J","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"nX9qKw_Oz4tUmHek0G5WA","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"iQ4GaBF5zzMaFk5gke328","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"mQBddGe4VqBgvp4knI9dI","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"hIknd-__OwWg2YuCXQccE","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"WPpuLpvc0GH2z1_IbIJqO","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"j1KSd3imsHpbY7xbz0mQv","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_F82ABQoG34kFdfqMU4TZs (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 200\nconst y0 = 575\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  tiao_horizonalSpan: glyph.getParam('挑-水平延伸'),\n  tiao_verticalSpan: glyph.getParam('挑-竖直延伸'),\n  na_horizonalSpan: glyph.getParam('捺-水平延伸'),\n  na_verticalSpan: glyph.getParam('捺-竖直延伸'),\n  na_bendCursor: glyph.getParam('捺-弯曲游标'),\n  na_bendDegree: glyph.getParam('捺-弯曲度') + 30 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'tiao_end': {\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      jointsMap['na_start'] = {\n        x: glyph.tempData['na_start'].x + deltaX,\n        y: glyph.tempData['na_start'].y + deltaY,\n      }\n      jointsMap['na_bend'] = {\n        x: glyph.tempData['na_bend'].x + deltaX,\n        y: glyph.tempData['na_bend'].y + deltaY,\n      }\n      jointsMap['na_end'] = {\n        x: glyph.tempData['na_end'].x + deltaX,\n        y: glyph.tempData['na_end'].y + deltaY,\n      }\n      break\n    }\n    case 'na_start': {\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      jointsMap['na_start'] = {\n        x: glyph.tempData['na_start'].x + deltaX,\n        y: glyph.tempData['na_start'].y + deltaY,\n      }\n      jointsMap['na_bend'] = {\n        x: glyph.tempData['na_bend'].x + deltaX,\n        y: glyph.tempData['na_bend'].y + deltaY,\n      }\n      jointsMap['na_end'] = {\n        x: glyph.tempData['na_end'].x + deltaX,\n        y: glyph.tempData['na_end'].y + deltaY,\n      }\n      break\n    }\n    case 'na_bend': {\n      jointsMap['na_bend'] = {\n        x: glyph.tempData['na_bend'].x + deltaX,\n        y: glyph.tempData['na_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'na_end': {\n      jointsMap['na_end'] = {\n        x: glyph.tempData['na_end'].x + deltaX,\n        y: glyph.tempData['na_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['na_start'], jointsMap['na_end'])\n      jointsMap['na_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { na_bendCursor: bendCursor, na_bendDegree: bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('挑-水平延伸', _params.tiao_horizonalSpan)\n  glyph.setParam('挑-竖直延伸', _params.tiao_verticalSpan)\n  glyph.setParam('捺-水平延伸', _params.na_horizonalSpan)\n  glyph.setParam('捺-竖直延伸', _params.na_verticalSpan)\n  glyph.setParam('捺-弯曲游标', _params.na_bendCursor)\n  glyph.setParam('捺-弯曲度', _params.na_bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { tiao_start, tiao_end, na_start, na_end, na_bend } = jointsMap\n  const tiao_horizonal_span_range = glyph.getParamRange('挑-水平延伸')\n  const tiao_vertical_span_range = glyph.getParamRange('挑-竖直延伸')\n  const na_horizonal_span_range = glyph.getParamRange('捺-水平延伸')\n  const na_vertical_span_range = glyph.getParamRange('捺-竖直延伸')\n  const na_bend_cursor_range = glyph.getParamRange('捺-弯曲游标')\n  const na_bend_degree_range = glyph.getParamRange('捺-弯曲度')\n  const tiao_horizonalSpan = range(tiao_end.x - tiao_start.x, tiao_horizonal_span_range)\n  const tiao_verticalSpan = range(tiao_start.y - tiao_end.y, tiao_vertical_span_range)\n  const na_horizonalSpan = range(na_end.x - na_start.x, na_horizonal_span_range)\n  const na_verticalSpan = range(na_end.y - na_start.y, na_vertical_span_range)\n  const data = FP.distanceAndFootPoint(na_start, na_end, na_bend)\n  const na_bendCursor = range(data.percentageFromA, na_bend_cursor_range)\n  const na_bendDegree = range(data.distance, na_bend_degree_range)\n  return {\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    na_horizonalSpan,\n    na_verticalSpan,\n    na_bendCursor,\n    na_bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    na_horizonalSpan,\n    na_verticalSpan,\n    na_bendCursor,\n    na_bendDegree,\n  } = params\n\n  // 挑\n  const tiao_start = new FP.Joint(\n    'tiao_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const tiao_end = new FP.Joint(\n    'tiao_end',\n    {\n      x: tiao_start.x + tiao_horizonalSpan,\n      y: tiao_start.y - tiao_verticalSpan,\n    },\n  )\n\n  // 捺\n  const na_start = new FP.Joint(\n    'na_start',\n    {\n      x: tiao_start.x + tiao_horizonalSpan,\n      y: tiao_start.y - tiao_verticalSpan,\n    },\n  )\n  const na_end = new FP.Joint(\n    'na_end',\n    {\n      x: na_start.x + na_horizonalSpan,\n      y: na_start.y + na_verticalSpan,\n    },\n  )\n\n  const na_bend = new FP.Joint(\n    'na_bend',\n    {\n      x: na_start.x + na_horizonalSpan * na_bendCursor,\n      y: na_start.y + na_bendDegree,\n    },\n  )\n\n  glyph.addJoint(tiao_start)\n  glyph.addJoint(tiao_end)\n  glyph.addJoint(na_start)\n  glyph.addJoint(na_end)\n  glyph.addJoint(na_bend)\n\n  const skeleton = {\n    tiao_start,\n    tiao_end,\n    na_start,\n    na_bend,\n    na_end,\n  }\n\n  glyph.addRefLine(refline(tiao_start, tiao_end))\n  glyph.addRefLine(refline(na_start, na_bend))\n  glyph.addRefLine(refline(na_bend, na_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const {\n    tiao_start,\n    tiao_end,\n    na_start,\n    na_bend,\n    na_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_tiao_start, out_tiao_end, in_tiao_start, in_tiao_end } = FP.getLineContours('tiao', { tiao_start, tiao_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_na_curves, out_na_points, in_na_curves, in_na_points } = FP.getCurveContours('na', { na_start, na_bend, na_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: in_corner_tiao_na } = FP.getIntersection(\n    { type: 'line', start: in_tiao_start, end: in_tiao_end },\n    { type: 'line', start: in_na_curves[0].start, end: in_na_curves[0].control1 },\n  )\n  const { corner: out_corner_tiao_na, corner_index: out_corner_index_tiao_na } = FP.getIntersection(\n    { type: 'curve', points: out_na_points },\n    { type: 'line', start: out_tiao_start, end: out_tiao_end },\n  )\n  const { curves: out_na_curves_final } = FP.fitCurvesByPoints(out_na_points.slice(out_corner_index_tiao_na))\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  pen.moveTo(out_tiao_start.x, out_tiao_start.y)\n  pen.lineTo(out_corner_tiao_na.x, out_corner_tiao_na.y)\n  for (let i = 0; i < out_na_curves_final.length; i++) {\n    const curve = out_na_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_na_curves[in_na_curves.length - 1].end.x, in_na_curves[in_na_curves.length - 1].end.y)\n\n  // 绘制横的右侧（内侧）轮廓\n  for (let i = in_na_curves.length - 1; i >= 0; i--) {\n    const curve = in_na_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  pen.lineTo(in_corner_tiao_na.x, in_corner_tiao_na.y)\n  pen.lineTo(in_tiao_start.x, in_tiao_start.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_tiao_start.x, out_tiao_start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":200,"_y":575,"uuid":"96vt87I0JObejcdjC_X5V","name":"tiao_start"},{"_x":300,"_y":425,"uuid":"6Wbo2wA7OUu2pPXoCu8wh","name":"tiao_end"},{"_x":300,"_y":425,"uuid":"QtrgaPQsOfZZCqeqzWlHO","name":"na_start"},{"_x":800,"_y":575,"uuid":"lXu0OA0ipCHCvo_mXfYi0","name":"na_end"},{"_x":400,"_y":605,"uuid":"jjCLbnoEG7zg9Xu1Rt6mi","name":"na_bend"}],"_reflines":[{"name":"tiao_start-tiao_end","start":"tiao_start","end":"tiao_end"},{"name":"na_start-na_bend","start":"na_start","end":"na_bend"},{"name":"na_bend-na_end","start":"na_bend","end":"na_end"}],"_components":[{"points":[{"uuid":"16UaAZq-DqLAIHWWvPKVM","type":"anchor","x":220.8012573584461,"y":588.8675049056308,"origin":null},{"uuid":"YnVeUecejxBhGSyVE7b0Z","type":"control","x":220.8012573584461,"y":588.8675049056308,"origin":"16UaAZq-DqLAIHWWvPKVM"},{"uuid":"jpLk_0LvvDpfM3U5iu8q8","type":"control","x":300.03021111749126,"y":470.024074267063,"origin":"A0yNFvUuBWgBERY_mvuxT"},{"uuid":"A0yNFvUuBWgBERY_mvuxT","type":"anchor","x":300.03021111749126,"y":470.024074267063,"origin":null},{"uuid":"hpcPjkJ3JNhcdkig-rVld","type":"control","x":415.2940913711482,"y":613.7854240416615,"origin":"A0yNFvUuBWgBERY_mvuxT"},{"uuid":"6ddDs7dB8zEUgzfoAW6b1","type":"control","x":637.0468708574286,"y":611.9039186904072,"origin":"U9v7fkF0fmTyaROPTfW6R"},{"uuid":"U9v7fkF0fmTyaROPTfW6R","type":"anchor","x":801.8697487060408,"y":599.9299827472114,"origin":null},{"uuid":"G8hHu4zpTUqdxye1uSf_z","type":"control","x":801.8697487060408,"y":599.9299827472114,"origin":"U9v7fkF0fmTyaROPTfW6R"},{"uuid":"TY9lGTUXR1LEqLST3J-nx","type":"control","x":798.1302512939592,"y":550.0700172527886,"origin":"cItsFcJX2arcqGuR96dfg"},{"uuid":"cItsFcJX2arcqGuR96dfg","type":"anchor","x":798.1302512939592,"y":550.0700172527886,"origin":null},{"uuid":"wXWnkILGSCKx5JumgYLmM","type":"control","x":649.7097888609638,"y":560.8524026619234,"origin":"cItsFcJX2arcqGuR96dfg"},{"uuid":"Dd5CSL4Q_kBF3G7OhH9XD","type":"control","x":407.44962603478405,"y":563.7690902350984,"origin":"8eQj9k2XJppj9C20xCJcF"},{"uuid":"8eQj9k2XJppj9C20xCJcF","type":"anchor","x":321.8539319030385,"y":412.8589267205342,"origin":null},{"uuid":"uAXFPGrq3e-g-rBN4DTiB","type":"control","x":321.8539319030385,"y":412.8589267205342,"origin":"8eQj9k2XJppj9C20xCJcF"},{"uuid":"aJlpnLfkyCmr0Sfzbsl-C","type":"control","x":301.71661965741293,"y":377.3556795705807,"origin":"4euzcLCWqFTndKMBxBo-A"},{"uuid":"4euzcLCWqFTndKMBxBo-A","type":"anchor","x":301.71661965741293,"y":377.3556795705807,"origin":null},{"uuid":"Uf-N-vH1fCrwmiriWlT5t","type":"control","x":301.71661965741293,"y":377.3556795705807,"origin":"4euzcLCWqFTndKMBxBo-A"},{"uuid":"ZXBul6u0d7jLR5xtuxwoc","type":"control","x":179.1987426415539,"y":561.1324950943692,"origin":"tfocKFRbl9nPNJjPoiDwQ"},{"uuid":"tfocKFRbl9nPNJjPoiDwQ","type":"anchor","x":179.1987426415539,"y":561.1324950943692,"origin":null},{"uuid":"cW2MzLK1ihJhIamv3NJA2","type":"control","x":179.1987426415539,"y":561.1324950943692,"origin":"tfocKFRbl9nPNJjPoiDwQ"},{"uuid":"UTb1emYfy-JVKU6sh-DjK","type":"control","x":220.8012573584461,"y":588.8675049056308,"origin":"dYIJ6CIQbYnayO9z_EPQj"},{"uuid":"dYIJ6CIQbYnayO9z_EPQj","type":"anchor","x":220.8012573584461,"y":588.8675049056308,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":220.8012573584461,"y":211.13249509436923},"end":{"x":300.03021111749126,"y":329.97592573293696},"control1":{"x":220.8012573584461,"y":211.13249509436923},"control2":{"x":300.03021111749126,"y":329.97592573293696},"fill":false},{"type":2,"start":{"x":300.03021111749126,"y":329.97592573293696},"end":{"x":801.8697487060408,"y":200.0700172527886},"control1":{"x":415.2940913711482,"y":186.21457595833851},"control2":{"x":637.0468708574286,"y":188.09608130959282},"fill":false},{"type":2,"start":{"x":801.8697487060408,"y":200.0700172527886},"end":{"x":798.1302512939592,"y":249.9299827472114},"control1":{"x":801.8697487060408,"y":200.0700172527886},"control2":{"x":798.1302512939592,"y":249.9299827472114},"fill":false},{"type":2,"start":{"x":798.1302512939592,"y":249.9299827472114},"end":{"x":321.8539319030385,"y":387.1410732794658},"control1":{"x":649.7097888609638,"y":239.1475973380766},"control2":{"x":407.44962603478405,"y":236.23090976490164},"fill":false},{"type":2,"start":{"x":321.8539319030385,"y":387.1410732794658},"end":{"x":301.71661965741293,"y":422.6443204294193},"control1":{"x":321.8539319030385,"y":387.1410732794658},"control2":{"x":301.71661965741293,"y":422.6443204294193},"fill":false},{"type":2,"start":{"x":301.71661965741293,"y":422.6443204294193},"end":{"x":179.1987426415539,"y":238.86750490563077},"control1":{"x":301.71661965741293,"y":422.6443204294193},"control2":{"x":179.1987426415539,"y":238.86750490563077},"fill":false},{"type":2,"start":{"x":179.1987426415539,"y":238.86750490563077},"end":{"x":220.8012573584461,"y":211.13249509436923},"control1":{"x":179.1987426415539,"y":238.86750490563077},"control2":{"x":220.8012573584461,"y":211.13249509436923},"fill":false}],"preview":[{"type":2,"start":{"x":22.08012573584461,"y":58.88675049056308},"end":{"x":30.003021111749128,"y":47.0024074267063},"control1":{"x":22.08012573584461,"y":58.88675049056308},"control2":{"x":30.003021111749128,"y":47.0024074267063},"fill":false},{"type":2,"start":{"x":30.003021111749128,"y":47.0024074267063},"end":{"x":80.18697487060409,"y":59.992998274721145},"control1":{"x":41.529409137114826,"y":61.378542404166154},"control2":{"x":63.70468708574287,"y":61.190391869040724},"fill":false},{"type":2,"start":{"x":80.18697487060409,"y":59.992998274721145},"end":{"x":79.81302512939592,"y":55.00700172527886},"control1":{"x":80.18697487060409,"y":59.992998274721145},"control2":{"x":79.81302512939592,"y":55.00700172527886},"fill":false},{"type":2,"start":{"x":79.81302512939592,"y":55.00700172527886},"end":{"x":32.18539319030385,"y":41.28589267205342},"control1":{"x":64.97097888609639,"y":56.08524026619234},"control2":{"x":40.744962603478406,"y":56.37690902350984},"fill":false},{"type":2,"start":{"x":32.18539319030385,"y":41.28589267205342},"end":{"x":30.171661965741293,"y":37.73556795705807},"control1":{"x":32.18539319030385,"y":41.28589267205342},"control2":{"x":30.171661965741293,"y":37.73556795705807},"fill":false},{"type":2,"start":{"x":30.171661965741293,"y":37.73556795705807},"end":{"x":17.919874264155393,"y":56.113249509436926},"control1":{"x":30.171661965741293,"y":37.73556795705807},"control2":{"x":17.919874264155393,"y":56.113249509436926},"fill":false},{"type":2,"start":{"x":17.919874264155393,"y":56.113249509436926},"end":{"x":22.08012573584461,"y":58.88675049056308},"control1":{"x":17.919874264155393,"y":56.113249509436926},"control2":{"x":22.08012573584461,"y":58.88675049056308},"fill":false}]}]}},{"uuid":"118sGTFPl4SwBgDE93z_0","type":"system","name":"点","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"oCW0BBjTOajaZDPLqriB3","name":"水平延伸","type":0,"value":100,"min":0,"max":500},{"uuid":"yLY_Kd561mjKWzzTNfRRF","name":"竖直延伸","type":0,"value":150,"min":0,"max":500},{"uuid":"MXqGA6EQZb21w35rRpAwW","name":"弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"WRFCA5piaktPJYipmGVlU","name":"弯曲度","type":0,"value":30,"min":0,"max":200},{"uuid":"9LoTXC011PbzgZhcGzw5Q","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"Rd1WmahAY5IRM1K2zcvPn","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"4-2Ngfb1yDOGjdk2-n4ge","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"2YMdfieL1yb30fNbZQhvd","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"T_m1glMhd-PvA-AlwG-ZH","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"1_HwHaftv3bMiA5x0-1cx","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"q_22KhjV2EsepQF16PD8r","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"UZvRkPes6Z2ad3jjpunXT","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_118sGTFPl4SwBgDE93z_0 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 450\nconst y0 = 425\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  horizonalSpan: glyph.getParam('水平延伸'),\n  verticalSpan: glyph.getParam('竖直延伸'),\n  bendCursor: glyph.getParam('弯曲游标'),\n  bendDegree: glyph.getParam('弯曲度') + 10 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'bend': {\n      jointsMap['bend'] = {\n        x: glyph.tempData['bend'].x + deltaX,\n        y: glyph.tempData['bend'].y + deltaY,\n      }\n      break\n    }\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['start'], jointsMap['end'])\n      jointsMap['bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { bendCursor, bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x + bendDegree * Math.sin(angle),\n    y: cursor_y - bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('水平延伸', _params.horizonalSpan)\n  glyph.setParam('竖直延伸', _params.verticalSpan)\n  glyph.setParam('弯曲游标', _params.bendCursor)\n  glyph.setParam('弯曲度', _params.bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end, bend } = jointsMap\n  const horizonal_span_range = glyph.getParamRange('水平延伸')\n  const vertical_span_range = glyph.getParamRange('竖直延伸')\n  const bend_cursor_range = glyph.getParamRange('弯曲游标')\n  const bend_degree_range = glyph.getParamRange('弯曲度')\n  const horizonalSpan = range(end.x - start.x, horizonal_span_range)\n  const verticalSpan = range(end.y - start.y, vertical_span_range)\n  const data = FP.distanceAndFootPoint(start, end, bend)\n  const bendCursor = range(data.percentageFromA, bend_cursor_range)\n  const bendDegree = range(data.distance, bend_degree_range)\n  return {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  } = params\n\n  const start = new FP.Joint(\n    'start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end = new FP.Joint(\n    'end',\n    {\n      x: start.x + horizonalSpan,\n      y: start.y + verticalSpan,\n    },\n  )\n  \n  const length = distance(start, end)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = new FP.Joint(\n    'bend',\n    {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y - bendDegree * Math.cos(angle),\n    },\n  )\n  \n  const skeleton = { start, bend, end }\n  \n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  glyph.addJoint(bend)\n  \n  glyph.addRefLine(refline(start, bend))\n  glyph.addRefLine(refline(bend, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton, global_params) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const { start, bend, end } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_dian_curves, out_dian_points, in_dian_curves, in_dian_points } = FP.getCurveContours('dian', { dian_start: start, dian_bend: bend, dian_end: end }, weight)\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  pen.moveTo(out_dian_curves[0].start.x, out_dian_curves[0].start.y)\n  for (let i = 0; i < out_dian_curves.length; i++) {\n    const curve = out_dian_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_dian_curves[in_dian_curves.length - 1].end.x, in_dian_curves[in_dian_curves.length - 1].end.y)\n\n  // 绘制左侧（内侧）轮廓\n  for (let i = in_dian_curves.length - 1; i >= 0; i--) {\n    const curve = in_dian_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_dian_curves[0].start.x, out_dian_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":450,"_y":425,"uuid":"pmJfyD5PVlVSX78eGk6Y-","name":"start"},{"_x":550,"_y":575,"uuid":"Xrh6v76w0OT6sL2sn6i9p","name":"end"},{"_x":533.2820117735138,"_y":477.8119921509908,"uuid":"OOY2MLbaRCkzKoQ1X1sVo","name":"bend"}],"_reflines":[{"name":"start-bend","start":"start","end":"bend"},{"name":"bend-end","start":"bend","end":"end"}],"_components":[{"points":[{"uuid":"aBRmjgt8PdfMofl2kLW_a","type":"anchor","x":463.3883714722302,"y":403.8871719250695,"origin":null},{"uuid":"Yf6kvKqBQO45Evex6ASaE","type":"control","x":523.2309794714408,"y":442.1478087257738,"origin":"aBRmjgt8PdfMofl2kLW_a"},{"uuid":"J7VlVOjINdBqTe-votQEs","type":"control","x":562.3370148190726,"y":500.8068617472173,"origin":"1NeCSz_hoJEk2n9gQ50-n"},{"uuid":"1NeCSz_hoJEk2n9gQ50-n","type":"anchor","x":574.6381380200244,"y":570.7618217467608,"origin":null},{"uuid":"e_KFb8fdu9YZ42le7jlys","type":"control","x":574.6381380200244,"y":570.7618217467608,"origin":"1NeCSz_hoJEk2n9gQ50-n"},{"uuid":"BvBO1ZPfEQlVCk28oQ8fW","type":"control","x":525.3618619799756,"y":579.2381782532392,"origin":"j3dqUMiKF8tAVdg5Leatn"},{"uuid":"j3dqUMiKF8tAVdg5Leatn","type":"anchor","x":525.3618619799756,"y":579.2381782532392,"origin":null},{"uuid":"2_jkCCLw9PqvHdmP6wmX0","type":"control","x":515.4975000204523,"y":523.1403957796113,"origin":"j3dqUMiKF8tAVdg5Leatn"},{"uuid":"Z4xHDjxTKJ0tT-c_bEICd","type":"control","x":484.60021159591497,"y":476.7944631428108,"origin":"jUyXdwo8TkAaxwa7wwHGT"},{"uuid":"jUyXdwo8TkAaxwa7wwHGT","type":"anchor","x":436.6116285277698,"y":446.1128280749305,"origin":null},{"uuid":"8Mhbfn8he-0jD1_QA2keC","type":"control","x":436.6116285277698,"y":446.1128280749305,"origin":"jUyXdwo8TkAaxwa7wwHGT"},{"uuid":"5UiPlCdwF68qref20iXgn","type":"control","x":463.3883714722302,"y":403.8871719250695,"origin":"CjMEjmgxq9VA35lvMyKfM"},{"uuid":"CjMEjmgxq9VA35lvMyKfM","type":"anchor","x":463.3883714722302,"y":403.8871719250695,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":463.3883714722302,"y":396.1128280749306},"end":{"x":574.6381380200244,"y":229.2381782532392},"control1":{"x":523.2309794714408,"y":357.85219127422624},"control2":{"x":562.3370148190726,"y":299.1931382527828},"fill":false},{"type":2,"start":{"x":574.6381380200244,"y":229.2381782532392},"end":{"x":525.3618619799756,"y":220.7618217467608},"control1":{"x":574.6381380200244,"y":229.2381782532392},"control2":{"x":525.3618619799756,"y":220.7618217467608},"fill":false},{"type":2,"start":{"x":525.3618619799756,"y":220.7618217467608},"end":{"x":436.6116285277698,"y":353.8871719250694},"control1":{"x":515.4975000204523,"y":276.85960422038875},"control2":{"x":484.60021159591497,"y":323.20553685718914},"fill":false},{"type":2,"start":{"x":436.6116285277698,"y":353.8871719250694},"end":{"x":463.3883714722302,"y":396.1128280749306},"control1":{"x":436.6116285277698,"y":353.8871719250694},"control2":{"x":463.3883714722302,"y":396.1128280749306},"fill":false}],"preview":[{"type":2,"start":{"x":46.33883714722302,"y":40.38871719250695},"end":{"x":57.46381380200244,"y":57.076182174676084},"control1":{"x":52.323097947144085,"y":44.214780872577386},"control2":{"x":56.23370148190726,"y":50.080686174721734},"fill":false},{"type":2,"start":{"x":57.46381380200244,"y":57.076182174676084},"end":{"x":52.536186197997566,"y":57.92381782532392},"control1":{"x":57.46381380200244,"y":57.076182174676084},"control2":{"x":52.536186197997566,"y":57.92381782532392},"fill":false},{"type":2,"start":{"x":52.536186197997566,"y":57.92381782532392},"end":{"x":43.66116285277698,"y":44.611282807493055},"control1":{"x":51.549750002045236,"y":52.314039577961125},"control2":{"x":48.4600211595915,"y":47.67944631428108},"fill":false},{"type":2,"start":{"x":43.66116285277698,"y":44.611282807493055},"end":{"x":46.33883714722302,"y":40.38871719250695},"control1":{"x":43.66116285277698,"y":44.611282807493055},"control2":{"x":46.33883714722302,"y":40.38871719250695},"fill":false}]}]}},{"uuid":"_bnDeadna6z_rNokaYfOa","type":"system","name":"挑","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"4lM4jSDf9bX9Q42RbIc43","name":"水平延伸","type":0,"value":200,"min":0,"max":500},{"uuid":"nDuVN-5FYxdDmOxh_1Uzy","name":"竖直延伸","type":0,"value":200,"min":0,"max":500},{"uuid":"1vsVN5JaqlWlasOFxTZbE","name":"弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"heLWKrv-9CgBpZl_K7p8n","name":"弯曲度","type":0,"value":30,"min":0,"max":200},{"uuid":"kk9Mdbfb5C7LWfndNg_0L","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"L6cFoVCKljp51kWwZSjBi","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"nM8l3AlOKUmGzHk2aDACY","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"kqMRCJl7ppgxKPOhPWPlQ","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"DOEPsNBOUx0ugMipB5kDg","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"w-S793PqHe3mmEDwJKcs0","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"a2ROp1hb27T9p2pNw5Mly","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"TB782-Q1j_z5n4G6b0Mmz","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script__bnDeadna6z_rNokaYfOa (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 400\nconst y0 = 600\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  horizonalSpan: glyph.getParam('水平延伸'),\n  verticalSpan: glyph.getParam('竖直延伸'),\n  bendCursor: glyph.getParam('弯曲游标'),\n  bendDegree: glyph.getParam('弯曲度') + 10 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'bend': {\n      jointsMap['bend'] = {\n        x: glyph.tempData['bend'].x + deltaX,\n        y: glyph.tempData['bend'].y + deltaY,\n      }\n      break\n    }\n    case 'end': {\n      jointsMap['end'] = {\n        x: glyph.tempData['end'].x + deltaX,\n        y: glyph.tempData['end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['start'], jointsMap['end'])\n      jointsMap['bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { bendCursor, bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y - bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x + bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('水平延伸', _params.horizonalSpan)\n  glyph.setParam('竖直延伸', _params.verticalSpan)\n  glyph.setParam('弯曲游标', _params.bendCursor)\n  glyph.setParam('弯曲度', _params.bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { start, end, bend } = jointsMap\n  const horizonal_span_range = glyph.getParamRange('水平延伸')\n  const vertical_span_range = glyph.getParamRange('竖直延伸')\n  const bend_cursor_range = glyph.getParamRange('弯曲游标')\n  const bend_degree_range = glyph.getParamRange('弯曲度')\n  const horizonalSpan = range(end.x - start.x, horizonal_span_range)\n  const verticalSpan = range(start.y - end.y, vertical_span_range)\n  const data = FP.distanceAndFootPoint(start, end, bend)\n  const bendCursor = range(data.percentageFromA, bend_cursor_range)\n  const bendDegree = range(data.distance, bend_degree_range)\n  return {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    horizonalSpan,\n    verticalSpan,\n    bendCursor,\n    bendDegree,\n  } = params\n\n  const start = new FP.Joint(\n    'start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const end = new FP.Joint(\n    'end',\n    {\n      x: start.x + horizonalSpan,\n      y: start.y - verticalSpan,\n    },\n  )\n\n  const length = distance(start, end)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y - bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n\n  const bend = new FP.Joint(\n    'bend',\n    {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y + bendDegree * Math.cos(angle),\n    },\n  )\n\n  glyph.addJoint(start)\n  glyph.addJoint(end)\n  glyph.addJoint(bend)\n\n  const skeleton = {\n    start,\n    end,\n    bend,\n  }\n\n  glyph.addRefLine(refline(start, bend))\n  glyph.addRefLine(refline(bend, end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const { start, bend, end } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_tiao_curves, out_tiao_points, in_tiao_curves, in_tiao_points } = FP.getCurveContours('tiao', { tiao_start: start, tiao_bend: bend, tiao_end: end }, weight)\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制横的右侧轮廓\n  pen.moveTo(out_tiao_curves[0].start.x, out_tiao_curves[0].start.y)\n  for (let i = 0; i < out_tiao_curves.length; i++) {\n    const curve = out_tiao_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_tiao_curves[in_tiao_curves.length - 1].end.x, in_tiao_curves[in_tiao_curves.length - 1].end.y)\n\n  // 绘制横的左侧轮廓\n  for (let i = in_tiao_curves.length - 1; i >= 0; i--) {\n    const curve = in_tiao_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_tiao_curves[0].start.x, out_tiao_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":400,"_y":600,"uuid":"EzF_UwN9U9mrtv2yshqLU","name":"start"},{"_x":600,"_y":400,"uuid":"bm3eJqL1kGcshEU5f0MP5","name":"end"},{"_x":528.2842712474619,"_y":528.2842712474619,"uuid":"u1BSaIJz7-uSrsWRGakIX","name":"bend"}],"_reflines":[{"name":"start-bend","start":"start","end":"bend"},{"name":"bend-end","start":"bend","end":"end"}],"_components":[{"points":[{"uuid":"tFJ0qRQ_mpwQojgtlY4Pl","type":"anchor","x":387.8009068072526,"y":578.1784023207588,"origin":null},{"uuid":"gdaaAvexBop_AsvsUaMQ3","type":"control","x":467.88246674705556,"y":533.1339308045827,"origin":"tFJ0qRQ_mpwQojgtlY4Pl"},{"uuid":"W2fHlnMVviuaHNeBybsIr","type":"control","x":533.133930804582,"y":467.8824667470549,"origin":"PrNdNRu_Wr8KVX8MjlZZM"},{"uuid":"PrNdNRu_Wr8KVX8MjlZZM","type":"anchor","x":578.1784023207588,"y":387.8009068072526,"origin":null},{"uuid":"iH0xvwrhQPtzM7Uk4A0ad","type":"control","x":578.1784023207588,"y":387.8009068072526,"origin":"PrNdNRu_Wr8KVX8MjlZZM"},{"uuid":"_TTh82BQGsKp7tz2QNfKr","type":"control","x":621.8215976792412,"y":412.1990931927474,"origin":"VWX9lAdxO_RPzFGx1k0n4"},{"uuid":"VWX9lAdxO_RPzFGx1k0n4","type":"anchor","x":621.8215976792412,"y":412.1990931927474,"origin":null},{"uuid":"C3KXOfFrx91Gz3s6TSEcl","type":"control","x":572.2518431125351,"y":500.32581633611704,"origin":"VWX9lAdxO_RPzFGx1k0n4"},{"uuid":"QMLIq6-oQMOBlcYdsmhzS","type":"control","x":500.3258163361179,"y":572.2518431125357,"origin":"Duad94hY0eggzX9NgUDkV"},{"uuid":"Duad94hY0eggzX9NgUDkV","type":"anchor","x":412.1990931927474,"y":621.8215976792412,"origin":null},{"uuid":"flEWZalnIPY5uc7BpbWnj","type":"control","x":412.1990931927474,"y":621.8215976792412,"origin":"Duad94hY0eggzX9NgUDkV"},{"uuid":"uLBx0f7rw5oOv9P1Y56FN","type":"control","x":387.8009068072526,"y":578.1784023207588,"origin":"WrquOedrqS64KBxK2KswC"},{"uuid":"WrquOedrqS64KBxK2KswC","type":"anchor","x":387.8009068072526,"y":578.1784023207588,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":387.8009068072526,"y":221.82159767924122},"end":{"x":578.1784023207588,"y":412.19909319274734},"control1":{"x":467.88246674705556,"y":266.86606919541725},"control2":{"x":533.133930804582,"y":332.1175332529451},"fill":false},{"type":2,"start":{"x":578.1784023207588,"y":412.19909319274734},"end":{"x":621.8215976792412,"y":387.80090680725266},"control1":{"x":578.1784023207588,"y":412.19909319274734},"control2":{"x":621.8215976792412,"y":387.80090680725266},"fill":false},{"type":2,"start":{"x":621.8215976792412,"y":387.80090680725266},"end":{"x":412.1990931927474,"y":178.17840232075878},"control1":{"x":572.2518431125351,"y":299.674183663883},"control2":{"x":500.3258163361179,"y":227.74815688746435},"fill":false},{"type":2,"start":{"x":412.1990931927474,"y":178.17840232075878},"end":{"x":387.8009068072526,"y":221.82159767924122},"control1":{"x":412.1990931927474,"y":178.17840232075878},"control2":{"x":387.8009068072526,"y":221.82159767924122},"fill":false}],"preview":[{"type":2,"start":{"x":38.780090680725266,"y":57.81784023207588},"end":{"x":57.81784023207588,"y":38.780090680725266},"control1":{"x":46.78824667470556,"y":53.313393080458276},"control2":{"x":53.3133930804582,"y":46.78824667470549},"fill":false},{"type":2,"start":{"x":57.81784023207588,"y":38.780090680725266},"end":{"x":62.18215976792413,"y":41.21990931927474},"control1":{"x":57.81784023207588,"y":38.780090680725266},"control2":{"x":62.18215976792413,"y":41.21990931927474},"fill":false},{"type":2,"start":{"x":62.18215976792413,"y":41.21990931927474},"end":{"x":41.21990931927474,"y":62.18215976792413},"control1":{"x":57.225184311253514,"y":50.032581633611706},"control2":{"x":50.03258163361179,"y":57.22518431125357},"fill":false},{"type":2,"start":{"x":41.21990931927474,"y":62.18215976792413},"end":{"x":38.780090680725266,"y":57.81784023207588},"control1":{"x":41.21990931927474,"y":62.18215976792413},"control2":{"x":38.780090680725266,"y":57.81784023207588},"fill":false}]}]}},{"uuid":"S1LQh90qdxLnZGPoE1ow3","type":"system","name":"横撇","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"sAo0_xbIkQ-lO5zAHycxU","name":"横-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"7R9pEAkpz4dO1gzVcQpWU","name":"撇-水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"villb9xzwa566vRYFCFR5","name":"撇-竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"bQFDZj_xxFaRP6enJbeeD","name":"撇-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"wOb1P0NaxBTt965Q7_5NQ","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"zFZDToee57oWp6rDfR3Af","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"hB1RxCDnbz4ZHJ74yPIug","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"P3ops4w5dSFVaLcgW62rn","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"QYKQsIZAm3xiRust8Ubir","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"-MhzUtNtukYroDsJtwGIa","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"Tv_ZjMeH674v1u83v02qu","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"mvWe-Tozx1xjnblQBxatM","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_S1LQh90qdxLnZGPoE1ow3 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 245\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  pie_bendCursor: glyph.getParam('撇-弯曲游标'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'pie_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'pie_bend': {\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'])\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲游标，所以依据现有参数计算新的bend\n  const { pie_bendCursor } = params\n  const verticalSpan = Math.abs(end.y - start.y)\n\n  const bend = {\n    x: start.x,\n    y: start.y + pie_bendCursor * verticalSpan,\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('撇-弯曲游标', _params.pie_bendCursor)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, pie_start, pie_bend, pie_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const pie_bend_cursor_range = glyph.getParamRange('撇-弯曲游标')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const pie_bendCursor = range((pie_bend.y - pie_start.y) / pie_verticalSpan, pie_bend_cursor_range)\n  return {\n    heng_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: heng_end.x,\n      y: heng_end.y,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  const pie_bend = new FP.Joint(\n    'pie_bend',\n    {\n      x: pie_start.x,\n      y: pie_start.y + pie_bendCursor * pie_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(pie_bend)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(pie_start, pie_bend))\n  glyph.addRefLine(refline(pie_bend, pie_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start, pie_bend, pie_end }, weight, {\n    weightsVariation: 'pow',\n    weightsVariationDir: 'reverse',\n    weightsVariationPower: weights_variation_power,\n  })\n  const { corner: in_corner_heng_pie, corner_index: in_corner_index_heng_pie } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'curve', points: in_pie_points }\n  )\n  const { corner: out_corner_heng_pie, corner_index: out_corner_index_heng_pie } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_pie_curves[0].start, end: out_pie_curves[0].control1 }\n  )\n  let { curves: out_pie_curves_final } = FP.fitCurvesByPoints(out_pie_points.slice(out_corner_index_heng_pie))\n  let { curves: in_pie_curves_final } = FP.fitCurvesByPoints(in_pie_points.slice(in_corner_index_heng_pie))\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const inner_angle = Math.PI / 2\n    const mid_angle = Math.PI / 4\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_pie.x - corner_radius,\n      y: out_corner_heng_pie.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2_data = FP.getRadiusPointsOnCurve(\n      FP.getCurvesPoints(out_pie_curves_final),\n      corner_radius - weight / 2,\n    )\n    const turn_control_2 = turn_control_2_data.point\n    const turn_start_2_data = FP.getRadiusPointsOnCurve(\n      FP.getCurvesPoints(turn_control_2_data.final_curves),\n      corner_radius,\n    )\n    const turn_start_2 = turn_start_2_data.point\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    out_pie_curves_final = turn_start_2_data.final_curves\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    pen.lineTo(out_corner_heng_pie.x, out_corner_heng_pie.y)\n    pen.lineTo(out_pie_curves_final[0].start.x, out_pie_curves_final[0].start.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  for (let i = 0; i < out_pie_curves_final.length; i++) {\n    const curve = out_pie_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_pie_curves_final[in_pie_curves_final.length - 1].end.x, in_pie_curves_final[in_pie_curves_final.length - 1].end.y)\n\n  // 绘制左侧（内侧）轮廓\n  for (let i = in_pie_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":245,"uuid":"0_Ya_vEeHK-74CIMhzi6r","name":"heng_start_ref"},{"_x":750,"_y":245,"uuid":"1uR6aZ48olOjepVgFjjZI","name":"heng_end_ref"},{"_x":250,"_y":245,"uuid":"lFLsvKpybBuityYpYQog-","name":"heng_start"},{"_x":750,"_y":245,"uuid":"DqOe_opMoimOMImgsgDc5","name":"heng_end"},{"_x":750,"_y":245,"uuid":"pB8_b5QvZY8eMK8ar-TxZ","name":"pie_start"},{"_x":250,"_y":745,"uuid":"k4rRHBpqzlcwSfds5XdRU","name":"pie_end"},{"_x":750,"_y":495,"uuid":"c-FWw4L5KBx7NbNFf_ro4","name":"pie_bend"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"pie_start-pie_bend","start":"pie_start","end":"pie_bend"},{"name":"pie_bend-pie_end","start":"pie_bend","end":"pie_end"}],"_components":[{"points":[{"uuid":"dQTW51q9fHuXG_qXbssvu","type":"anchor","x":250,"y":207.5,"origin":null},{"uuid":"TZmEZMJXRsQDhVzhs_D0H","type":"control","x":250,"y":207.5,"origin":"dQTW51q9fHuXG_qXbssvu"},{"uuid":"-XD7PEO0SAZaE727Ib34p","type":"control","x":270,"y":207.5,"origin":"kVkd1_s-nLlT1QPWUaeOJ"},{"uuid":"kVkd1_s-nLlT1QPWUaeOJ","type":"anchor","x":270,"y":207.5,"origin":null},{"uuid":"esYMBfvIZBbij8keGKith","type":"control","x":270,"y":215.83333333333334,"origin":"kVkd1_s-nLlT1QPWUaeOJ"},{"uuid":"2bH0KRddvhMoEFLmdILZn","type":"control","x":276.6666666666667,"y":220,"origin":"K7fRVguuS8NCpTvjIXQdP"},{"uuid":"K7fRVguuS8NCpTvjIXQdP","type":"anchor","x":290,"y":220,"origin":null},{"uuid":"wT1CoWjrGH8VkjDyeYa_R","type":"control","x":290,"y":220,"origin":"K7fRVguuS8NCpTvjIXQdP"},{"uuid":"0kVOCOwI2UzkdL9Pvr_-0","type":"control","x":704.5393196094851,"y":220,"origin":"opt-SXBxjrbCO46_i48NT"},{"uuid":"opt-SXBxjrbCO46_i48NT","type":"anchor","x":704.5393196094851,"y":220,"origin":null},{"uuid":"2bQxs1okqM5Yp14RZk2Xq","type":"control","x":728.1095456490367,"y":220,"origin":"opt-SXBxjrbCO46_i48NT"},{"uuid":"nO6So82rPvQBtTVN6WAj7","type":"control","x":744.6087038767229,"y":215.28595479208968,"origin":"FoN259lhAAO3usMW9HssN"},{"uuid":"FoN259lhAAO3usMW9HssN","type":"anchor","x":754.0367942925435,"y":205.85786437626905,"origin":null},{"uuid":"dZeubycQcYrUDqXbgj18R","type":"control","x":754.0367942925435,"y":205.85786437626905,"origin":"FoN259lhAAO3usMW9HssN"},{"uuid":"lEQJM3DSCEBGO5Mvanbm7","type":"control","x":788.6148215727886,"y":245.65456346228143,"origin":"LdDn2aH0JTqWF4hpdhuXP"},{"uuid":"LdDn2aH0JTqWF4hpdhuXP","type":"anchor","x":788.6148215727886,"y":245.65456346228143,"origin":null},{"uuid":"6mWhJ-8u7Nbol5YNIwNiB","type":"control","x":779.186731156968,"y":255.08265387810206,"origin":"LdDn2aH0JTqWF4hpdhuXP"},{"uuid":"ROAWtSbckpwjIgNgPvIJD","type":"control","x":772.8783633260939,"y":271.7947859043971,"origin":"We7Amp6yMxS2xiZXV3ly_"},{"uuid":"We7Amp6yMxS2xiZXV3ly_","type":"anchor","x":769.6897180801665,"y":295.7909595411665,"origin":null},{"uuid":"H2emlLnlEy5rDBcRsKbRT","type":"control","x":723.0874059132947,"y":524.2339418490435,"origin":"We7Amp6yMxS2xiZXV3ly_"},{"uuid":"ltkTch8LQCs4td9x6N5W9","type":"control","x":452.1310246400996,"y":671.0777853085658,"origin":"RgZgrSxyUB_ZHxlO_TuVw"},{"uuid":"RgZgrSxyUB_ZHxlO_TuVw","type":"anchor","x":261.180339887499,"y":767.360679774998,"origin":null},{"uuid":"QCp_c4wK3XCObSOJrauxu","type":"control","x":261.180339887499,"y":767.360679774998,"origin":"RgZgrSxyUB_ZHxlO_TuVw"},{"uuid":"Ntf-D36njIH_COcSm3hCM","type":"control","x":238.81966011250105,"y":722.639320225002,"origin":"61SrnfTNLDwS9IkogQ44_"},{"uuid":"61SrnfTNLDwS9IkogQ44_","type":"anchor","x":238.81966011250105,"y":722.639320225002,"origin":null},{"uuid":"Y4Oj7LF6JZFBwQ1-Umt6b","type":"control","x":403.53856148141756,"y":639.8660181991032,"origin":"61SrnfTNLDwS9IkogQ44_"},{"uuid":"u8HWTt_DwDSoG_X8f_-uO","type":"control","x":696.5183815763846,"y":478.6322317764642,"origin":"5DgT_dtSYtOKh8q7QvhcV"},{"uuid":"5DgT_dtSYtOKh8q7QvhcV","type":"anchor","x":723.3780790378268,"y":272.02136948453915,"origin":null},{"uuid":"CtgDuwe-pEotA8RvJf-Z-","type":"control","x":723.3780790378268,"y":272.02136948453915,"origin":"5DgT_dtSYtOKh8q7QvhcV"},{"uuid":"6aPYJxVa0WzXZLjCwI92s","type":"control","x":290,"y":270,"origin":"E7wTwpoK1OMU_o1tiEgGv"},{"uuid":"E7wTwpoK1OMU_o1tiEgGv","type":"anchor","x":290,"y":270,"origin":null},{"uuid":"O7vY5SuMV5j7asG6VaAYp","type":"control","x":276.6666666666667,"y":270,"origin":"E7wTwpoK1OMU_o1tiEgGv"},{"uuid":"ZUnTv-rw41lsv5R8Gyl4W","type":"control","x":270,"y":274.1666666666667,"origin":"sJPyML7y1h1bijK0O5ixp"},{"uuid":"sJPyML7y1h1bijK0O5ixp","type":"anchor","x":270,"y":282.5,"origin":null},{"uuid":"_7QVAuBZV06amVNM2kh9q","type":"control","x":270,"y":282.5,"origin":"sJPyML7y1h1bijK0O5ixp"},{"uuid":"sqFsezx8J2ETw8Zd5y-5H","type":"control","x":250,"y":282.5,"origin":"mwHkGswJLfnfUJ49XVNeL"},{"uuid":"mwHkGswJLfnfUJ49XVNeL","type":"anchor","x":250,"y":282.5,"origin":null},{"uuid":"DNPqrgvCOf0XXIfwbd91-","type":"control","x":250,"y":282.5,"origin":"mwHkGswJLfnfUJ49XVNeL"},{"uuid":"wpgIj5jLJYHO-VCdKTtHE","type":"control","x":250,"y":207.5,"origin":"_FyYdPBLr3MDuqdZyIZXa"},{"uuid":"_FyYdPBLr3MDuqdZyIZXa","type":"anchor","x":250,"y":207.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":592.5},"end":{"x":270,"y":592.5},"control1":{"x":250,"y":592.5},"control2":{"x":270,"y":592.5},"fill":false},{"type":2,"start":{"x":270,"y":592.5},"end":{"x":290,"y":580},"control1":{"x":270,"y":584.1666666666666},"control2":{"x":276.6666666666667,"y":580},"fill":false},{"type":2,"start":{"x":290,"y":580},"end":{"x":704.5393196094851,"y":580},"control1":{"x":290,"y":580},"control2":{"x":704.5393196094851,"y":580},"fill":false},{"type":2,"start":{"x":704.5393196094851,"y":580},"end":{"x":754.0367942925435,"y":594.142135623731},"control1":{"x":728.1095456490367,"y":580},"control2":{"x":744.6087038767229,"y":584.7140452079103},"fill":false},{"type":2,"start":{"x":754.0367942925435,"y":594.142135623731},"end":{"x":788.6148215727886,"y":554.3454365377186},"control1":{"x":754.0367942925435,"y":594.142135623731},"control2":{"x":788.6148215727886,"y":554.3454365377186},"fill":false},{"type":2,"start":{"x":788.6148215727886,"y":554.3454365377186},"end":{"x":769.6897180801665,"y":504.2090404588335},"control1":{"x":779.186731156968,"y":544.9173461218979},"control2":{"x":772.8783633260939,"y":528.205214095603},"fill":false},{"type":2,"start":{"x":769.6897180801665,"y":504.2090404588335},"end":{"x":261.180339887499,"y":32.63932022500205},"control1":{"x":723.0874059132947,"y":275.7660581509565},"control2":{"x":452.1310246400996,"y":128.9222146914342},"fill":false},{"type":2,"start":{"x":261.180339887499,"y":32.63932022500205},"end":{"x":238.81966011250105,"y":77.36067977499795},"control1":{"x":261.180339887499,"y":32.63932022500205},"control2":{"x":238.81966011250105,"y":77.36067977499795},"fill":false},{"type":2,"start":{"x":238.81966011250105,"y":77.36067977499795},"end":{"x":723.3780790378268,"y":527.9786305154608},"control1":{"x":403.53856148141756,"y":160.13398180089678},"control2":{"x":696.5183815763846,"y":321.3677682235358},"fill":false},{"type":2,"start":{"x":723.3780790378268,"y":527.9786305154608},"end":{"x":290,"y":530},"control1":{"x":723.3780790378268,"y":527.9786305154608},"control2":{"x":290,"y":530},"fill":false},{"type":2,"start":{"x":290,"y":530},"end":{"x":270,"y":517.5},"control1":{"x":276.6666666666667,"y":530},"control2":{"x":270,"y":525.8333333333333},"fill":false},{"type":2,"start":{"x":270,"y":517.5},"end":{"x":250,"y":517.5},"control1":{"x":270,"y":517.5},"control2":{"x":250,"y":517.5},"fill":false},{"type":2,"start":{"x":250,"y":517.5},"end":{"x":250,"y":592.5},"control1":{"x":250,"y":517.5},"control2":{"x":250,"y":592.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":20.75},"end":{"x":27,"y":20.75},"control1":{"x":25,"y":20.75},"control2":{"x":27,"y":20.75},"fill":false},{"type":2,"start":{"x":27,"y":20.75},"end":{"x":29,"y":22},"control1":{"x":27,"y":21.583333333333336},"control2":{"x":27.66666666666667,"y":22},"fill":false},{"type":2,"start":{"x":29,"y":22},"end":{"x":70.45393196094851,"y":22},"control1":{"x":29,"y":22},"control2":{"x":70.45393196094851,"y":22},"fill":false},{"type":2,"start":{"x":70.45393196094851,"y":22},"end":{"x":75.40367942925435,"y":20.585786437626908},"control1":{"x":72.81095456490367,"y":22},"control2":{"x":74.46087038767229,"y":21.52859547920897},"fill":false},{"type":2,"start":{"x":75.40367942925435,"y":20.585786437626908},"end":{"x":78.86148215727887,"y":24.565456346228146},"control1":{"x":75.40367942925435,"y":20.585786437626908},"control2":{"x":78.86148215727887,"y":24.565456346228146},"fill":false},{"type":2,"start":{"x":78.86148215727887,"y":24.565456346228146},"end":{"x":76.96897180801665,"y":29.579095954116653},"control1":{"x":77.9186731156968,"y":25.50826538781021},"control2":{"x":77.2878363326094,"y":27.17947859043971},"fill":false},{"type":2,"start":{"x":76.96897180801665,"y":29.579095954116653},"end":{"x":26.1180339887499,"y":76.7360679774998},"control1":{"x":72.30874059132947,"y":52.42339418490435},"control2":{"x":45.213102464009964,"y":67.10777853085658},"fill":false},{"type":2,"start":{"x":26.1180339887499,"y":76.7360679774998},"end":{"x":23.881966011250107,"y":72.26393202250021},"control1":{"x":26.1180339887499,"y":76.7360679774998},"control2":{"x":23.881966011250107,"y":72.26393202250021},"fill":false},{"type":2,"start":{"x":23.881966011250107,"y":72.26393202250021},"end":{"x":72.33780790378268,"y":27.202136948453916},"control1":{"x":40.35385614814176,"y":63.98660181991033},"control2":{"x":69.65183815763847,"y":47.863223177646425},"fill":false},{"type":2,"start":{"x":72.33780790378268,"y":27.202136948453916},"end":{"x":29,"y":27},"control1":{"x":72.33780790378268,"y":27.202136948453916},"control2":{"x":29,"y":27},"fill":false},{"type":2,"start":{"x":29,"y":27},"end":{"x":27,"y":28.25},"control1":{"x":27.66666666666667,"y":27},"control2":{"x":27,"y":27.41666666666667},"fill":false},{"type":2,"start":{"x":27,"y":28.25},"end":{"x":25,"y":28.25},"control1":{"x":27,"y":28.25},"control2":{"x":25,"y":28.25},"fill":false},{"type":2,"start":{"x":25,"y":28.25},"end":{"x":25,"y":20.75},"control1":{"x":25,"y":28.25},"control2":{"x":25,"y":20.75},"fill":false}]}]}},{"uuid":"Wd9X-kloGeJZf4KsV518R","type":"system","name":"横折折撇","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"E2EmHXCVX295sWsdhbVKl","name":"横-长度","type":0,"value":220,"min":0,"max":1000},{"uuid":"BEwFsdGHGwac2h6-PY8bM","name":"折1-水平延伸","type":0,"value":150,"min":0,"max":1000},{"uuid":"OtAu6u6F7esgSJQvI4yJh","name":"折1-竖直延伸","type":0,"value":200,"min":0,"max":1000},{"uuid":"w14Pm0dlk1vBoLQFcff1I","name":"折2-长度","type":0,"value":150,"min":0,"max":1000},{"uuid":"24kR9ZmnUsdme5oNowDNO","name":"撇-水平延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"Yw6cmwHOvjwoXttzPbqzc","name":"撇-竖直延伸","type":0,"value":420,"min":0,"max":1000},{"uuid":"zARulBMYL4LO5qXdydQcp","name":"撇-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"coYVTrh-8cCSXrzozB_EJ","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"4-tx3lG_ntokUrakGbGqd","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"DIfp9IXW-WiAmnS_OpZAo","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"au0h179et8mZVumqcEnV2","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"wugLtvOAm8v0uD6aJ4RFo","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"YjlQV3BipOhjWYl4L7Aa_","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"9Yq99Go4-ruOs0UQBnAZQ","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"ZvhmuV7lF0lGJN54hoGrM","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_Wd9X_kloGeJZf4KsV518R (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 390\nconst y0 = 185\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe1_horizonalSpan: glyph.getParam('折1-水平延伸'),\n  zhe1_verticalSpan: glyph.getParam('折1-竖直延伸'),\n  zhe2_length: glyph.getParam('折2-长度'),\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  pie_bendCursor: glyph.getParam('撇-弯曲游标'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'zhe1_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'zhe1_end': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y + deltaY,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe2_start': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y + deltaY,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe2_end': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'pie_start': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      break\n    }\n    case 'pie_bend': {\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'])\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变撇end的情况下，不会改变弯曲游标，所以依据现有参数计算新的bend\n  const { pie_bendCursor } = params\n  const verticalSpan = Math.abs(end.y - start.y)\n\n  const bend = {\n    x: start.x,\n    y: start.y + pie_bendCursor * verticalSpan,\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折1-水平延伸', _params.zhe1_horizonalSpan)\n  glyph.setParam('折1-竖直延伸', _params.zhe1_verticalSpan)\n  glyph.setParam('折2-长度', _params.zhe2_length)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('撇-弯曲游标', _params.pie_bendCursor)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe1_start, zhe1_end, zhe2_start, zhe2_end, pie_start, pie_bend, pie_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe1_horizonal_span_range = glyph.getParamRange('折1-水平延伸')\n  const zhe1_vertical_span_range = glyph.getParamRange('折1-竖直延伸')\n  const zhe2_length_range = glyph.getParamRange('折2-长度')\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const pie_bend_cursor_range = glyph.getParamRange('撇-弯曲游标')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe1_horizonalSpan = range(zhe1_start.x - zhe1_end.x, zhe1_horizonal_span_range)\n  const zhe1_verticalSpan = range(zhe1_end.y - zhe1_start.y, zhe1_vertical_span_range)\n  const zhe2_length = range(zhe2_end.x - zhe2_start.x, zhe2_length_range)\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const pie_bendCursor = range((pie_bend.y - pie_start.y) / pie_verticalSpan, pie_bend_cursor_range)\n  return {\n    heng_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    zhe2_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    zhe2_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折1\n  const zhe1_start = new FP.Joint(\n    'zhe1_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe1_end = new FP.Joint(\n    'zhe1_end',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n\n  // 折2\n  const zhe2_start = new FP.Joint(\n    'zhe2_start',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n  const zhe2_end = new FP.Joint(\n    'zhe2_end',\n    {\n      x: zhe2_start.x + zhe2_length,\n      y: zhe2_start.y,\n    },\n  )\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: zhe2_start.x + zhe2_length,\n      y: zhe2_start.y,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  const pie_bend = new FP.Joint(\n    'pie_bend',\n    {\n      x: pie_start.x,\n      y: pie_start.y + pie_bendCursor * pie_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe1_start)\n  glyph.addJoint(zhe1_end)\n  glyph.addJoint(zhe2_start)\n  glyph.addJoint(zhe2_end)\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(pie_bend)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe1_start, zhe1_end))\n  glyph.addRefLine(refline(zhe2_start, zhe2_end))\n  glyph.addRefLine(refline(pie_start, pie_bend))\n  glyph.addRefLine(refline(pie_bend, pie_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    pie_start,\n    pie_end,\n    pie_bend,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe1_start, out_zhe1_end, in_zhe1_start, in_zhe1_end } = FP.getLineContours('zhe1', { zhe1_start, zhe1_end }, weight)\n  const { out_zhe2_start, out_zhe2_end, in_zhe2_start, in_zhe2_end } = FP.getLineContours('zhe2', { zhe2_start, zhe2_end }, weight)\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start, pie_bend, pie_end }, weight, {\n    weightsVariation: 'pow',\n    weightsVariationDir: 'reverse',\n    weightsVariationPower: weights_variation_power,\n  })\n  const { corner: in_corner_heng_zhe1 } = FP.getIntersection(\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const { corner: out_corner_heng_zhe1 } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: out_heng_start, end: out_heng_end }\n  )\n  const { corner: in_corner_1_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end }\n  )\n  const in_corner_2_zhe1_zhe2 = {\n    x: in_corner_1_zhe1_zhe2.x,\n    y: in_corner_1_zhe1_zhe2.y + weight\n  }\n  const { corner: out_corner_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end }\n  )\n  const { corner: in_corner_zhe2_pie, corner_index: in_corner_index_zhe2_pie } = FP.getIntersection(\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n    { type: 'curve', points: in_pie_points }\n  )\n  const { corner: out_corner_zhe2_pie, corner_index: out_corner_index_zhe2_pie } = FP.getIntersection(\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n    { type: 'line', start: out_pie_curves[0].start, end: out_pie_curves[0].control1 }\n  )\n  let { curves: out_pie_curves_final } = FP.fitCurvesByPoints(out_pie_points.slice(out_corner_index_zhe2_pie))\n  let { curves: in_pie_curves_final } = FP.fitCurvesByPoints(in_pie_points.slice(in_corner_index_zhe2_pie))\n  const { corner: out_corner_heng_zhe1_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_zhe1_up = {\n    x: out_corner_heng_zhe1_down.x,\n    y: out_corner_heng_zhe1_down.y - weight,\n  }\n\n  let turn_data_heng_zhe1 = {}\n  let turn_data_zhe2_pie = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    {\n      const turn_length = 20 * turn_style_value\n      const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe1, out_zhe1_end)\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_heng_zhe1.x - corner_radius,\n        y: out_corner_heng_zhe1.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2 = getRadiusPoint({\n        start: out_corner_heng_zhe1,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_start_2 = getRadiusPoint({\n        start: turn_control_2,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      turn_data_heng_zhe1 = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n    {\n      const turn_length = 20 * turn_style_value\n      const inner_angle = Math.PI / 2\n      const mid_angle = Math.PI / 4\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_zhe2_pie.x - corner_radius,\n        y: out_corner_zhe2_pie.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2_data = FP.getRadiusPointsOnCurve(\n        FP.getCurvesPoints(out_pie_curves_final),\n        corner_radius - weight / 2,\n      )\n      const turn_control_2 = turn_control_2_data.point\n      const turn_start_2_data = FP.getRadiusPointsOnCurve(\n        FP.getCurvesPoints(turn_control_2_data.final_curves),\n        corner_radius,\n      )\n      const turn_start_2 = turn_start_2_data.point\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      out_pie_curves_final = turn_start_2_data.final_curves\n      turn_data_zhe2_pie = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    pen.lineTo(out_corner_heng_zhe1_up.x, out_corner_heng_zhe1_up.y)\n    pen.lineTo(out_corner_heng_zhe1_down.x, out_corner_heng_zhe1_down.y)\n    pen.lineTo(out_corner_zhe1_zhe2.x, out_corner_zhe1_zhe2.y)\n    pen.lineTo(out_corner_zhe2_pie.x, out_corner_zhe2_pie.y)\n    pen.lineTo(out_pie_curves_final[0].start.x, out_pie_curves_final[0].start.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    // 绘制横折1转角\n    pen.lineTo(turn_data_heng_zhe1.turn_start_1.x, turn_data_heng_zhe1.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_heng_zhe1.turn_control_1.x, turn_data_heng_zhe1.turn_control_1.y, turn_data_heng_zhe1.turn_end_1.x, turn_data_heng_zhe1.turn_end_1.y)\n    pen.lineTo(turn_data_heng_zhe1.turn_end_2.x, turn_data_heng_zhe1.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_heng_zhe1.turn_control_2.x, turn_data_heng_zhe1.turn_control_2.y, turn_data_heng_zhe1.turn_start_2.x, turn_data_heng_zhe1.turn_start_2.y)\n    // 绘制外侧折1\n    pen.lineTo(out_corner_zhe1_zhe2.x, out_corner_zhe1_zhe2.y)\n    // 绘制折2撇转角\n    pen.lineTo(turn_data_zhe2_pie.turn_start_1.x, turn_data_zhe2_pie.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_zhe2_pie.turn_control_1.x, turn_data_zhe2_pie.turn_control_1.y, turn_data_zhe2_pie.turn_end_1.x, turn_data_zhe2_pie.turn_end_1.y)\n    pen.lineTo(turn_data_zhe2_pie.turn_end_2.x, turn_data_zhe2_pie.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_zhe2_pie.turn_control_2.x, turn_data_zhe2_pie.turn_control_2.y, turn_data_zhe2_pie.turn_start_2.x, turn_data_zhe2_pie.turn_start_2.y)\n  }\n  for (let i = 0; i < out_pie_curves_final.length; i++) {\n    const curve = out_pie_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_pie_curves_final[in_pie_curves_final.length - 1].end.x, in_pie_curves_final[in_pie_curves_final.length - 1].end.y)\n\n  // 绘制左侧（内侧）轮廓\n  for (let i = in_pie_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  pen.lineTo(in_corner_2_zhe1_zhe2.x, in_corner_2_zhe1_zhe2.y)\n  pen.lineTo(in_corner_1_zhe1_zhe2.x, in_corner_1_zhe1_zhe2.y)\n  pen.lineTo(in_corner_heng_zhe1.x, in_corner_heng_zhe1.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":390,"_y":185,"uuid":"0ky-F0PrUPaN2Jl7QI4Hx","name":"heng_start_ref"},{"_x":610,"_y":185,"uuid":"hL3RdVn0YVTeyllut_IO-","name":"heng_end_ref"},{"_x":390,"_y":185,"uuid":"Xsi7DEJGwGheFm__IzqmF","name":"heng_start"},{"_x":610,"_y":185,"uuid":"6CZtWIhi_i10XpJXqJpoe","name":"heng_end"},{"_x":610,"_y":185,"uuid":"qhViLINrjiICJKfDHva_0","name":"zhe1_start"},{"_x":460,"_y":385,"uuid":"nTOuXnwbX--siOIugNn55","name":"zhe1_end"},{"_x":460,"_y":385,"uuid":"48UbGNScBe_lBegfxN-FI","name":"zhe2_start"},{"_x":610,"_y":385,"uuid":"tlEIX6dUmkxYrcUt1yhnj","name":"zhe2_end"},{"_x":610,"_y":385,"uuid":"mhzdcWxijW6k73PAnnqAl","name":"pie_start"},{"_x":310,"_y":805,"uuid":"likJ64ZZNAxENEPD9of4q","name":"pie_end"},{"_x":610,"_y":595,"uuid":"VGiXjHtGCegd_StHKKDxq","name":"pie_bend"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe1_start-zhe1_end","start":"zhe1_start","end":"zhe1_end"},{"name":"zhe2_start-zhe2_end","start":"zhe2_start","end":"zhe2_end"},{"name":"pie_start-pie_bend","start":"pie_start","end":"pie_bend"},{"name":"pie_bend-pie_end","start":"pie_bend","end":"pie_end"}],"_components":[{"points":[{"uuid":"Kq3OHUaTqSCi4KEGjXb3q","type":"anchor","x":390,"y":147.5,"origin":null},{"uuid":"iZHmrnrCUDLpokGTU1rAG","type":"control","x":390,"y":147.5,"origin":"Kq3OHUaTqSCi4KEGjXb3q"},{"uuid":"G7ZIRoHQ__sIlrga6tv5d","type":"control","x":410,"y":147.5,"origin":"cJuOA6YRVpwq6l_UAzPGv"},{"uuid":"cJuOA6YRVpwq6l_UAzPGv","type":"anchor","x":410,"y":147.5,"origin":null},{"uuid":"V-AWDB8VpDoW-vknW_kbD","type":"control","x":410,"y":155.83333333333334,"origin":"cJuOA6YRVpwq6l_UAzPGv"},{"uuid":"Ij-Rfv0ViOdAI21riBrLk","type":"control","x":416.6666666666667,"y":160,"origin":"XeLUKSpPtjMZp40BwRmG9"},{"uuid":"XeLUKSpPtjMZp40BwRmG9","type":"anchor","x":430,"y":160,"origin":null},{"uuid":"_4BPYUVywuOzPLGbzWGMz","type":"control","x":430,"y":160,"origin":"XeLUKSpPtjMZp40BwRmG9"},{"uuid":"7Jr3-TtWc2mirI237tfEo","type":"control","x":558.4552274264677,"y":160,"origin":"uE0rjBGUxC-TEa-FY89Za"},{"uuid":"uE0rjBGUxC-TEa-FY89Za","type":"anchor","x":558.4552274264677,"y":160,"origin":null},{"uuid":"iiLGSw_a12MCESANGNIUz","type":"control","x":597.2054457352922,"y":160,"origin":"uE0rjBGUxC-TEa-FY89Za"},{"uuid":"N0ntFZVRlmfFicnEdBiRc","type":"control","x":622.5990803632903,"y":157.13263264156095,"origin":"aypK_HOg4oSx5CZgqjajY"},{"uuid":"aypK_HOg4oSx5CZgqjajY","type":"anchor","x":634.6361313104622,"y":151.3978979246828,"origin":null},{"uuid":"g7ZFTHqdZZbnNOVPud2Bm","type":"control","x":634.6361313104622,"y":151.3978979246828,"origin":"aypK_HOg4oSx5CZgqjajY"},{"uuid":"3-_PaK2hEjHoKYp3lVA-N","type":"control","x":656.1413864987553,"y":196.5368389765772,"origin":"K3_8IgoT00ZiYFneImfhP"},{"uuid":"K3_8IgoT00ZiYFneImfhP","type":"anchor","x":656.1413864987553,"y":196.5368389765772,"origin":null},{"uuid":"dIJdYl4Wrk6aNUjWJlYrJ","type":"control","x":644.1043355515834,"y":202.27157369345534,"origin":"K3_8IgoT00ZiYFneImfhP"},{"uuid":"1Q1LIG-h2DP4PcBLtVj9v","type":"control","x":625.8791193196829,"y":220.1852547358592,"origin":"ziHEqp71j2GENh2SjLtnG"},{"uuid":"ziHEqp71j2GENh2SjLtnG","type":"anchor","x":601.4657378030538,"y":250.27788210378878,"origin":null},{"uuid":"7uYxKS5pYQorTpNl8SJHO","type":"control","x":601.4657378030538,"y":250.27788210378878,"origin":"ziHEqp71j2GENh2SjLtnG"},{"uuid":"ifJg6YFuFn2xOlc9WMIuB","type":"control","x":510,"y":360,"origin":"zugFf0Y_7t9fR2-nTAX_c"},{"uuid":"zugFf0Y_7t9fR2-nTAX_c","type":"anchor","x":510,"y":360,"origin":null},{"uuid":"jJY4l-NOPC_X9sWYX7-OH","type":"control","x":510,"y":360,"origin":"zugFf0Y_7t9fR2-nTAX_c"},{"uuid":"XFrnmEQ2A98YR1UyFOTGW","type":"control","x":564.467892596045,"y":360,"origin":"x2sNJIJlUEn4CullRRhdw"},{"uuid":"x2sNJIJlUEn4CullRRhdw","type":"anchor","x":564.467892596045,"y":360,"origin":null},{"uuid":"b_bcVqZEsizZO9H3Gqxf7","type":"control","x":588.0381186355966,"y":360,"origin":"x2sNJIJlUEn4CullRRhdw"},{"uuid":"pCCIakAkrv14GaDdN_lHi","type":"control","x":604.5372768632827,"y":355.2859547920897,"origin":"VnpWZDXWMcIggcllX_28Q"},{"uuid":"VnpWZDXWMcIggcllX_28Q","type":"anchor","x":613.9653672791034,"y":345.85786437626905,"origin":null},{"uuid":"M5Tt6jsO5ixBhLpbfHI0W","type":"control","x":613.9653672791034,"y":345.85786437626905,"origin":"VnpWZDXWMcIggcllX_28Q"},{"uuid":"YPydd12oAOvwdsvKRmL67","type":"control","x":648.865809441986,"y":382.36817519792453,"origin":"OkRUJack0N2dfJg_hRTb0"},{"uuid":"OkRUJack0N2dfJg_hRTb0","type":"anchor","x":648.865809441986,"y":382.36817519792453,"origin":null},{"uuid":"4Lzgfog_CanBgzc2kPG7s","type":"control","x":639.4377190261654,"y":391.79626561374516,"origin":"OkRUJack0N2dfJg_hRTb0"},{"uuid":"ZG17ti3zBXyHwVAItNlZY","type":"control","x":633.3650951666968,"y":409.52758162372305,"origin":"r35YLJyoucQzG3Zmw4Ak9"},{"uuid":"r35YLJyoucQzG3Zmw4Ak9","type":"anchor","x":630.6479378635805,"y":435.5621232278582,"origin":null},{"uuid":"usdiov-SS9RFkzFAhNZhG","type":"control","x":601.7143600741571,"y":607.7478195339595,"origin":"r35YLJyoucQzG3Zmw4Ak9"},{"uuid":"5C-bPjPFYva5-1N3mMEVt","type":"control","x":459.4885838665409,"y":729.8585872677988,"origin":"JTcUdx7pyaGdgRTDq1DsP"},{"uuid":"JTcUdx7pyaGdgRTDq1DsP","type":"anchor","x":324.3365586090832,"y":825.480798012976,"origin":null},{"uuid":"2G9N-QRAS8IOsIQWeALVW","type":"control","x":324.3365586090832,"y":825.480798012976,"origin":"JTcUdx7pyaGdgRTDq1DsP"},{"uuid":"nphMuHOLJ_-xqC01EJvZE","type":"control","x":295.6634413909168,"y":784.519201987024,"origin":"0Kwkw6B1Xn90tdNAnGSb2"},{"uuid":"0Kwkw6B1Xn90tdNAnGSb2","type":"anchor","x":295.6634413909168,"y":784.519201987024,"origin":null},{"uuid":"rMNtWpUI2yKS8lPBJY-9w","type":"control","x":420.5698023662046,"y":696.6454046360025,"origin":"0Kwkw6B1Xn90tdNAnGSb2"},{"uuid":"KsAsNkvEU74lBUuGWbAIM","type":"control","x":566.199063796864,"y":574.8250510304894,"origin":"rgaUR8JjhScz_ZzLxyF3R"},{"uuid":"rgaUR8JjhScz_ZzLxyF3R","type":"anchor","x":583.6540702447501,"y":411.91240702447493,"origin":null},{"uuid":"RUU8Qs7hb3n2qztW7v2_z","type":"control","x":583.6540702447501,"y":411.91240702447493,"origin":"rgaUR8JjhScz_ZzLxyF3R"},{"uuid":"D0woiMWf_1_9Slq6y0H0a","type":"control","x":447.5,"y":410,"origin":"gvoxYIUCtMrXChZrgAOb7"},{"uuid":"gvoxYIUCtMrXChZrgAOb7","type":"anchor","x":447.5,"y":410,"origin":null},{"uuid":"WBC12K059tFKBCAwDouFO","type":"control","x":447.5,"y":410,"origin":"gvoxYIUCtMrXChZrgAOb7"},{"uuid":"h0aEyu1Ktt3c5AUymjd29","type":"control","x":447.5,"y":360,"origin":"KwbLiPeCWQR8yXMgR4CoY"},{"uuid":"KwbLiPeCWQR8yXMgR4CoY","type":"anchor","x":447.5,"y":360,"origin":null},{"uuid":"8iQeuBwJWy54zB3CSKi9H","type":"control","x":447.5,"y":360,"origin":"KwbLiPeCWQR8yXMgR4CoY"},{"uuid":"rH4aG1aMx6eOj0bq-3UxB","type":"control","x":560,"y":210,"origin":"b97XglIvLlmZKVN6pm7F0"},{"uuid":"b97XglIvLlmZKVN6pm7F0","type":"anchor","x":560,"y":210,"origin":null},{"uuid":"YHRuEe0RbthC7RurvX73X","type":"control","x":560,"y":210,"origin":"b97XglIvLlmZKVN6pm7F0"},{"uuid":"eqBvW2oS_BTqCWFvqgoyT","type":"control","x":430,"y":210,"origin":"HQrs5qCXuc4UMLyX__xQf"},{"uuid":"HQrs5qCXuc4UMLyX__xQf","type":"anchor","x":430,"y":210,"origin":null},{"uuid":"tIPeQwygf_SNITBl-KYVq","type":"control","x":416.6666666666667,"y":210,"origin":"HQrs5qCXuc4UMLyX__xQf"},{"uuid":"jqnAkOUlHUfeXFkQw1shQ","type":"control","x":410,"y":214.16666666666666,"origin":"chha6kBJE9KeB15IxSb68"},{"uuid":"chha6kBJE9KeB15IxSb68","type":"anchor","x":410,"y":222.5,"origin":null},{"uuid":"2-oXdalqXUe5x6BwGF6GU","type":"control","x":410,"y":222.5,"origin":"chha6kBJE9KeB15IxSb68"},{"uuid":"elhXZNtD3bVsOIzLpwitP","type":"control","x":390,"y":222.5,"origin":"IXFMFrEDke4Wjl2TBqXIk"},{"uuid":"IXFMFrEDke4Wjl2TBqXIk","type":"anchor","x":390,"y":222.5,"origin":null},{"uuid":"1CEsSyMBaIyrdhQckJv_B","type":"control","x":390,"y":222.5,"origin":"IXFMFrEDke4Wjl2TBqXIk"},{"uuid":"U-QIih6a0hZNnwDKexnyv","type":"control","x":390,"y":147.5,"origin":"YqJnbo9wQPAF5PKvWrUVI"},{"uuid":"YqJnbo9wQPAF5PKvWrUVI","type":"anchor","x":390,"y":147.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":390,"y":652.5},"end":{"x":410,"y":652.5},"control1":{"x":390,"y":652.5},"control2":{"x":410,"y":652.5},"fill":false},{"type":2,"start":{"x":410,"y":652.5},"end":{"x":430,"y":640},"control1":{"x":410,"y":644.1666666666666},"control2":{"x":416.6666666666667,"y":640},"fill":false},{"type":2,"start":{"x":430,"y":640},"end":{"x":558.4552274264677,"y":640},"control1":{"x":430,"y":640},"control2":{"x":558.4552274264677,"y":640},"fill":false},{"type":2,"start":{"x":558.4552274264677,"y":640},"end":{"x":634.6361313104622,"y":648.6021020753171},"control1":{"x":597.2054457352922,"y":640},"control2":{"x":622.5990803632903,"y":642.8673673584391},"fill":false},{"type":2,"start":{"x":634.6361313104622,"y":648.6021020753171},"end":{"x":656.1413864987553,"y":603.4631610234228},"control1":{"x":634.6361313104622,"y":648.6021020753171},"control2":{"x":656.1413864987553,"y":603.4631610234228},"fill":false},{"type":2,"start":{"x":656.1413864987553,"y":603.4631610234228},"end":{"x":601.4657378030538,"y":549.7221178962112},"control1":{"x":644.1043355515834,"y":597.7284263065446},"control2":{"x":625.8791193196829,"y":579.8147452641408},"fill":false},{"type":2,"start":{"x":601.4657378030538,"y":549.7221178962112},"end":{"x":510,"y":440},"control1":{"x":601.4657378030538,"y":549.7221178962112},"control2":{"x":510,"y":440},"fill":false},{"type":2,"start":{"x":510,"y":440},"end":{"x":564.467892596045,"y":440},"control1":{"x":510,"y":440},"control2":{"x":564.467892596045,"y":440},"fill":false},{"type":2,"start":{"x":564.467892596045,"y":440},"end":{"x":613.9653672791034,"y":454.14213562373095},"control1":{"x":588.0381186355966,"y":440},"control2":{"x":604.5372768632827,"y":444.7140452079103},"fill":false},{"type":2,"start":{"x":613.9653672791034,"y":454.14213562373095},"end":{"x":648.865809441986,"y":417.63182480207547},"control1":{"x":613.9653672791034,"y":454.14213562373095},"control2":{"x":648.865809441986,"y":417.63182480207547},"fill":false},{"type":2,"start":{"x":648.865809441986,"y":417.63182480207547},"end":{"x":630.6479378635805,"y":364.43787677214186},"control1":{"x":639.4377190261654,"y":408.20373438625484},"control2":{"x":633.3650951666968,"y":390.4724183762769},"fill":false},{"type":2,"start":{"x":630.6479378635805,"y":364.43787677214186},"end":{"x":324.3365586090832,"y":-25.480798012976038},"control1":{"x":601.7143600741571,"y":192.2521804660405},"control2":{"x":459.4885838665409,"y":70.14141273220116},"fill":false},{"type":2,"start":{"x":324.3365586090832,"y":-25.480798012976038},"end":{"x":295.6634413909168,"y":15.480798012976038},"control1":{"x":324.3365586090832,"y":-25.480798012976038},"control2":{"x":295.6634413909168,"y":15.480798012976038},"fill":false},{"type":2,"start":{"x":295.6634413909168,"y":15.480798012976038},"end":{"x":583.6540702447501,"y":388.087592975525},"control1":{"x":420.5698023662046,"y":103.35459536399753},"control2":{"x":566.199063796864,"y":225.17494896951064},"fill":false},{"type":2,"start":{"x":583.6540702447501,"y":388.087592975525},"end":{"x":447.5,"y":390},"control1":{"x":583.6540702447501,"y":388.087592975525},"control2":{"x":447.5,"y":390},"fill":false},{"type":2,"start":{"x":447.5,"y":390},"end":{"x":447.5,"y":440},"control1":{"x":447.5,"y":390},"control2":{"x":447.5,"y":440},"fill":false},{"type":2,"start":{"x":447.5,"y":440},"end":{"x":560,"y":590},"control1":{"x":447.5,"y":440},"control2":{"x":560,"y":590},"fill":false},{"type":2,"start":{"x":560,"y":590},"end":{"x":430,"y":590},"control1":{"x":560,"y":590},"control2":{"x":430,"y":590},"fill":false},{"type":2,"start":{"x":430,"y":590},"end":{"x":410,"y":577.5},"control1":{"x":416.6666666666667,"y":590},"control2":{"x":410,"y":585.8333333333334},"fill":false},{"type":2,"start":{"x":410,"y":577.5},"end":{"x":390,"y":577.5},"control1":{"x":410,"y":577.5},"control2":{"x":390,"y":577.5},"fill":false},{"type":2,"start":{"x":390,"y":577.5},"end":{"x":390,"y":652.5},"control1":{"x":390,"y":577.5},"control2":{"x":390,"y":652.5},"fill":false}],"preview":[{"type":2,"start":{"x":39,"y":14.75},"end":{"x":41,"y":14.75},"control1":{"x":39,"y":14.75},"control2":{"x":41,"y":14.75},"fill":false},{"type":2,"start":{"x":41,"y":14.75},"end":{"x":43,"y":16},"control1":{"x":41,"y":15.583333333333336},"control2":{"x":41.66666666666667,"y":16},"fill":false},{"type":2,"start":{"x":43,"y":16},"end":{"x":55.84552274264677,"y":16},"control1":{"x":43,"y":16},"control2":{"x":55.84552274264677,"y":16},"fill":false},{"type":2,"start":{"x":55.84552274264677,"y":16},"end":{"x":63.46361313104623,"y":15.139789792468282},"control1":{"x":59.720544573529224,"y":16},"control2":{"x":62.25990803632904,"y":15.713263264156096},"fill":false},{"type":2,"start":{"x":63.46361313104623,"y":15.139789792468282},"end":{"x":65.61413864987553,"y":19.65368389765772},"control1":{"x":63.46361313104623,"y":15.139789792468282},"control2":{"x":65.61413864987553,"y":19.65368389765772},"fill":false},{"type":2,"start":{"x":65.61413864987553,"y":19.65368389765772},"end":{"x":60.14657378030538,"y":25.02778821037888},"control1":{"x":64.41043355515835,"y":20.227157369345534},"control2":{"x":62.58791193196829,"y":22.01852547358592},"fill":false},{"type":2,"start":{"x":60.14657378030538,"y":25.02778821037888},"end":{"x":51,"y":36},"control1":{"x":60.14657378030538,"y":25.02778821037888},"control2":{"x":51,"y":36},"fill":false},{"type":2,"start":{"x":51,"y":36},"end":{"x":56.4467892596045,"y":36},"control1":{"x":51,"y":36},"control2":{"x":56.4467892596045,"y":36},"fill":false},{"type":2,"start":{"x":56.4467892596045,"y":36},"end":{"x":61.39653672791034,"y":34.58578643762691},"control1":{"x":58.80381186355966,"y":36},"control2":{"x":60.45372768632828,"y":35.52859547920897},"fill":false},{"type":2,"start":{"x":61.39653672791034,"y":34.58578643762691},"end":{"x":64.8865809441986,"y":38.23681751979245},"control1":{"x":61.39653672791034,"y":34.58578643762691},"control2":{"x":64.8865809441986,"y":38.23681751979245},"fill":false},{"type":2,"start":{"x":64.8865809441986,"y":38.23681751979245},"end":{"x":63.06479378635805,"y":43.556212322785825},"control1":{"x":63.94377190261654,"y":39.17962656137452},"control2":{"x":63.336509516669686,"y":40.952758162372305},"fill":false},{"type":2,"start":{"x":63.06479378635805,"y":43.556212322785825},"end":{"x":32.433655860908324,"y":82.5480798012976},"control1":{"x":60.17143600741571,"y":60.77478195339595},"control2":{"x":45.948858386654095,"y":72.98585872677988},"fill":false},{"type":2,"start":{"x":32.433655860908324,"y":82.5480798012976},"end":{"x":29.56634413909168,"y":78.4519201987024},"control1":{"x":32.433655860908324,"y":82.5480798012976},"control2":{"x":29.56634413909168,"y":78.4519201987024},"fill":false},{"type":2,"start":{"x":29.56634413909168,"y":78.4519201987024},"end":{"x":58.36540702447501,"y":41.191240702447494},"control1":{"x":42.05698023662046,"y":69.66454046360025},"control2":{"x":56.619906379686405,"y":57.482505103048936},"fill":false},{"type":2,"start":{"x":58.36540702447501,"y":41.191240702447494},"end":{"x":44.75,"y":41},"control1":{"x":58.36540702447501,"y":41.191240702447494},"control2":{"x":44.75,"y":41},"fill":false},{"type":2,"start":{"x":44.75,"y":41},"end":{"x":44.75,"y":36},"control1":{"x":44.75,"y":41},"control2":{"x":44.75,"y":36},"fill":false},{"type":2,"start":{"x":44.75,"y":36},"end":{"x":56,"y":21},"control1":{"x":44.75,"y":36},"control2":{"x":56,"y":21},"fill":false},{"type":2,"start":{"x":56,"y":21},"end":{"x":43,"y":21},"control1":{"x":56,"y":21},"control2":{"x":43,"y":21},"fill":false},{"type":2,"start":{"x":43,"y":21},"end":{"x":41,"y":22.25},"control1":{"x":41.66666666666667,"y":21},"control2":{"x":41,"y":21.416666666666668},"fill":false},{"type":2,"start":{"x":41,"y":22.25},"end":{"x":39,"y":22.25},"control1":{"x":41,"y":22.25},"control2":{"x":39,"y":22.25},"fill":false},{"type":2,"start":{"x":39,"y":22.25},"end":{"x":39,"y":14.75},"control1":{"x":39,"y":22.25},"control2":{"x":39,"y":14.75},"fill":false}]}]}},{"uuid":"2zHxaRGeOW0ArhHDRHao8","type":"system","name":"撇点","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"qOyYvj5O_1Jc0VKyXvRGo","name":"撇-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"a3W2yphwNVJ7VtAOY7Iv7","name":"撇-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"U__WWEDGHpX88Lq5PJef4","name":"撇-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"cde3gUw3eyIWNjsgHWDBS","name":"撇-弯曲度","type":0,"value":50,"min":0,"max":500},{"uuid":"FGuctK6UBw1MnHqQxc3Fy","name":"点-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"KwRoFUt5mhQQd4XJ2cIB7","name":"点-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"7AQds85MZ-Fqrdpv5myeD","name":"点-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"i-t8g0lu2CaI-_fHLUd_B","name":"点-弯曲度","type":0,"value":50,"min":0,"max":500},{"uuid":"aSS-duqbfAjQ0eaR5w1Fl","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"QrxERcFq1TUFTEoDttZHS","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"YC5UVvuQB_y6KL32R_c8x","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"BnHGTsKxb7-euqz86GFjt","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"hSrvjoGThqhqzoVWykLH-","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"-GS5Cz7klHgFf6W1eMiVt","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"rqKpQK0Xyl1P_YaEQhD09","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"3UGloMmtBP_bkDMiH4MZ1","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_2zHxaRGeOW0ArhHDRHao8 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 550\nconst y0 = 200\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  pie_bendCursor: glyph.getParam('撇-弯曲游标'),\n  pie_bendDegree: glyph.getParam('撇-弯曲度') + 30 * global_params.bending_degree,\n  dian_horizonalSpan: glyph.getParam('点-水平延伸'),\n  dian_verticalSpan: glyph.getParam('点-竖直延伸'),\n  dian_bendCursor: glyph.getParam('点-弯曲游标'),\n  dian_bendDegree: glyph.getParam('点-弯曲度') + 30 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'pie_bend': {\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'], 'pie')\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['dian_start'] = {\n        x: glyph.tempData['dian_start'].x + deltaX,\n        y: glyph.tempData['dian_start'].y + deltaY,\n      }\n      jointsMap['dian_bend'] = {\n        x: glyph.tempData['dian_bend'].x + deltaX,\n        y: glyph.tempData['dian_bend'].y + deltaY,\n      }\n      jointsMap['dian_end'] = {\n        x: glyph.tempData['dian_end'].x + deltaX,\n        y: glyph.tempData['dian_end'].y + deltaY,\n      }\n      break\n    }\n    case 'dian_start': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'], 'pie')\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['dian_start'] = {\n        x: glyph.tempData['dian_start'].x + deltaX,\n        y: glyph.tempData['dian_start'].y + deltaY,\n      }\n      jointsMap['dian_bend'] = {\n        x: glyph.tempData['dian_bend'].x + deltaX,\n        y: glyph.tempData['dian_bend'].y + deltaY,\n      }\n      jointsMap['dian_end'] = {\n        x: glyph.tempData['dian_end'].x + deltaX,\n        y: glyph.tempData['dian_end'].y + deltaY,\n      }\n      break\n    }\n    case 'dian_bend': {\n      jointsMap['dian_bend'] = {\n        x: glyph.tempData['dian_bend'].x + deltaX,\n        y: glyph.tempData['dian_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'dian_end': {\n      jointsMap['dian_end'] = {\n        x: glyph.tempData['dian_end'].x + deltaX,\n        y: glyph.tempData['dian_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['dian_start'], jointsMap['dian_end'], 'dian')\n      jointsMap['dian_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end, name) => {\n  // 改变撇end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  if (name === 'pie') {\n    let { pie_bendCursor: bendCursor, pie_bendDegree: bendDegree } = params\n    const horizonalSpan = Math.abs(end.x - start.x)\n    const verticalSpan = Math.abs(end.y - start.y)\n    const cursor_x = start.x - bendCursor * horizonalSpan\n    const cursor_y = start.y + bendCursor * verticalSpan\n    const angle = Math.atan2(verticalSpan, horizonalSpan)\n    \n    const bend = {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y + bendDegree * Math.cos(angle),\n    }\n    return bend\n  } else if (name === 'dian') {\n    let { dian_bendCursor: bendCursor, dian_bendDegree: bendDegree } = params\n    const horizonalSpan = Math.abs(end.x - start.x)\n    const verticalSpan = Math.abs(end.y - start.y)\n    const cursor_x = start.x + bendCursor * horizonalSpan\n    const cursor_y = start.y + bendCursor * verticalSpan\n    const angle = Math.atan2(verticalSpan, horizonalSpan)\n    \n    const bend = {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y - bendDegree * Math.cos(angle),\n    }\n    return bend\n  }\n\n  return null\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('撇-弯曲游标', _params.pie_bendCursor)\n  glyph.setParam('撇-弯曲度', _params.pie_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('点-水平延伸', _params.dian_horizonalSpan)\n  glyph.setParam('点-竖直延伸', _params.dian_verticalSpan)\n  glyph.setParam('点-弯曲游标', _params.dian_bendCursor)\n  glyph.setParam('点-弯曲度', _params.dian_bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { pie_start, pie_bend, pie_end, dian_start, dian_bend, dian_end } = jointsMap\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const pie_bend_cursor_range = glyph.getParamRange('撇-弯曲游标')\n  const pie_bend_degree_range = glyph.getParamRange('撇-弯曲度')\n  const dian_horizonal_span_range = glyph.getParamRange('点-水平延伸')\n  const dian_vertical_span_range = glyph.getParamRange('点-竖直延伸')\n  const dian_bend_cursor_range = glyph.getParamRange('点-弯曲游标')\n  const dian_bend_degree_range = glyph.getParamRange('点-弯曲度')\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const pie_data = FP.distanceAndFootPoint(pie_start, pie_end, pie_bend)\n  const pie_bendCursor = range(pie_data.percentageFromA, pie_bend_cursor_range)\n  const pie_bendDegree = range(pie_data.distance, pie_bend_degree_range)\n  const dian_horizonalSpan = range(dian_end.x - dian_start.x, dian_horizonal_span_range)\n  const dian_verticalSpan = range(dian_end.y - dian_start.y, dian_vertical_span_range)\n  const dian_data = FP.distanceAndFootPoint(dian_start, dian_end, dian_bend)\n  const dian_bendCursor = range(dian_data.percentageFromA, dian_bend_cursor_range)\n  const dian_bendDegree = range(dian_data.distance, dian_bend_degree_range)\n  return {\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    pie_bendDegree,\n    dian_horizonalSpan,\n    dian_verticalSpan,\n    dian_bendCursor,\n    dian_bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    pie_bendDegree,\n    dian_horizonalSpan,\n    dian_verticalSpan,\n    dian_bendCursor,\n    dian_bendDegree,\n  } = params\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  const pie_length = distance(pie_start, pie_end)\n  const pie_cursor_x = pie_start.x - pie_bendCursor * pie_horizonalSpan\n  const pie_cursor_y = pie_start.y + pie_bendCursor * pie_verticalSpan\n  const pie_angle = Math.atan2(pie_verticalSpan, pie_horizonalSpan)\n\n  const pie_bend = new FP.Joint(\n    'pie_bend',\n    {\n      x: pie_cursor_x + pie_bendDegree * Math.sin(pie_angle),\n      y: pie_cursor_y + pie_bendDegree * Math.cos(pie_angle),\n    },\n  )\n\n  // 点\n  const dian_start = new FP.Joint(\n    'dian_start',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n  const dian_end = new FP.Joint(\n    'dian_end',\n    {\n      x: dian_start.x + dian_horizonalSpan,\n      y: dian_start.y + dian_verticalSpan,\n    },\n  )\n\n  const dian_length = distance(dian_start, dian_end)\n  const dian_cursor_x = dian_start.x + dian_bendCursor * dian_horizonalSpan\n  const dian_cursor_y = dian_start.y + dian_bendCursor * dian_verticalSpan\n  const dian_angle = Math.atan2(dian_verticalSpan, dian_horizonalSpan)\n\n  const dian_bend = new FP.Joint(\n    'dian_bend',\n    {\n      x: dian_cursor_x + dian_bendDegree * Math.sin(dian_angle),\n      y: dian_cursor_y - dian_bendDegree * Math.cos(dian_angle),\n    },\n  )\n\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_bend)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(dian_start)\n  glyph.addJoint(dian_bend)\n  glyph.addJoint(dian_end)\n\n  const skeleton = {\n    pie_start,\n    pie_bend,\n    pie_end,\n    dian_start,\n    dian_bend,\n    dian_end,\n  }\n\n  glyph.addRefLine(refline(pie_start, pie_bend))\n  glyph.addRefLine(refline(pie_bend, pie_end))\n  glyph.addRefLine(refline(dian_start, dian_bend))\n  glyph.addRefLine(refline(dian_bend, dian_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const {\n    pie_start,\n    pie_bend,\n    pie_end,\n    dian_start,\n    dian_bend,\n    dian_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start, pie_bend, pie_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_dian_curves, out_dian_points, in_dian_curves, in_dian_points } = FP.getCurveContours('dian', { dian_start, dian_bend, dian_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: out_corner_pie_dian } = FP.getIntersection(\n    { type: 'line', start: out_pie_curves[out_pie_curves.length - 1].control2, end: out_pie_curves[out_pie_curves.length - 1].end },\n    { type: 'line', start: out_dian_curves[0].start, end: out_dian_curves[0].control1 }\n  )\n  const { corner: in_corner_pie_dian, corner_index: in_corner_index_pie_dian } = FP.getIntersection(\n    { type: 'curve', points: in_pie_points },\n    { type: 'curve', points: in_dian_points },\n  )\n  const { curves: in_pie_curves_final } = FP.fitCurvesByPoints(in_pie_points.slice(0, in_corner_index_pie_dian[0]))\n  const { curves: in_dian_curves_final } = FP.fitCurvesByPoints(in_dian_points.slice(in_corner_index_pie_dian[1]))\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制横的左侧（外侧）轮廓\n  pen.moveTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n  for (let i = 0; i < out_pie_curves.length; i++) {\n    const curve = out_pie_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  pen.lineTo(out_corner_pie_dian.x, out_corner_pie_dian.y)\n  for (let i = 0; i < out_dian_curves.length; i++) {\n    const curve = out_dian_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_dian_curves_final[in_dian_curves_final.length - 1].end.x, in_dian_curves_final[in_dian_curves_final.length - 1].end.y)\n\n  // 绘制横的右侧（内侧）轮廓\n  for (let i = in_dian_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_dian_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  for (let i = in_pie_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":550,"_y":200,"uuid":"H_PXtba4pgE13MYjakaoS","name":"pie_start"},{"_x":575.8946638440411,"_y":375.298221281347,"uuid":"0iAcyJWhyqZLnOqXc9-uf","name":"pie_bend"},{"_x":450,"_y":500,"uuid":"AnRsz6VL0RX8DNF9xJr5Z","name":"pie_end"},{"_x":450,"_y":500,"uuid":"RvGmQJ58tTlEbttD5v5Wm","name":"dian_start"},{"_x":575.8946638440411,"_y":624.7017787186529,"uuid":"N117ca-nCz57SWcKUCzXW","name":"dian_bend"},{"_x":550,"_y":800,"uuid":"iD9oWVRJBmQ3hNg9XiITi","name":"dian_end"}],"_reflines":[{"name":"pie_start-pie_bend","start":"pie_start","end":"pie_bend"},{"name":"pie_bend-pie_end","start":"pie_bend","end":"pie_end"},{"name":"dian_start-dian_bend","start":"dian_start","end":"dian_bend"},{"name":"dian_bend-dian_end","start":"dian_bend","end":"dian_end"}],"_components":[{"points":[{"uuid":"2zFaaNrjdjUXwrQ7hiYwe","type":"anchor","x":525.2683726493925,"y":203.653301053935,"origin":null},{"uuid":"u7B9hhygSBJm0TO_Efl6m","type":"control","x":540.421588807469,"y":309.1799885693445,"origin":"2zFaaNrjdjUXwrQ7hiYwe"},{"uuid":"8o-XI_efldDGP5tMN3hOu","type":"control","x":507.8452641875854,"y":406.9089624290072,"origin":"YviunDyN4ApXmN6spHt3z"},{"uuid":"YviunDyN4ApXmN6spHt3z","type":"anchor","x":432.406678751875,"y":482.2383827464875,"origin":null},{"uuid":"itYKaPl4N7B0MURWw8hZq","type":"control","x":432.406678751875,"y":482.2383827464875,"origin":"YviunDyN4ApXmN6spHt3z"},{"uuid":"p1ofAFiH-a_rgWA52B70O","type":"control","x":414.61932189968644,"y":500.00000000000045,"origin":"jcIbUDxsUdRnHBWBALpuo"},{"uuid":"jcIbUDxsUdRnHBWBALpuo","type":"anchor","x":414.61932189968644,"y":500.00000000000045,"origin":null},{"uuid":"IRkuxcclVWdiJNbPQakED","type":"control","x":507.8452641875847,"y":593.0910375709885,"origin":"jcIbUDxsUdRnHBWBALpuo"},{"uuid":"A1aDPOFzgvwAx2prvpvip","type":"control","x":540.4215888074723,"y":690.8200114306591,"origin":"yixY8MxlxXSGcKJOUSgIb"},{"uuid":"yixY8MxlxXSGcKJOUSgIb","type":"anchor","x":525.2683726493925,"y":796.346698946065,"origin":null},{"uuid":"aQgz1XyjbY5rZfY8GD5jD","type":"control","x":525.2683726493925,"y":796.346698946065,"origin":"yixY8MxlxXSGcKJOUSgIb"},{"uuid":"5AVzP5x6gBB21_1wh2DlT","type":"control","x":574.7316273506075,"y":803.653301053935,"origin":"S-owdq6HNCoZimkdizif1"},{"uuid":"S-owdq6HNCoZimkdizif1","type":"anchor","x":574.7316273506075,"y":803.653301053935,"origin":null},{"uuid":"dHAzBVNZqz1fvWQm4so8w","type":"control","x":590.9279157755685,"y":690.8619258226232,"origin":"S-owdq6HNCoZimkdizif1"},{"uuid":"2aCT1Rdt_3KBIXiDqHPEE","type":"control","x":559.7649929709384,"y":582.9436122011595,"origin":"c8rr6GnTvNDg_82WELl2E"},{"uuid":"c8rr6GnTvNDg_82WELl2E","type":"anchor","x":483.0117338303676,"y":498.27723504845244,"origin":null},{"uuid":"pbzw-0dsOFTBXqTcRVbfd","type":"control","x":561.4357229431116,"y":412.32941228392355,"origin":"c8rr6GnTvNDg_82WELl2E"},{"uuid":"K4BF6d0DLoypt15oUL_F_","type":"control","x":590.5359333748877,"y":306.40829851033175,"origin":"KvXJnqp7Au2vzvPOMEN-E"},{"uuid":"KvXJnqp7Au2vzvPOMEN-E","type":"anchor","x":574.7316273506075,"y":196.346698946065,"origin":null},{"uuid":"01B3UHJsiIYQHl0_I3pj8","type":"control","x":574.7316273506075,"y":196.346698946065,"origin":"KvXJnqp7Au2vzvPOMEN-E"},{"uuid":"XeJl1Uoqs16pEr3hNzmKV","type":"control","x":525.2683726493925,"y":203.653301053935,"origin":"vUQmo8N3lGvM_LBn1ZqC3"},{"uuid":"vUQmo8N3lGvM_LBn1ZqC3","type":"anchor","x":525.2683726493925,"y":203.653301053935,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":525.2683726493925,"y":596.346698946065},"end":{"x":432.406678751875,"y":317.76161725351244},"control1":{"x":540.421588807469,"y":490.8200114306555},"control2":{"x":507.8452641875854,"y":393.09103757099274},"fill":false},{"type":2,"start":{"x":432.406678751875,"y":317.76161725351244},"end":{"x":414.61932189968644,"y":299.99999999999955},"control1":{"x":432.406678751875,"y":317.76161725351244},"control2":{"x":414.61932189968644,"y":299.99999999999955},"fill":false},{"type":2,"start":{"x":414.61932189968644,"y":299.99999999999955},"end":{"x":525.2683726493925,"y":3.6533010539350244},"control1":{"x":507.8452641875847,"y":206.90896242901147},"control2":{"x":540.4215888074723,"y":109.17998856934094},"fill":false},{"type":2,"start":{"x":525.2683726493925,"y":3.6533010539350244},"end":{"x":574.7316273506075,"y":-3.6533010539350244},"control1":{"x":525.2683726493925,"y":3.6533010539350244},"control2":{"x":574.7316273506075,"y":-3.6533010539350244},"fill":false},{"type":2,"start":{"x":574.7316273506075,"y":-3.6533010539350244},"end":{"x":483.0117338303676,"y":301.72276495154756},"control1":{"x":590.9279157755685,"y":109.13807417737678},"control2":{"x":559.7649929709384,"y":217.05638779884055},"fill":false},{"type":2,"start":{"x":483.0117338303676,"y":301.72276495154756},"end":{"x":574.7316273506075,"y":603.653301053935},"control1":{"x":561.4357229431116,"y":387.6705877160764},"control2":{"x":590.5359333748877,"y":493.59170148966825},"fill":false},{"type":2,"start":{"x":574.7316273506075,"y":603.653301053935},"end":{"x":525.2683726493925,"y":596.346698946065},"control1":{"x":574.7316273506075,"y":603.653301053935},"control2":{"x":525.2683726493925,"y":596.346698946065},"fill":false}],"preview":[{"type":2,"start":{"x":52.52683726493925,"y":20.3653301053935},"end":{"x":43.240667875187505,"y":48.223838274648756},"control1":{"x":54.0421588807469,"y":30.917998856934453},"control2":{"x":50.784526418758546,"y":40.69089624290072},"fill":false},{"type":2,"start":{"x":43.240667875187505,"y":48.223838274648756},"end":{"x":41.46193218996865,"y":50.00000000000005},"control1":{"x":43.240667875187505,"y":48.223838274648756},"control2":{"x":41.46193218996865,"y":50.00000000000005},"fill":false},{"type":2,"start":{"x":41.46193218996865,"y":50.00000000000005},"end":{"x":52.52683726493925,"y":79.6346698946065},"control1":{"x":50.784526418758475,"y":59.30910375709885},"control2":{"x":54.04215888074723,"y":69.08200114306591},"fill":false},{"type":2,"start":{"x":52.52683726493925,"y":79.6346698946065},"end":{"x":57.473162735060754,"y":80.36533010539351},"control1":{"x":52.52683726493925,"y":79.6346698946065},"control2":{"x":57.473162735060754,"y":80.36533010539351},"fill":false},{"type":2,"start":{"x":57.473162735060754,"y":80.36533010539351},"end":{"x":48.30117338303676,"y":49.827723504845245},"control1":{"x":59.09279157755685,"y":69.08619258226233},"control2":{"x":55.97649929709384,"y":58.294361220115945},"fill":false},{"type":2,"start":{"x":48.30117338303676,"y":49.827723504845245},"end":{"x":57.473162735060754,"y":19.634669894606503},"control1":{"x":56.14357229431116,"y":41.232941228392356},"control2":{"x":59.05359333748877,"y":30.640829851033175},"fill":false},{"type":2,"start":{"x":57.473162735060754,"y":19.634669894606503},"end":{"x":52.52683726493925,"y":20.3653301053935},"control1":{"x":57.473162735060754,"y":19.634669894606503},"control2":{"x":52.52683726493925,"y":20.3653301053935},"fill":false}]}]}},{"uuid":"9mTw8K4azH8Ahs3RQ6gY_","type":"system","name":"撇挑","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Unl3ih7ZX8pmwyo6l7-Yw","name":"撇-水平延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"xMddVKkooM_Q9XPvJc664","name":"撇-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"igJer1jvmc5sM36nNE_BT","name":"撇-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"sxw2GmzdGqhyhFurq9dzw","name":"撇-弯曲度","type":0,"value":50,"min":0,"max":500},{"uuid":"fwwNofRWfiFfoMbbfdt7P","name":"挑-水平延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"6_ePaZYkIL0V3hb3WWUOD","name":"挑-竖直延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"Yz9MQhQ-oftmY3hD894Km","name":"挑-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"ZDHaW9V118fT7jzZuzSUU","name":"挑-弯曲度","type":0,"value":50,"min":0,"max":500},{"uuid":"NOqZaSe-XzgQDoyYItb7V","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"g1WeFNwG0euxMu964fk95","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"yX3Jxc77CSL7DMgWitDXh","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"cpd1fSPkE50v2u5LXe_Wk","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"0aa1oEAcXSyouOGzeu1Ob","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"EizdKj4SNAsNh_5m3VKUB","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"YZrtKtNwK-RYW4GPL6O_M","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"ctu59YQOmGtaD96oQ-7Wl","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_9mTw8K4azH8Ahs3RQ6gY_ (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 650\nconst y0 = 350\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  pie_bendCursor: glyph.getParam('撇-弯曲游标'),\n  pie_bendDegree: glyph.getParam('撇-弯曲度') + 10 * global_params.bending_degree,\n  tiao_horizonalSpan: glyph.getParam('挑-水平延伸'),\n  tiao_verticalSpan: glyph.getParam('挑-竖直延伸'),\n  tiao_bendCursor: glyph.getParam('挑-弯曲游标'),\n  tiao_bendDegree: glyph.getParam('挑-弯曲度') + 10 * global_params.bending_degree,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'pie_bend': {\n      jointsMap['pie_bend'] = {\n        x: glyph.tempData['pie_bend'].x + deltaX,\n        y: glyph.tempData['pie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'], 'pie')\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x + deltaX,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_bend'] = {\n        x: glyph.tempData['tiao_bend'].x + deltaX,\n        y: glyph.tempData['tiao_bend'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_start': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['pie_start'], jointsMap['pie_end'], 'pie')\n      jointsMap['pie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x + deltaX,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_bend'] = {\n        x: glyph.tempData['tiao_bend'].x + deltaX,\n        y: glyph.tempData['tiao_bend'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_bend': {\n      jointsMap['tiao_bend'] = {\n        x: glyph.tempData['tiao_bend'].x + deltaX,\n        y: glyph.tempData['tiao_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_end': {\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['tiao_start'], jointsMap['tiao_end'], 'tiao')\n      jointsMap['tiao_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end, name) => {\n  // 改变撇end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  if (name === 'pie') {\n    let { pie_bendCursor: bendCursor, pie_bendDegree: bendDegree } = params\n    const horizonalSpan = Math.abs(end.x - start.x)\n    const verticalSpan = Math.abs(end.y - start.y)\n    const cursor_x = start.x - bendCursor * horizonalSpan\n    const cursor_y = start.y + bendCursor * verticalSpan\n    const angle = Math.atan2(verticalSpan, horizonalSpan)\n    \n    const bend = {\n      x: cursor_x + bendDegree * Math.sin(angle),\n      y: cursor_y + bendDegree * Math.cos(angle),\n    }\n    return bend\n  } else if (name === 'tiao') {\n    let { tiao_bendCursor: bendCursor, tiao_bendDegree: bendDegree } = params\n    const horizonalSpan = Math.abs(end.x - start.x)\n    const verticalSpan = Math.abs(end.y - start.y)\n    const cursor_x = start.x + bendCursor * horizonalSpan\n    const cursor_y = start.y - bendCursor * verticalSpan\n    const angle = Math.atan2(verticalSpan, horizonalSpan)\n    \n    const bend = {\n      x: cursor_x - bendDegree * Math.sin(angle),\n      y: cursor_y - bendDegree * Math.cos(angle),\n    }\n    return bend\n  }\n\n  return null\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('撇-弯曲游标', _params.pie_bendCursor)\n  glyph.setParam('撇-弯曲度', _params.pie_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('挑-水平延伸', _params.tiao_horizonalSpan)\n  glyph.setParam('挑-竖直延伸', _params.tiao_verticalSpan)\n  glyph.setParam('挑-弯曲游标', _params.tiao_bendCursor)\n  glyph.setParam('挑-弯曲度', _params.tiao_bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { pie_start, pie_bend, pie_end, tiao_start, tiao_bend, tiao_end } = jointsMap\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const pie_bend_cursor_range = glyph.getParamRange('撇-弯曲游标')\n  const pie_bend_degree_range = glyph.getParamRange('撇-弯曲度')\n  const tiao_horizonal_span_range = glyph.getParamRange('挑-水平延伸')\n  const tiao_vertical_span_range = glyph.getParamRange('挑-竖直延伸')\n  const tiao_bend_cursor_range = glyph.getParamRange('挑-弯曲游标')\n  const tiao_bend_degree_range = glyph.getParamRange('挑-弯曲度')\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const pie_data = FP.distanceAndFootPoint(pie_start, pie_end, pie_bend)\n  const pie_bendCursor = range(pie_data.percentageFromA, pie_bend_cursor_range)\n  const pie_bendDegree = range(pie_data.distance, pie_bend_degree_range)\n  const tiao_horizonalSpan = range(tiao_end.x - tiao_start.x, tiao_horizonal_span_range)\n  const tiao_verticalSpan = range(tiao_start.y - tiao_end.y, tiao_vertical_span_range)\n  const tiao_data = FP.distanceAndFootPoint(tiao_start, tiao_end, tiao_bend)\n  const tiao_bendCursor = range(tiao_data.percentageFromA, tiao_bend_cursor_range)\n  const tiao_bendDegree = range(tiao_data.distance, tiao_bend_degree_range)\n  return {\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    pie_bendDegree,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    tiao_bendCursor,\n    tiao_bendDegree,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    pie_bendCursor,\n    pie_bendDegree,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    tiao_bendCursor,\n    tiao_bendDegree,\n  } = params\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  const pie_length = distance(pie_start, pie_end)\n  const pie_cursor_x = pie_start.x - pie_bendCursor * pie_horizonalSpan\n  const pie_cursor_y = pie_start.y + pie_bendCursor * pie_verticalSpan\n  const pie_angle = Math.atan2(pie_verticalSpan, pie_horizonalSpan)\n\n  const pie_bend = new FP.Joint(\n    'pie_bend',\n    {\n      x: pie_cursor_x + pie_bendDegree * Math.sin(pie_angle),\n      y: pie_cursor_y + pie_bendDegree * Math.cos(pie_angle),\n    },\n  )\n\n  // 挑\n  const tiao_start = new FP.Joint(\n    'tiao_start',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n  const tiao_end = new FP.Joint(\n    'tiao_end',\n    {\n      x: tiao_start.x + tiao_horizonalSpan,\n      y: tiao_start.y - tiao_verticalSpan,\n    },\n  )\n\n  const tiao_length = distance(tiao_start, tiao_end)\n  const tiao_cursor_x = tiao_start.x + tiao_bendCursor * tiao_horizonalSpan\n  const tiao_cursor_y = tiao_start.y - tiao_bendCursor * tiao_verticalSpan\n  const tiao_angle = Math.atan2(tiao_verticalSpan, tiao_horizonalSpan)\n\n  const tiao_bend = new FP.Joint(\n    'tiao_bend',\n    {\n      x: tiao_cursor_x - tiao_bendDegree * Math.sin(tiao_angle),\n      y: tiao_cursor_y - tiao_bendDegree * Math.cos(tiao_angle),\n    },\n  )\n\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_bend)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(tiao_start)\n  glyph.addJoint(tiao_bend)\n  glyph.addJoint(tiao_end)\n\n  const skeleton = {\n    pie_start,\n    pie_bend,\n    pie_end,\n    tiao_start,\n    tiao_bend,\n    tiao_end,\n  }\n\n  glyph.addRefLine(refline(pie_start, pie_bend))\n  glyph.addRefLine(refline(pie_bend, pie_end))\n  glyph.addRefLine(refline(tiao_start, tiao_bend))\n  glyph.addRefLine(refline(tiao_bend, tiao_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  // 根据骨架计算轮廓关键点\n  const {\n    pie_start,\n    pie_bend,\n    pie_end,\n    tiao_start,\n    tiao_bend,\n    tiao_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_pie_curves, out_pie_points, in_pie_curves, in_pie_points } = FP.getCurveContours('pie', { pie_start, pie_bend, pie_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_tiao_curves, out_tiao_points, in_tiao_curves, in_tiao_points } = FP.getCurveContours('tiao', { tiao_start, tiao_bend, tiao_end }, weight, {\n    unticlockwise: true,\n  })\n  let { corner: out_corner_pie_tiao, corner_index: out_corner_index_pie_tiao } = FP.getIntersection(\n    { type: 'curve', points: out_pie_points },\n    { type: 'curve', points: in_tiao_points },\n  )\n  if (!out_corner_pie_tiao) {\n    out_corner_pie_tiao = out_pie_curves[out_pie_curves.length - 1].end\n    out_corner_index_pie_tiao = [out_pie_points.length, 0]\n  }\n  const { corner: in_corner_pie_tiao, corner_index: in_corner_index_pie_tiao } = FP.getIntersection(\n    { type: 'curve', points: in_pie_points },\n    { type: 'curve', points: in_tiao_points },\n  )\n  const { curves: out_pie_curves_final } = FP.fitCurvesByPoints(out_pie_points.slice(0, out_corner_index_pie_tiao[0]))\n  const { curves: in_pie_curves_final } = FP.fitCurvesByPoints(in_pie_points.slice(0, in_corner_index_pie_tiao[0]))\n  let in_tiao_curves_final_1 = []\n  if (out_corner_index_pie_tiao[1]) {\n    let { curves } = FP.fitCurvesByPoints(in_tiao_points.slice(0, out_corner_index_pie_tiao[1]))\n    in_tiao_curves_final_1 = curves\n  }\n  const { curves: in_tiao_curves_final_2 } = FP.fitCurvesByPoints(in_tiao_points.slice(in_corner_index_pie_tiao[1]))\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  pen.moveTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n  for (let i = 0; i < out_pie_curves_final.length; i++) {\n    const curve = out_pie_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  for (let i = in_tiao_curves_final_1.length - 1; i >= 0; i--) {\n    const curve = in_tiao_curves_final_1[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  pen.lineTo(out_tiao_curves[0].start.x, out_tiao_curves[0].start.y)\n  for (let i = 0; i < out_tiao_curves.length; i++) {\n    const curve = out_tiao_curves[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_tiao_curves_final_2[in_tiao_curves_final_2.length - 1].end.x, in_tiao_curves_final_2[in_tiao_curves_final_2.length - 1].end.y)\n\n  // 绘制右侧（内侧）轮廓\n  for (let i = in_tiao_curves_final_2.length - 1; i >= 0; i--) {\n    const curve = in_tiao_curves_final_2[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  for (let i = in_pie_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_pie_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_pie_curves[0].start.x, out_pie_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":650,"_y":350,"uuid":"RZy4YbwOV2QDcWDyC3jHa","name":"pie_start"},{"_x":542.4264068711929,"_y":542.4264068711929,"uuid":"DdMtIzvtrMMFK8J6BhyQK","name":"pie_bend"},{"_x":350,"_y":650,"uuid":"Bbq0rzkbtIf4Mya2CpQGt","name":"pie_end"},{"_x":350,"_y":650,"uuid":"4L2HtX2E4JSMczB6AEf9E","name":"tiao_start"},{"_x":588.233031891709,"_y":541.1651594585448,"uuid":"munffqd51wOjo7PoiLoc9","name":"tiao_bend"},{"_x":850,"_y":550,"uuid":"BdG3U7D0-HLZaVWxQVHDt","name":"tiao_end"}],"_reflines":[{"name":"pie_start-pie_bend","start":"pie_start","end":"pie_bend"},{"name":"pie_bend-pie_end","start":"pie_bend","end":"pie_end"},{"name":"tiao_start-tiao_bend","start":"tiao_start","end":"tiao_bend"},{"name":"tiao_bend-tiao_end","start":"tiao_bend","end":"tiao_end"}],"_components":[{"points":[{"uuid":"6kotsfe9THVVUiRN3xP2L","type":"anchor","x":628.1784023207588,"y":337.8009068072526,"origin":null},{"uuid":"DhlSE9Akxshs-DzqxI-4k","type":"control","x":559.4803819348284,"y":459.9345239620551,"origin":"6kotsfe9THVVUiRN3xP2L"},{"uuid":"24KK6mjGs_TwQ_u26nLOG","type":"control","x":459.93452396205566,"y":559.4803819348291,"origin":"iEmeFD_HKI2Z_8ts9cMpN"},{"uuid":"iEmeFD_HKI2Z_8ts9cMpN","type":"anchor","x":337.8009068072526,"y":628.1784023207588,"origin":null},{"uuid":"gzfzHO0eyu8gIipiJaizJ","type":"control","x":337.8009068072526,"y":628.1784023207588,"origin":"iEmeFD_HKI2Z_8ts9cMpN"},{"uuid":"ZQsFSXgIP5mp99LyONmCu","type":"control","x":360.3883338023036,"y":672.7394485599787,"origin":"0iXf_UZ0aM-tc9DSS5dml"},{"uuid":"0iXf_UZ0aM-tc9DSS5dml","type":"anchor","x":360.3883338023036,"y":672.7394485599787,"origin":null},{"uuid":"-mjpoMpaExYCf0zCBnY--","type":"control","x":514.0184742757813,"y":602.9686243088472,"origin":"0iXf_UZ0aM-tc9DSS5dml"},{"uuid":"ILlH4u4KV82hHQ3g9bxHY","type":"control","x":680.5093407872973,"y":569.6704510065454,"origin":"MwFpyzLRPepVYas1Yu7Ud"},{"uuid":"MwFpyzLRPepVYas1Yu7Ud","type":"anchor","x":849.1567105517116,"y":574.9857732100971,"origin":null},{"uuid":"G1SY1PwMUwXgJfW7fsEKc","type":"control","x":849.1567105517116,"y":574.9857732100971,"origin":"MwFpyzLRPepVYas1Yu7Ud"},{"uuid":"nR_3IYFl4iD98pEn2Beej","type":"control","x":850.8432894482884,"y":525.0142267899029,"origin":"Ligdbd7UCbhWTB_ONoyUl"},{"uuid":"Ligdbd7UCbhWTB_ONoyUl","type":"anchor","x":850.8432894482884,"y":525.0142267899029,"origin":null},{"uuid":"aQztovcExzX6JWxmYLXDw","type":"control","x":735.080000152979,"y":521.3656776599704,"origin":"Ligdbd7UCbhWTB_ONoyUl"},{"uuid":"yPpvW7bdzW5tqiMcIlhxV","type":"control","x":619.6444973277498,"y":534.589589199086,"origin":"blp72C6KA_jCDAyTzVj1G"},{"uuid":"blp72C6KA_jCDAyTzVj1G","type":"anchor","x":507.9889847155998,"y":565.5178161798664,"origin":null},{"uuid":"nAk2N9EEZBAjxZySwxg5K","type":"control","x":578.6343370888249,"y":502.676845368655,"origin":"blp72C6KA_jCDAyTzVj1G"},{"uuid":"udKa6DN5FZnIRHJ0hb3_9","type":"control","x":630.4403736066806,"y":435.76798487852363,"origin":"CXE_sOVWy32HHhiiQiJHN"},{"uuid":"CXE_sOVWy32HHhiiQiJHN","type":"anchor","x":671.8215976792412,"y":362.1990931927474,"origin":null},{"uuid":"jz2P0yvvBQ41sa-w70tme","type":"control","x":671.8215976792412,"y":362.1990931927474,"origin":"CXE_sOVWy32HHhiiQiJHN"},{"uuid":"_kHETp7VcEwbgCZ-IoITz","type":"control","x":628.1784023207588,"y":337.8009068072526,"origin":"wNzWkFZuO0dabMS_wRdeU"},{"uuid":"wNzWkFZuO0dabMS_wRdeU","type":"anchor","x":628.1784023207588,"y":337.8009068072526,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":628.1784023207588,"y":462.19909319274734},"end":{"x":337.8009068072526,"y":171.82159767924122},"control1":{"x":559.4803819348284,"y":340.0654760379449},"control2":{"x":459.93452396205566,"y":240.5196180651709},"fill":false},{"type":2,"start":{"x":337.8009068072526,"y":171.82159767924122},"end":{"x":360.3883338023036,"y":127.26055144002135},"control1":{"x":337.8009068072526,"y":171.82159767924122},"control2":{"x":360.3883338023036,"y":127.26055144002135},"fill":false},{"type":2,"start":{"x":360.3883338023036,"y":127.26055144002135},"end":{"x":849.1567105517116,"y":225.01422678990286},"control1":{"x":514.0184742757813,"y":197.0313756911528},"control2":{"x":680.5093407872973,"y":230.32954899345464},"fill":false},{"type":2,"start":{"x":849.1567105517116,"y":225.01422678990286},"end":{"x":850.8432894482884,"y":274.98577321009714},"control1":{"x":849.1567105517116,"y":225.01422678990286},"control2":{"x":850.8432894482884,"y":274.98577321009714},"fill":false},{"type":2,"start":{"x":850.8432894482884,"y":274.98577321009714},"end":{"x":507.9889847155998,"y":234.48218382013363},"control1":{"x":735.080000152979,"y":278.6343223400296},"control2":{"x":619.6444973277498,"y":265.41041080091395},"fill":false},{"type":2,"start":{"x":507.9889847155998,"y":234.48218382013363},"end":{"x":671.8215976792412,"y":437.80090680725266},"control1":{"x":578.6343370888249,"y":297.323154631345},"control2":{"x":630.4403736066806,"y":364.23201512147637},"fill":false},{"type":2,"start":{"x":671.8215976792412,"y":437.80090680725266},"end":{"x":628.1784023207588,"y":462.19909319274734},"control1":{"x":671.8215976792412,"y":437.80090680725266},"control2":{"x":628.1784023207588,"y":462.19909319274734},"fill":false}],"preview":[{"type":2,"start":{"x":62.81784023207588,"y":33.78009068072526},"end":{"x":33.78009068072526,"y":62.81784023207588},"control1":{"x":55.948038193482844,"y":45.99345239620551},"control2":{"x":45.99345239620557,"y":55.948038193482915},"fill":false},{"type":2,"start":{"x":33.78009068072526,"y":62.81784023207588},"end":{"x":36.03883338023036,"y":67.27394485599787},"control1":{"x":33.78009068072526,"y":62.81784023207588},"control2":{"x":36.03883338023036,"y":67.27394485599787},"fill":false},{"type":2,"start":{"x":36.03883338023036,"y":67.27394485599787},"end":{"x":84.91567105517117,"y":57.49857732100972},"control1":{"x":51.40184742757813,"y":60.29686243088472},"control2":{"x":68.05093407872974,"y":56.96704510065454},"fill":false},{"type":2,"start":{"x":84.91567105517117,"y":57.49857732100972},"end":{"x":85.08432894482884,"y":52.50142267899029},"control1":{"x":84.91567105517117,"y":57.49857732100972},"control2":{"x":85.08432894482884,"y":52.50142267899029},"fill":false},{"type":2,"start":{"x":85.08432894482884,"y":52.50142267899029},"end":{"x":50.79889847155999,"y":56.55178161798664},"control1":{"x":73.5080000152979,"y":52.13656776599704},"control2":{"x":61.96444973277499,"y":53.45895891990861},"fill":false},{"type":2,"start":{"x":50.79889847155999,"y":56.55178161798664},"end":{"x":67.18215976792412,"y":36.21990931927474},"control1":{"x":57.86343370888249,"y":50.2676845368655},"control2":{"x":63.044037360668064,"y":43.576798487852365},"fill":false},{"type":2,"start":{"x":67.18215976792412,"y":36.21990931927474},"end":{"x":62.81784023207588,"y":33.78009068072526},"control1":{"x":67.18215976792412,"y":36.21990931927474},"control2":{"x":62.81784023207588,"y":33.78009068072526},"fill":false}]}]}},{"uuid":"Y9G7FzhAFI0mjsn6j4zOU","type":"system","name":"竖挑","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Hbfbrdvq1qDJJJmSHvtnu","name":"竖-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"jzGsMKKxfaP1eN8PBuGmt","name":"挑-水平延伸","type":0,"value":160,"min":0,"max":1000},{"uuid":"Jj2Lmk4q1etPuAvamSKoi","name":"挑-竖直延伸","type":0,"value":120,"min":0,"max":1000},{"uuid":"UtoJRV1szt2fOTVQ7mB-H","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"JIHQxpoKyeCvrY0nYXxTa","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"Z5wFD7aMohZF3CWpfbdbl","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"cSGxnBIINWS_xVeb1oFP8","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"MLo3_ZynvieTm8vT_4vY1","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"ntdiUCFrOfR3VLWiYkxlj","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"FpF--xl1dYcfOdo29SNzL","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"vskQuQYDYx8Mdz2wy2NBL","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_Y9G7FzhAFI0mjsn6j4zOU (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 420\nconst y0 = 250\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  tiao_horizonalSpan: glyph.getParam('挑-水平延伸'),\n  tiao_verticalSpan: glyph.getParam('挑-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_end': {\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('挑-水平延伸', _params.tiao_horizonalSpan)\n  glyph.setParam('挑-竖直延伸', _params.tiao_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, tiao_start, tiao_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const tiao_horizonal_span_range = glyph.getParamRange('挑-水平延伸')\n  const tiao_vertical_span_range = glyph.getParamRange('挑-竖直延伸')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const tiao_horizonalSpan = range(tiao_end.x - tiao_start.x, tiao_horizonal_span_range)\n  const tiao_verticalSpan = range(tiao_start.y - tiao_end.y, tiao_vertical_span_range)\n  return {\n    shu_length,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  let shu_start, shu_end\n  const shu_start_ref = new FP.Joint(\n    'shu_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end_ref = new FP.Joint(\n    'shu_end_ref',\n    {\n      x: shu_start_ref.x,\n      y: shu_start_ref.y + shu_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x - weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x - weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x + weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x + weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x,\n        y: shu_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(shu_start_ref)\n  glyph.addJoint(shu_end_ref)\n  glyph.addRefLine(refline(shu_start_ref, shu_end_ref, 'ref'))\n\n  // 挑\n  const tiao_start = new FP.Joint(\n    'tiao_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const tiao_end = new FP.Joint(\n    'tiao_end',\n    {\n      x: tiao_start.x + tiao_horizonalSpan,\n      y: tiao_start.y - tiao_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(tiao_start)\n  glyph.addJoint(tiao_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    tiao_start,\n    tiao_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(tiao_start, tiao_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    tiao_start,\n    tiao_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_tiao_start, out_tiao_end, in_tiao_start, in_tiao_end } = FP.getLineContours('tiao', { tiao_start, tiao_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: out_corner_shu_tiao } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_tiao_start, end: out_tiao_end },\n  )\n  const { corner: in_corner_shu_tiao } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_tiao_start, end: in_tiao_end },\n  )\n  const tiao_angle = Math.atan2(tiao_start.y - tiao_end.y, tiao_end.x - tiao_start.x)\n  const out_corner_shu_tiao_1 = {\n    x: out_corner_shu_tiao.x - weight * Math.sin(tiao_angle),\n    y: out_corner_shu_tiao.y - weight * Math.cos(tiao_angle)\n  }\n  const { corner: out_corner_shu_tiao_2 } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: in_tiao_start, end: in_tiao_end },\n  )\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  pen.lineTo(out_corner_shu_tiao_2.x, out_corner_shu_tiao_2.y)\n  pen.lineTo(out_corner_shu_tiao_1.x, out_corner_shu_tiao_1.y)\n  pen.lineTo(out_corner_shu_tiao.x, out_corner_shu_tiao.y)\n  pen.lineTo(out_tiao_end.x, out_tiao_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_tiao_end.x, in_tiao_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  pen.lineTo(in_corner_shu_tiao.x, in_corner_shu_tiao.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x + start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":420,"_y":250,"uuid":"CkUf5l6TPlRpl5SOrvMAH","name":"shu_start_ref"},{"_x":420,"_y":750,"uuid":"UP-YeRXuQ8YcrcVw9y4sA","name":"shu_end_ref"},{"_x":420,"_y":250,"uuid":"UXjyiuENQEHF2mcsMTVdd","name":"shu_start"},{"_x":420,"_y":750,"uuid":"aKwpeo2vWuAGiVsKjGce_","name":"shu_end"},{"_x":420,"_y":750,"uuid":"i1IiC2C3gknY4SyEag6TT","name":"tiao_start"},{"_x":580,"_y":630,"uuid":"CVufEWQfTyGNDAywL7KCR","name":"tiao_end"}],"_reflines":[{"name":"shu_start_ref-shu_end_ref","start":"shu_start_ref","end":"shu_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"tiao_start-tiao_end","start":"tiao_start","end":"tiao_end"}],"_components":[{"points":[{"uuid":"5TG5iyDgLLLzMA0YlAduO","type":"anchor","x":382.5,"y":250,"origin":null},{"uuid":"tdaSlSR50OItXL4X1W4JB","type":"control","x":382.5,"y":250,"origin":"5TG5iyDgLLLzMA0YlAduO"},{"uuid":"Ye9IDY2Jr3VJ8E8OLpCBH","type":"control","x":382.5,"y":270,"origin":"DOmuIWjVYnsU8n8hrFMEC"},{"uuid":"DOmuIWjVYnsU8n8hrFMEC","type":"anchor","x":382.5,"y":270,"origin":null},{"uuid":"h-ET-CLGSmL7bIpG0BbKy","type":"control","x":390.8333333333333,"y":270,"origin":"DOmuIWjVYnsU8n8hrFMEC"},{"uuid":"v_XcuGzP1b3gvvF_yCG49","type":"control","x":395,"y":276.6666666666667,"origin":"Nv2co0sycy_TUF8zJWEj1"},{"uuid":"Nv2co0sycy_TUF8zJWEj1","type":"anchor","x":395,"y":290,"origin":null},{"uuid":"2oMnWjUk5vKjzENTyKQ2G","type":"control","x":395,"y":290,"origin":"Nv2co0sycy_TUF8zJWEj1"},{"uuid":"nCgIFitVzk2TYlADL25tR","type":"control","x":395,"y":737.5,"origin":"AWoSYF1orrG6zzNlapojq"},{"uuid":"AWoSYF1orrG6zzNlapojq","type":"anchor","x":395,"y":737.5,"origin":null},{"uuid":"MTRjyB8lgPs9uAkAFZR-_","type":"control","x":395,"y":737.5,"origin":"AWoSYF1orrG6zzNlapojq"},{"uuid":"pKKLZ8yxKbGGsOpdKzzPL","type":"control","x":365,"y":760,"origin":"R5dlyM8REgvVRkIEIPymD"},{"uuid":"R5dlyM8REgvVRkIEIPymD","type":"anchor","x":365,"y":760,"origin":null},{"uuid":"Go9yJInyOy1SaRUhPZkEc","type":"control","x":365,"y":760,"origin":"R5dlyM8REgvVRkIEIPymD"},{"uuid":"JNPabToQI_5rjjnOvNes5","type":"control","x":395,"y":800,"origin":"h2DR8NHhSl8ewelUMGzUf"},{"uuid":"h2DR8NHhSl8ewelUMGzUf","type":"anchor","x":395,"y":800,"origin":null},{"uuid":"znkJM5Llyz3wKPJ6IKtpA","type":"control","x":395,"y":800,"origin":"h2DR8NHhSl8ewelUMGzUf"},{"uuid":"dQWpvsuzMaRXFmMNzVDnW","type":"control","x":595,"y":650,"origin":"mRzrXl6jqmzBxVIhaLRa7"},{"uuid":"mRzrXl6jqmzBxVIhaLRa7","type":"anchor","x":595,"y":650,"origin":null},{"uuid":"yuJqLaxUTUEWyLhsuH39L","type":"control","x":595,"y":650,"origin":"mRzrXl6jqmzBxVIhaLRa7"},{"uuid":"LgWcf5ap6JD76LJ5QB_4c","type":"control","x":565,"y":610,"origin":"9uPw5RMmXvuznqntfHZtA"},{"uuid":"9uPw5RMmXvuznqntfHZtA","type":"anchor","x":565,"y":610,"origin":null},{"uuid":"V7vD6-RnZAgOfpxDnz5ou","type":"control","x":565,"y":610,"origin":"9uPw5RMmXvuznqntfHZtA"},{"uuid":"4Fg5x5cUh-lhF8fGuRJIH","type":"control","x":445,"y":700,"origin":"Yrzc_GhYN72sMaJ7fVJK7"},{"uuid":"Yrzc_GhYN72sMaJ7fVJK7","type":"anchor","x":445,"y":700,"origin":null},{"uuid":"qox_SA4T7V8qqBYP5Q-Od","type":"control","x":445,"y":700,"origin":"Yrzc_GhYN72sMaJ7fVJK7"},{"uuid":"xEcwmm6wQTPlZ1sjWDLTs","type":"control","x":445,"y":290,"origin":"xAOuAGzQEXaltMh9VpVmT"},{"uuid":"xAOuAGzQEXaltMh9VpVmT","type":"anchor","x":445,"y":290,"origin":null},{"uuid":"eIPMZv-toHnsVhZ3E2YQ_","type":"control","x":445,"y":276.6666666666667,"origin":"xAOuAGzQEXaltMh9VpVmT"},{"uuid":"Awil0BVydLbfYTpUIHC4Q","type":"control","x":449.1666666666667,"y":270,"origin":"VzLEQJJ2K057Ya4denOmV"},{"uuid":"VzLEQJJ2K057Ya4denOmV","type":"anchor","x":457.5,"y":270,"origin":null},{"uuid":"M0uq8wdHV8aRCq_qb8YpS","type":"control","x":457.5,"y":270,"origin":"VzLEQJJ2K057Ya4denOmV"},{"uuid":"fQ1sPuEQHVtkmExLTzr6C","type":"control","x":457.5,"y":250,"origin":"-2kGHWAewaDvmqnesbXCI"},{"uuid":"-2kGHWAewaDvmqnesbXCI","type":"anchor","x":457.5,"y":250,"origin":null},{"uuid":"Gx82fyk1H4YW4hKaAlbQ1","type":"control","x":457.5,"y":250,"origin":"-2kGHWAewaDvmqnesbXCI"},{"uuid":"G7jPFvgrc7hoa69XuBFm9","type":"control","x":382.5,"y":250,"origin":"gDRbt6VcoW2sokYc5NFpm"},{"uuid":"gDRbt6VcoW2sokYc5NFpm","type":"anchor","x":382.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":382.5,"y":550},"end":{"x":382.5,"y":530},"control1":{"x":382.5,"y":550},"control2":{"x":382.5,"y":530},"fill":false},{"type":2,"start":{"x":382.5,"y":530},"end":{"x":395,"y":510},"control1":{"x":390.8333333333333,"y":530},"control2":{"x":395,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":395,"y":510},"end":{"x":395,"y":62.5},"control1":{"x":395,"y":510},"control2":{"x":395,"y":62.5},"fill":false},{"type":2,"start":{"x":395,"y":62.5},"end":{"x":365,"y":40},"control1":{"x":395,"y":62.5},"control2":{"x":365,"y":40},"fill":false},{"type":2,"start":{"x":365,"y":40},"end":{"x":395,"y":0},"control1":{"x":365,"y":40},"control2":{"x":395,"y":0},"fill":false},{"type":2,"start":{"x":395,"y":0},"end":{"x":595,"y":150},"control1":{"x":395,"y":0},"control2":{"x":595,"y":150},"fill":false},{"type":2,"start":{"x":595,"y":150},"end":{"x":565,"y":190},"control1":{"x":595,"y":150},"control2":{"x":565,"y":190},"fill":false},{"type":2,"start":{"x":565,"y":190},"end":{"x":445,"y":100},"control1":{"x":565,"y":190},"control2":{"x":445,"y":100},"fill":false},{"type":2,"start":{"x":445,"y":100},"end":{"x":445,"y":510},"control1":{"x":445,"y":100},"control2":{"x":445,"y":510},"fill":false},{"type":2,"start":{"x":445,"y":510},"end":{"x":457.5,"y":530},"control1":{"x":445,"y":523.3333333333333},"control2":{"x":449.1666666666667,"y":530},"fill":false},{"type":2,"start":{"x":457.5,"y":530},"end":{"x":457.5,"y":550},"control1":{"x":457.5,"y":530},"control2":{"x":457.5,"y":550},"fill":false},{"type":2,"start":{"x":457.5,"y":550},"end":{"x":382.5,"y":550},"control1":{"x":457.5,"y":550},"control2":{"x":382.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":38.25,"y":25},"end":{"x":38.25,"y":27},"control1":{"x":38.25,"y":25},"control2":{"x":38.25,"y":27},"fill":false},{"type":2,"start":{"x":38.25,"y":27},"end":{"x":39.5,"y":29},"control1":{"x":39.083333333333336,"y":27},"control2":{"x":39.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":39.5,"y":29},"end":{"x":39.5,"y":73.75},"control1":{"x":39.5,"y":29},"control2":{"x":39.5,"y":73.75},"fill":false},{"type":2,"start":{"x":39.5,"y":73.75},"end":{"x":36.5,"y":76},"control1":{"x":39.5,"y":73.75},"control2":{"x":36.5,"y":76},"fill":false},{"type":2,"start":{"x":36.5,"y":76},"end":{"x":39.5,"y":80},"control1":{"x":36.5,"y":76},"control2":{"x":39.5,"y":80},"fill":false},{"type":2,"start":{"x":39.5,"y":80},"end":{"x":59.5,"y":65},"control1":{"x":39.5,"y":80},"control2":{"x":59.5,"y":65},"fill":false},{"type":2,"start":{"x":59.5,"y":65},"end":{"x":56.5,"y":61},"control1":{"x":59.5,"y":65},"control2":{"x":56.5,"y":61},"fill":false},{"type":2,"start":{"x":56.5,"y":61},"end":{"x":44.5,"y":70},"control1":{"x":56.5,"y":61},"control2":{"x":44.5,"y":70},"fill":false},{"type":2,"start":{"x":44.5,"y":70},"end":{"x":44.5,"y":29},"control1":{"x":44.5,"y":70},"control2":{"x":44.5,"y":29},"fill":false},{"type":2,"start":{"x":44.5,"y":29},"end":{"x":45.75,"y":27},"control1":{"x":44.5,"y":27.66666666666667},"control2":{"x":44.91666666666667,"y":27},"fill":false},{"type":2,"start":{"x":45.75,"y":27},"end":{"x":45.75,"y":25},"control1":{"x":45.75,"y":27},"control2":{"x":45.75,"y":25},"fill":false},{"type":2,"start":{"x":45.75,"y":25},"end":{"x":38.25,"y":25},"control1":{"x":45.75,"y":25},"control2":{"x":38.25,"y":25},"fill":false}]}]}},{"uuid":"Wgw1QTo938oFQF_9krvJL","type":"system","name":"横折挑","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"slJvBoIvh5ZRV0cbL7RgA","name":"横-长度","type":0,"value":150,"min":0,"max":1000},{"uuid":"GRpeY_ScBE9xslCFQbnId","name":"折-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"mV7PduSamAWY6dnO0Pyv3","name":"挑-水平延伸","type":0,"value":120,"min":0,"max":1000},{"uuid":"7aGPmhFf7_JC9bcz128YE","name":"挑-竖直延伸","type":0,"value":120,"min":0,"max":1000},{"uuid":"0l6xXvoQFhwqTbChBqI1w","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"1i97tkeUr8wBib99WEHIM","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"9fQtwUUyTiAxYBuTLkROn","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"zSSxDdWscOHJXdAAEw60Q","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"sv7ilWwQyA452EOSaL7BF","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"KFDHtvxWQe5ulhEwcTdxo","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"1UFdXRlulOIGsoOgsrgwR","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"AqFZ-ro7IrQoPFOFFgdIW","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_Wgw1QTo938oFQF_9krvJL (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 425\nconst y0 = 245\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_length: glyph.getParam('折-长度'),\n  tiao_horizonalSpan: glyph.getParam('挑-水平延伸'),\n  tiao_verticalSpan: glyph.getParam('挑-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x + deltaX,\n        y: glyph.tempData['tiao_start'].y,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x + deltaX,\n        y: glyph.tempData['tiao_start'].y,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_start': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['tiao_start'] = {\n        x: glyph.tempData['tiao_start'].x,\n        y: glyph.tempData['tiao_start'].y + deltaY,\n      }\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n    case 'tiao_end': {\n      jointsMap['tiao_end'] = {\n        x: glyph.tempData['tiao_end'].x + deltaX,\n        y: glyph.tempData['tiao_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-长度', _params.zhe_length)\n  glyph.setParam('挑-水平延伸', _params.tiao_horizonalSpan)\n  glyph.setParam('挑-竖直延伸', _params.tiao_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end, tiao_start, tiao_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_length_range = glyph.getParamRange('折-长度')\n  const tiao_horizonal_span_range = glyph.getParamRange('挑-水平延伸')\n  const tiao_vertical_span_range = glyph.getParamRange('挑-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_length = range(zhe_end.y - zhe_start.y, zhe_length_range)\n  const tiao_horizonalSpan = range(tiao_end.x - tiao_start.x, tiao_horizonal_span_range)\n  const tiao_verticalSpan = range(tiao_start.y - tiao_end.y, tiao_vertical_span_range)\n  return {\n    heng_length,\n    zhe_length,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_length,\n    tiao_horizonalSpan,\n    tiao_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折\n  let zhe_start, zhe_end\n  const zhe_start_ref = new FP.Joint(\n    'zhe_start_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  const zhe_end_ref = new FP.Joint(\n    'zhe_end_ref',\n    {\n      x: zhe_start_ref.x,\n      y: zhe_start_ref.y + zhe_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x - weight / 2,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x - weight / 2,\n        y: zhe_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x + weight / 2,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x + weight / 2,\n        y: zhe_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x,\n        y: zhe_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(zhe_start_ref)\n  glyph.addJoint(zhe_end_ref)\n  glyph.addRefLine(refline(zhe_start_ref, zhe_end_ref, 'ref'))\n\n  // 挑\n  const tiao_start = new FP.Joint(\n    'tiao_start',\n    {\n      x: zhe_start.x,\n      y: zhe_start.y + zhe_length,\n    },\n  )\n  const tiao_end = new FP.Joint(\n    'tiao_end',\n    {\n      x: tiao_start.x + tiao_horizonalSpan,\n      y: tiao_start.y - tiao_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n  glyph.addJoint(tiao_start)\n  glyph.addJoint(tiao_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    tiao_start,\n    tiao_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n  glyph.addRefLine(refline(tiao_start, tiao_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    tiao_start,\n    tiao_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_tiao_start, out_tiao_end, in_tiao_start, in_tiao_end } = FP.getLineContours('tiao', { tiao_start, tiao_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: out_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n  const { corner: in_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_zhe_tiao } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n    { type: 'line', start: out_tiao_start, end: out_tiao_end },\n  )\n  const { corner: in_corner_zhe_tiao, corner_index: in_corner_index_zhe_tiao } = FP.getIntersection(\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_tiao_start, end: in_tiao_end },\n  )\n  const tiao_angle = Math.atan2(tiao_start.y - tiao_end.y, tiao_end.x - tiao_start.x)\n  const out_corner_zhe_tiao_1 = {\n    x: out_corner_zhe_tiao.x - weight * Math.sin(tiao_angle),\n    y: out_corner_zhe_tiao.y - weight * Math.cos(tiao_angle)\n  }\n  const { corner: out_corner_zhe_tiao_2 } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n    { type: 'line', start: in_tiao_start, end: in_tiao_end },\n  )\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(in_heng_start, in_corner_heng_zhe, in_zhe_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: in_corner_heng_zhe.x - corner_radius,\n      y: in_corner_heng_zhe.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: in_corner_heng_zhe,\n      end: in_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: in_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  pen.lineTo(out_corner_heng_zhe.x, out_corner_heng_zhe.y)\n  pen.lineTo(out_corner_zhe_tiao_2.x, out_corner_zhe_tiao_2.y)\n  pen.lineTo(out_corner_zhe_tiao_1.x, out_corner_zhe_tiao_1.y)\n  pen.lineTo(out_corner_zhe_tiao.x, out_corner_zhe_tiao.y)\n  pen.lineTo(out_tiao_end.x, out_tiao_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_tiao_end.x, in_tiao_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  pen.lineTo(in_corner_zhe_tiao.x, in_corner_zhe_tiao.y)\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    pen.lineTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.lineTo(turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y - start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":425,"_y":245,"uuid":"Zh32ptJjEF2e9JibkWxdZ","name":"heng_start_ref"},{"_x":575,"_y":245,"uuid":"7GrSjVvX4fCwJmTACBKsn","name":"heng_end_ref"},{"_x":575,"_y":245,"uuid":"Ob2J-sGSeprGRFJjBkOG2","name":"zhe_start_ref"},{"_x":575,"_y":745,"uuid":"4NhFJpiuvqZWrwEstv6gU","name":"zhe_end_ref"},{"_x":425,"_y":245,"uuid":"bUg5I7oNKUZ5xwK7QT2u_","name":"heng_start"},{"_x":575,"_y":245,"uuid":"B-0kJC-BM1BVaGQgyb159","name":"heng_end"},{"_x":575,"_y":245,"uuid":"1MgXTNOurf7SyHUT2emEp","name":"zhe_start"},{"_x":575,"_y":745,"uuid":"7kkTThYg1a4VV1Nb3MThP","name":"zhe_end"},{"_x":575,"_y":745,"uuid":"2GYt9IgAkQv6IdQUoKObj","name":"tiao_start"},{"_x":695,"_y":625,"uuid":"_UlJw-yG-Shx1dGJhDnVT","name":"tiao_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"zhe_start_ref-zhe_end_ref","start":"zhe_start_ref","end":"zhe_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"},{"name":"tiao_start-tiao_end","start":"tiao_start","end":"tiao_end"}],"_components":[{"points":[{"uuid":"YkvqW8gcUX3ltsZCN9R07","type":"anchor","x":425,"y":282.5,"origin":null},{"uuid":"eFyjql9mPPrDfKleeUON2","type":"control","x":425,"y":282.5,"origin":"YkvqW8gcUX3ltsZCN9R07"},{"uuid":"fWUw8Im2R-UgSicvevZvt","type":"control","x":445,"y":282.5,"origin":"75NwHrApFakP7-r6bakqn"},{"uuid":"75NwHrApFakP7-r6bakqn","type":"anchor","x":445,"y":282.5,"origin":null},{"uuid":"x2pGh4GdGtg5r9ZHmrlFe","type":"control","x":445,"y":274.1666666666667,"origin":"75NwHrApFakP7-r6bakqn"},{"uuid":"SDX1UKWG0SCqxlR1oHFyN","type":"control","x":451.6666666666667,"y":270,"origin":"zNrUo4T6dp9PEiQ7FBOAT"},{"uuid":"zNrUo4T6dp9PEiQ7FBOAT","type":"anchor","x":465,"y":270,"origin":null},{"uuid":"Ak14IhXQIr33xxtlIPQHd","type":"control","x":465,"y":270,"origin":"zNrUo4T6dp9PEiQ7FBOAT"},{"uuid":"ytqdk0mipUy8FRWLaj-uq","type":"control","x":550,"y":270,"origin":"r-SF0Tnc8SMtDYu54Hkqf"},{"uuid":"r-SF0Tnc8SMtDYu54Hkqf","type":"anchor","x":550,"y":270,"origin":null},{"uuid":"zFdETCtLGEqVG2Pk7eQk6","type":"control","x":550,"y":270,"origin":"r-SF0Tnc8SMtDYu54Hkqf"},{"uuid":"p_JzS-856KMWj89jwVURI","type":"control","x":550,"y":734.6446609406726,"origin":"Aw9HbGSYol666olFOtQK-"},{"uuid":"Aw9HbGSYol666olFOtQK-","type":"anchor","x":550,"y":734.6446609406726,"origin":null},{"uuid":"TMTlGXYjI6CZ-uLfCzE2w","type":"control","x":550,"y":734.6446609406726,"origin":"Aw9HbGSYol666olFOtQK-"},{"uuid":"Lquq0RwOVfl90AomqF91N","type":"control","x":514.6446609406727,"y":770,"origin":"0RrILhlpyN6uL9qBZZaG4"},{"uuid":"0RrILhlpyN6uL9qBZZaG4","type":"anchor","x":514.6446609406727,"y":770,"origin":null},{"uuid":"iHq1BOiwCAyflCNVfRL-Z","type":"control","x":514.6446609406727,"y":770,"origin":"0RrILhlpyN6uL9qBZZaG4"},{"uuid":"f_UNxoN1l43a6SuoEjIao","type":"control","x":550,"y":805.3553390593274,"origin":"F9Oxx5d7B999ghlesjcD3"},{"uuid":"F9Oxx5d7B999ghlesjcD3","type":"anchor","x":550,"y":805.3553390593274,"origin":null},{"uuid":"7me2GEpW_FHOdXP_r3sDE","type":"control","x":550,"y":805.3553390593274,"origin":"F9Oxx5d7B999ghlesjcD3"},{"uuid":"K5RfIe6VcoztxbZGcESuj","type":"control","x":712.6776695296637,"y":642.6776695296637,"origin":"akTMfIeX0oBCRxt7fDgw6"},{"uuid":"akTMfIeX0oBCRxt7fDgw6","type":"anchor","x":712.6776695296637,"y":642.6776695296637,"origin":null},{"uuid":"CWXvriS2fpG-A8fjqPYei","type":"control","x":712.6776695296637,"y":642.6776695296637,"origin":"akTMfIeX0oBCRxt7fDgw6"},{"uuid":"yCVI9IriIB7P-4WWEG3Ss","type":"control","x":677.3223304703363,"y":607.3223304703363,"origin":"BXhAv_CuLe3_JofOPPytd"},{"uuid":"BXhAv_CuLe3_JofOPPytd","type":"anchor","x":677.3223304703363,"y":607.3223304703363,"origin":null},{"uuid":"TCqolrErPB_ZlQlgq5K7m","type":"control","x":677.3223304703363,"y":607.3223304703363,"origin":"BXhAv_CuLe3_JofOPPytd"},{"uuid":"Bnvib-d_yDd7tyrtPVNpH","type":"control","x":600,"y":684.6446609406726,"origin":"fgQPeJD31gvRlQ71qckDE"},{"uuid":"fgQPeJD31gvRlQ71qckDE","type":"anchor","x":600,"y":684.6446609406726,"origin":null},{"uuid":"kcGlndGwsS5EJYicrFOn8","type":"control","x":600,"y":684.6446609406726,"origin":"fgQPeJD31gvRlQ71qckDE"},{"uuid":"kZn6qJrdM4AInYwlYWtjp","type":"control","x":600,"y":290.71067811865476,"origin":"X5SStYVPPGq-SYe70-8Um"},{"uuid":"X5SStYVPPGq-SYe70-8Um","type":"anchor","x":600,"y":290.71067811865476,"origin":null},{"uuid":"qmP6M6frZWagSgHBbV99T","type":"control","x":600,"y":267.14045207910317,"origin":"X5SStYVPPGq-SYe70-8Um"},{"uuid":"VF8wxZB3Q_BQvYgZ5Q1Fw","type":"control","x":604.7140452079103,"y":250.64129385141706,"origin":"uh0QW7i5oqX_mK2LL8WMD"},{"uuid":"uh0QW7i5oqX_mK2LL8WMD","type":"anchor","x":614.142135623731,"y":241.21320343559643,"origin":null},{"uuid":"LjkUsZyocm49Rbk5wjlj_","type":"control","x":614.142135623731,"y":241.21320343559643,"origin":"uh0QW7i5oqX_mK2LL8WMD"},{"uuid":"5E828Ok4CBeDldcQQ1M35","type":"control","x":578.7867965644035,"y":205.85786437626905,"origin":"tDwDIS6NOplcixsa9inCT"},{"uuid":"tDwDIS6NOplcixsa9inCT","type":"anchor","x":578.7867965644035,"y":205.85786437626905,"origin":null},{"uuid":"UL8i0EyR9on1gSjnzpKWJ","type":"control","x":569.3587061485829,"y":215.28595479208968,"origin":"tDwDIS6NOplcixsa9inCT"},{"uuid":"ItvJvMAHqTFxkuiSS7DkS","type":"control","x":552.8595479208967,"y":220,"origin":"a4Xn9RSGYnZCcellPAyIF"},{"uuid":"a4Xn9RSGYnZCcellPAyIF","type":"anchor","x":529.2893218813451,"y":220,"origin":null},{"uuid":"iUn87WvTYVvtLWp7IiJRu","type":"control","x":529.2893218813451,"y":220,"origin":"a4Xn9RSGYnZCcellPAyIF"},{"uuid":"l3yTnEwDg9fUDuJUYHlDr","type":"control","x":465,"y":220,"origin":"BJKl4hXkhOGeAQ194qWyK"},{"uuid":"BJKl4hXkhOGeAQ194qWyK","type":"anchor","x":465,"y":220,"origin":null},{"uuid":"BRxxES8CG4NwVCSfLYOFn","type":"control","x":451.6666666666667,"y":220,"origin":"BJKl4hXkhOGeAQ194qWyK"},{"uuid":"LG8UMQt731t4_Oye2Ybyx","type":"control","x":445,"y":215.83333333333334,"origin":"-UDMbDAyBfD7wBCxHfyo_"},{"uuid":"-UDMbDAyBfD7wBCxHfyo_","type":"anchor","x":445,"y":207.5,"origin":null},{"uuid":"TR0F8hqvEkdVA_paiSWZu","type":"control","x":445,"y":207.5,"origin":"-UDMbDAyBfD7wBCxHfyo_"},{"uuid":"LCgiykmcJoiqmPptvVmMO","type":"control","x":425,"y":207.5,"origin":"ouxa0TiMF2zUmRi5TRDKM"},{"uuid":"ouxa0TiMF2zUmRi5TRDKM","type":"anchor","x":425,"y":207.5,"origin":null},{"uuid":"ZPhTB5WiUb2ESnDewg95S","type":"control","x":425,"y":207.5,"origin":"ouxa0TiMF2zUmRi5TRDKM"},{"uuid":"EQz1tSVBaIJKzlJ1bqZhV","type":"control","x":425,"y":282.5,"origin":"vwhPj_ockq-q-BsmXw-Ab"},{"uuid":"vwhPj_ockq-q-BsmXw-Ab","type":"anchor","x":425,"y":282.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":425,"y":517.5},"end":{"x":445,"y":517.5},"control1":{"x":425,"y":517.5},"control2":{"x":445,"y":517.5},"fill":false},{"type":2,"start":{"x":445,"y":517.5},"end":{"x":465,"y":530},"control1":{"x":445,"y":525.8333333333333},"control2":{"x":451.6666666666667,"y":530},"fill":false},{"type":2,"start":{"x":465,"y":530},"end":{"x":550,"y":530},"control1":{"x":465,"y":530},"control2":{"x":550,"y":530},"fill":false},{"type":2,"start":{"x":550,"y":530},"end":{"x":550,"y":65.35533905932743},"control1":{"x":550,"y":530},"control2":{"x":550,"y":65.35533905932743},"fill":false},{"type":2,"start":{"x":550,"y":65.35533905932743},"end":{"x":514.6446609406727,"y":30},"control1":{"x":550,"y":65.35533905932743},"control2":{"x":514.6446609406727,"y":30},"fill":false},{"type":2,"start":{"x":514.6446609406727,"y":30},"end":{"x":550,"y":-5.355339059327434},"control1":{"x":514.6446609406727,"y":30},"control2":{"x":550,"y":-5.355339059327434},"fill":false},{"type":2,"start":{"x":550,"y":-5.355339059327434},"end":{"x":712.6776695296637,"y":157.32233047033628},"control1":{"x":550,"y":-5.355339059327434},"control2":{"x":712.6776695296637,"y":157.32233047033628},"fill":false},{"type":2,"start":{"x":712.6776695296637,"y":157.32233047033628},"end":{"x":677.3223304703363,"y":192.67766952966372},"control1":{"x":712.6776695296637,"y":157.32233047033628},"control2":{"x":677.3223304703363,"y":192.67766952966372},"fill":false},{"type":2,"start":{"x":677.3223304703363,"y":192.67766952966372},"end":{"x":600,"y":115.35533905932743},"control1":{"x":677.3223304703363,"y":192.67766952966372},"control2":{"x":600,"y":115.35533905932743},"fill":false},{"type":2,"start":{"x":600,"y":115.35533905932743},"end":{"x":600,"y":509.28932188134524},"control1":{"x":600,"y":115.35533905932743},"control2":{"x":600,"y":509.28932188134524},"fill":false},{"type":2,"start":{"x":600,"y":509.28932188134524},"end":{"x":614.142135623731,"y":558.7867965644036},"control1":{"x":600,"y":532.8595479208968},"control2":{"x":604.7140452079103,"y":549.358706148583},"fill":false},{"type":2,"start":{"x":614.142135623731,"y":558.7867965644036},"end":{"x":578.7867965644035,"y":594.142135623731},"control1":{"x":614.142135623731,"y":558.7867965644036},"control2":{"x":578.7867965644035,"y":594.142135623731},"fill":false},{"type":2,"start":{"x":578.7867965644035,"y":594.142135623731},"end":{"x":529.2893218813451,"y":580},"control1":{"x":569.3587061485829,"y":584.7140452079103},"control2":{"x":552.8595479208967,"y":580},"fill":false},{"type":2,"start":{"x":529.2893218813451,"y":580},"end":{"x":465,"y":580},"control1":{"x":529.2893218813451,"y":580},"control2":{"x":465,"y":580},"fill":false},{"type":2,"start":{"x":465,"y":580},"end":{"x":445,"y":592.5},"control1":{"x":451.6666666666667,"y":580},"control2":{"x":445,"y":584.1666666666666},"fill":false},{"type":2,"start":{"x":445,"y":592.5},"end":{"x":425,"y":592.5},"control1":{"x":445,"y":592.5},"control2":{"x":425,"y":592.5},"fill":false},{"type":2,"start":{"x":425,"y":592.5},"end":{"x":425,"y":517.5},"control1":{"x":425,"y":592.5},"control2":{"x":425,"y":517.5},"fill":false}],"preview":[{"type":2,"start":{"x":42.5,"y":28.25},"end":{"x":44.5,"y":28.25},"control1":{"x":42.5,"y":28.25},"control2":{"x":44.5,"y":28.25},"fill":false},{"type":2,"start":{"x":44.5,"y":28.25},"end":{"x":46.5,"y":27},"control1":{"x":44.5,"y":27.41666666666667},"control2":{"x":45.16666666666667,"y":27},"fill":false},{"type":2,"start":{"x":46.5,"y":27},"end":{"x":55,"y":27},"control1":{"x":46.5,"y":27},"control2":{"x":55,"y":27},"fill":false},{"type":2,"start":{"x":55,"y":27},"end":{"x":55,"y":73.46446609406726},"control1":{"x":55,"y":27},"control2":{"x":55,"y":73.46446609406726},"fill":false},{"type":2,"start":{"x":55,"y":73.46446609406726},"end":{"x":51.46446609406727,"y":77},"control1":{"x":55,"y":73.46446609406726},"control2":{"x":51.46446609406727,"y":77},"fill":false},{"type":2,"start":{"x":51.46446609406727,"y":77},"end":{"x":55,"y":80.53553390593275},"control1":{"x":51.46446609406727,"y":77},"control2":{"x":55,"y":80.53553390593275},"fill":false},{"type":2,"start":{"x":55,"y":80.53553390593275},"end":{"x":71.26776695296637,"y":64.26776695296637},"control1":{"x":55,"y":80.53553390593275},"control2":{"x":71.26776695296637,"y":64.26776695296637},"fill":false},{"type":2,"start":{"x":71.26776695296637,"y":64.26776695296637},"end":{"x":67.73223304703363,"y":60.73223304703363},"control1":{"x":71.26776695296637,"y":64.26776695296637},"control2":{"x":67.73223304703363,"y":60.73223304703363},"fill":false},{"type":2,"start":{"x":67.73223304703363,"y":60.73223304703363},"end":{"x":60,"y":68.46446609406726},"control1":{"x":67.73223304703363,"y":60.73223304703363},"control2":{"x":60,"y":68.46446609406726},"fill":false},{"type":2,"start":{"x":60,"y":68.46446609406726},"end":{"x":60,"y":29.071067811865476},"control1":{"x":60,"y":68.46446609406726},"control2":{"x":60,"y":29.071067811865476},"fill":false},{"type":2,"start":{"x":60,"y":29.071067811865476},"end":{"x":61.4142135623731,"y":24.121320343559645},"control1":{"x":60,"y":26.714045207910317},"control2":{"x":60.47140452079103,"y":25.064129385141708},"fill":false},{"type":2,"start":{"x":61.4142135623731,"y":24.121320343559645},"end":{"x":57.878679656440355,"y":20.585786437626908},"control1":{"x":61.4142135623731,"y":24.121320343559645},"control2":{"x":57.878679656440355,"y":20.585786437626908},"fill":false},{"type":2,"start":{"x":57.878679656440355,"y":20.585786437626908},"end":{"x":52.92893218813452,"y":22},"control1":{"x":56.93587061485829,"y":21.52859547920897},"control2":{"x":55.285954792089676,"y":22},"fill":false},{"type":2,"start":{"x":52.92893218813452,"y":22},"end":{"x":46.5,"y":22},"control1":{"x":52.92893218813452,"y":22},"control2":{"x":46.5,"y":22},"fill":false},{"type":2,"start":{"x":46.5,"y":22},"end":{"x":44.5,"y":20.75},"control1":{"x":45.16666666666667,"y":22},"control2":{"x":44.5,"y":21.583333333333336},"fill":false},{"type":2,"start":{"x":44.5,"y":20.75},"end":{"x":42.5,"y":20.75},"control1":{"x":44.5,"y":20.75},"control2":{"x":42.5,"y":20.75},"fill":false},{"type":2,"start":{"x":42.5,"y":20.75},"end":{"x":42.5,"y":28.25},"control1":{"x":42.5,"y":20.75},"control2":{"x":42.5,"y":28.25},"fill":false}]}]}},{"uuid":"vAAHmO-y0UgialH18LQGW","type":"system","name":"竖钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"3J1M0l_0utQDae8pfFNIN","name":"竖-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"Vo3zw_ou7aX63VHA4tuiH","name":"钩-水平延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"deTfcAQMBzH0398lLT5e7","name":"钩-竖直延伸","type":0,"value":-15,"min":-300,"max":300},{"uuid":"fQcm47soU8mFyGEAsmadL","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"4vOEXRE9s-vFtQ52NbLua","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"guOJ6QtZ8rZZq1ugpU6zY","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"OeHXXxYgnCUoR8_oxMI7Z","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"em88iUsshVxSqTZqla4pr","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"NXd-r6usH35Sp7hg2n4l1","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"9DrSaqHmQQFxUb_ovhnCP","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"5mIUozttPp50d2XL_U3s1","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_vAAHmO_y0UgialH18LQGW (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 500\nconst y0 = 250\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, gou_start, gou_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    shu_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  let shu_start, shu_end\n  const shu_start_ref = new FP.Joint(\n    'shu_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end_ref = new FP.Joint(\n    'shu_end_ref',\n    {\n      x: shu_start_ref.x,\n      y: shu_start_ref.y + shu_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x - weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x - weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x + weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x + weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x,\n        y: shu_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(shu_start_ref)\n  glyph.addJoint(shu_end_ref)\n  glyph.addRefLine(refline(shu_start_ref, shu_end_ref, 'ref'))\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_shu_gou } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_shu_gou } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n\n  // 计算竖钩拐角处内外圆角相关的点与数据\n  let in_radius = 30 * bending_degree\n  let out_radius = 30 * bending_degree\n  // 如果in_radius超出钩或竖的长度，取钩或竖的最小长度\n  const in_radius_min_length = Math.min(\n    getDistance(in_corner_shu_gou, in_gou_end),\n    getDistance(in_corner_shu_gou, in_shu_start),\n  )\n  const out_radius_min_length = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(shu_start, shu_end),\n  )\n  if (in_radius >= in_radius_min_length) {\n    in_radius = in_radius_min_length\n  }\n  if (out_radius >= out_radius_min_length) {\n    out_radius = out_radius_min_length\n  }\n  const in_radius_start = {\n    x: in_shu_end.x,\n    y: in_corner_shu_gou.y - in_radius,\n  }\n  const in_radius_end = getRadiusPoint({\n    start: in_corner_shu_gou,\n    end: in_gou_end,\n    radius: in_radius,\n  })\n  const out_radius_start = {\n    x: out_shu_end.x,\n    y: out_shu_end.y - out_radius,\n  }\n  const out_radius_end = getRadiusPoint({\n    start: out_gou_start,\n    end: out_gou_end,\n    radius: out_radius,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  // 绘制外侧圆角\n  pen.lineTo(out_radius_start.x, out_radius_start.y)\n  pen.quadraticBezierTo(out_corner_shu_gou.x, out_corner_shu_gou.y, out_radius_end.x, out_radius_end.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧圆角\n  pen.lineTo(in_radius_end.x, in_radius_end.y)\n  pen.quadraticBezierTo(in_corner_shu_gou.x, in_corner_shu_gou.y, in_radius_start.x, in_radius_start.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x - start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":500,"_y":250,"uuid":"xcELnvmVYOkwCScGtFR4s","name":"shu_start_ref"},{"_x":500,"_y":750,"uuid":"WcYwRoF2OlHXszvPKsKfv","name":"shu_end_ref"},{"_x":500,"_y":250,"uuid":"TB2Vh9SZe67h-51eEFoua","name":"shu_start"},{"_x":500,"_y":750,"uuid":"mQi0xIwaTkyNaZHKqAxRU","name":"shu_end"},{"_x":500,"_y":750,"uuid":"bP-N0_Gh6qPsckSalbCgS","name":"gou_start"},{"_x":400,"_y":735,"uuid":"YzAMdF9KM-cXbdYMikDBL","name":"gou_end"}],"_reflines":[{"name":"shu_start_ref-shu_end_ref","start":"shu_start_ref","end":"shu_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"yAn1tIksV5r-iI-h1done","type":"anchor","x":537.5,"y":250,"origin":null},{"uuid":"uTaxgRbZW2ITZWik4nPD9","type":"control","x":537.5,"y":250,"origin":"yAn1tIksV5r-iI-h1done"},{"uuid":"mSwl9QA2w8Kirktub9c7q","type":"control","x":537.5,"y":270,"origin":"vpyyCe0TPYd6Wmrvpn5uO"},{"uuid":"vpyyCe0TPYd6Wmrvpn5uO","type":"anchor","x":537.5,"y":270,"origin":null},{"uuid":"Gz_rI3btYlPZt5KYOZeIS","type":"control","x":529.1666666666666,"y":270,"origin":"vpyyCe0TPYd6Wmrvpn5uO"},{"uuid":"vuRoGwrPTGzwclCBiAJDl","type":"control","x":525,"y":276.6666666666667,"origin":"HOjUnVBh9xPurkOTsqsE_"},{"uuid":"HOjUnVBh9xPurkOTsqsE_","type":"anchor","x":525,"y":290,"origin":null},{"uuid":"clHp9BnSzTSFtt2n-D_vY","type":"control","x":525,"y":290,"origin":"HOjUnVBh9xPurkOTsqsE_"},{"uuid":"g2SIdMPNWYen2JH7sBp0V","type":"control","x":525,"y":720,"origin":"NYL79mjuKYYy-w89H4LaT"},{"uuid":"NYL79mjuKYYy-w89H4LaT","type":"anchor","x":525,"y":720,"origin":null},{"uuid":"VYpjN537qNrCULX4PLZsr","type":"control","x":525,"y":759.3531236801306,"origin":"NYL79mjuKYYy-w89H4LaT"},{"uuid":"RmEihBUd-2x9vOLOqHRjY","type":"control","x":505.54113269689833,"y":776.1108554247305,"origin":"u5xo_LRNq56haRXwWEp7g"},{"uuid":"u5xo_LRNq56haRXwWEp7g","type":"anchor","x":466.62339809069493,"y":770.2731952338,"origin":null},{"uuid":"EhPTZhzIoG3w5TlVruJAl","type":"control","x":466.62339809069493,"y":770.2731952338,"origin":"u5xo_LRNq56haRXwWEp7g"},{"uuid":"Un7w25etYT4v9JvXxaI5_","type":"control","x":396.2914886767439,"y":759.7234088217074,"origin":"DJRSqH2IPvBlj2Kdz7lVq"},{"uuid":"DJRSqH2IPvBlj2Kdz7lVq","type":"anchor","x":396.2914886767439,"y":759.7234088217074,"origin":null},{"uuid":"c9dB6S1oIOJo3xQnRk_Lz","type":"control","x":396.2914886767439,"y":759.7234088217074,"origin":"DJRSqH2IPvBlj2Kdz7lVq"},{"uuid":"-xBtCZk1J_-Pp-OrCN96F","type":"control","x":403.7085113232561,"y":710.2765911782926,"origin":"Rx2_V-YKVWCZHSTlv6qFu"},{"uuid":"Rx2_V-YKVWCZHSTlv6qFu","type":"anchor","x":403.7085113232561,"y":710.2765911782926,"origin":null},{"uuid":"xpuAnxVcWezsfBRQjc8h8","type":"control","x":403.7085113232561,"y":710.2765911782926,"origin":"Rx2_V-YKVWCZHSTlv6qFu"},{"uuid":"AQSwolUDr25UWHrQZQ1vZ","type":"control","x":445.33190941395105,"y":716.5201008918967,"origin":"PgXHmSQkT5Ho_ldeEYyK7"},{"uuid":"PgXHmSQkT5Ho_ldeEYyK7","type":"anchor","x":445.33190941395105,"y":716.5201008918967,"origin":null},{"uuid":"3p9BzwBi1TWpJakTxx49-","type":"control","x":465.11063647131704,"y":719.4869099505016,"origin":"PgXHmSQkT5Ho_ldeEYyK7"},{"uuid":"jv8-ID2APznWFvHXMO5sb","type":"control","x":475,"y":710.9703144798041,"origin":"M_8yWolPy_grZb8Kr7Oce"},{"uuid":"M_8yWolPy_grZb8Kr7Oce","type":"anchor","x":475,"y":690.9703144798041,"origin":null},{"uuid":"fkQr3Ip0mQ2M1G2UHwYEF","type":"control","x":475,"y":690.9703144798041,"origin":"M_8yWolPy_grZb8Kr7Oce"},{"uuid":"9QZYD_HvGhdBnNmaTsWB5","type":"control","x":475,"y":290,"origin":"SZ0JHFZGtrN0kbKXi7gbm"},{"uuid":"SZ0JHFZGtrN0kbKXi7gbm","type":"anchor","x":475,"y":290,"origin":null},{"uuid":"mEoo6JGImtMOH0Rg8pawY","type":"control","x":475,"y":276.6666666666667,"origin":"SZ0JHFZGtrN0kbKXi7gbm"},{"uuid":"fBNbCr_DkCk59_Ds74-KP","type":"control","x":470.8333333333333,"y":270,"origin":"LTKNXUjO8KrpYuLk8Peyi"},{"uuid":"LTKNXUjO8KrpYuLk8Peyi","type":"anchor","x":462.5,"y":270,"origin":null},{"uuid":"zrK0bbCEPXp7ofufPqK9B","type":"control","x":462.5,"y":270,"origin":"LTKNXUjO8KrpYuLk8Peyi"},{"uuid":"ySH_TjnomS-L7jMISGr3k","type":"control","x":462.5,"y":250,"origin":"tYZph3tSEoVHx1gbvYNsX"},{"uuid":"tYZph3tSEoVHx1gbvYNsX","type":"anchor","x":462.5,"y":250,"origin":null},{"uuid":"kQdsjba6l40udP3jV2oLN","type":"control","x":462.5,"y":250,"origin":"tYZph3tSEoVHx1gbvYNsX"},{"uuid":"eJWKedMjwsR05r0dbecoF","type":"control","x":537.5,"y":250,"origin":"cMO7mNm1ioF0QCZR7r_l1"},{"uuid":"cMO7mNm1ioF0QCZR7r_l1","type":"anchor","x":537.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":537.5,"y":550},"end":{"x":537.5,"y":530},"control1":{"x":537.5,"y":550},"control2":{"x":537.5,"y":530},"fill":false},{"type":2,"start":{"x":537.5,"y":530},"end":{"x":525,"y":510},"control1":{"x":529.1666666666666,"y":530},"control2":{"x":525,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":525,"y":510},"end":{"x":525,"y":80},"control1":{"x":525,"y":510},"control2":{"x":525,"y":80},"fill":false},{"type":2,"start":{"x":525,"y":80},"end":{"x":466.62339809069493,"y":29.72680476619996},"control1":{"x":525,"y":40.64687631986942},"control2":{"x":505.54113269689833,"y":23.889144575269484},"fill":false},{"type":2,"start":{"x":466.62339809069493,"y":29.72680476619996},"end":{"x":396.2914886767439,"y":40.27659117829262},"control1":{"x":466.62339809069493,"y":29.72680476619996},"control2":{"x":396.2914886767439,"y":40.27659117829262},"fill":false},{"type":2,"start":{"x":396.2914886767439,"y":40.27659117829262},"end":{"x":403.7085113232561,"y":89.72340882170738},"control1":{"x":396.2914886767439,"y":40.27659117829262},"control2":{"x":403.7085113232561,"y":89.72340882170738},"fill":false},{"type":2,"start":{"x":403.7085113232561,"y":89.72340882170738},"end":{"x":445.33190941395105,"y":83.47989910810327},"control1":{"x":403.7085113232561,"y":89.72340882170738},"control2":{"x":445.33190941395105,"y":83.47989910810327},"fill":false},{"type":2,"start":{"x":445.33190941395105,"y":83.47989910810327},"end":{"x":475,"y":109.02968552019593},"control1":{"x":465.11063647131704,"y":80.51309004949837},"control2":{"x":475,"y":89.02968552019593},"fill":false},{"type":2,"start":{"x":475,"y":109.02968552019593},"end":{"x":475,"y":510},"control1":{"x":475,"y":109.02968552019593},"control2":{"x":475,"y":510},"fill":false},{"type":2,"start":{"x":475,"y":510},"end":{"x":462.5,"y":530},"control1":{"x":475,"y":523.3333333333333},"control2":{"x":470.8333333333333,"y":530},"fill":false},{"type":2,"start":{"x":462.5,"y":530},"end":{"x":462.5,"y":550},"control1":{"x":462.5,"y":530},"control2":{"x":462.5,"y":550},"fill":false},{"type":2,"start":{"x":462.5,"y":550},"end":{"x":537.5,"y":550},"control1":{"x":462.5,"y":550},"control2":{"x":537.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":53.75,"y":25},"end":{"x":53.75,"y":27},"control1":{"x":53.75,"y":25},"control2":{"x":53.75,"y":27},"fill":false},{"type":2,"start":{"x":53.75,"y":27},"end":{"x":52.5,"y":29},"control1":{"x":52.916666666666664,"y":27},"control2":{"x":52.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":52.5,"y":29},"end":{"x":52.5,"y":72},"control1":{"x":52.5,"y":29},"control2":{"x":52.5,"y":72},"fill":false},{"type":2,"start":{"x":52.5,"y":72},"end":{"x":46.66233980906949,"y":77.02731952338002},"control1":{"x":52.5,"y":75.93531236801306},"control2":{"x":50.554113269689836,"y":77.61108554247306},"fill":false},{"type":2,"start":{"x":46.66233980906949,"y":77.02731952338002},"end":{"x":39.62914886767439,"y":75.97234088217074},"control1":{"x":46.66233980906949,"y":77.02731952338002},"control2":{"x":39.62914886767439,"y":75.97234088217074},"fill":false},{"type":2,"start":{"x":39.62914886767439,"y":75.97234088217074},"end":{"x":40.37085113232561,"y":71.02765911782926},"control1":{"x":39.62914886767439,"y":75.97234088217074},"control2":{"x":40.37085113232561,"y":71.02765911782926},"fill":false},{"type":2,"start":{"x":40.37085113232561,"y":71.02765911782926},"end":{"x":44.533190941395105,"y":71.65201008918967},"control1":{"x":40.37085113232561,"y":71.02765911782926},"control2":{"x":44.533190941395105,"y":71.65201008918967},"fill":false},{"type":2,"start":{"x":44.533190941395105,"y":71.65201008918967},"end":{"x":47.5,"y":69.09703144798041},"control1":{"x":46.51106364713171,"y":71.94869099505017},"control2":{"x":47.5,"y":71.09703144798041},"fill":false},{"type":2,"start":{"x":47.5,"y":69.09703144798041},"end":{"x":47.5,"y":29},"control1":{"x":47.5,"y":69.09703144798041},"control2":{"x":47.5,"y":29},"fill":false},{"type":2,"start":{"x":47.5,"y":29},"end":{"x":46.25,"y":27},"control1":{"x":47.5,"y":27.66666666666667},"control2":{"x":47.083333333333336,"y":27},"fill":false},{"type":2,"start":{"x":46.25,"y":27},"end":{"x":46.25,"y":25},"control1":{"x":46.25,"y":27},"control2":{"x":46.25,"y":25},"fill":false},{"type":2,"start":{"x":46.25,"y":25},"end":{"x":53.75,"y":25},"control1":{"x":46.25,"y":25},"control2":{"x":53.75,"y":25},"fill":false}]}]}},{"uuid":"4Fv2cQNwCgkZehuKzZ0gh","type":"system","name":"横钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"bLGdMkpWHD306B95I53t8","name":"横-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"zEk4giBi21Trpr-uKbMnE","name":"钩-水平延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"z0ScjOnUd8cYMs9d8JQ7k","name":"钩-竖直延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"BlstIqZf6eHM24s04B-wo","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"kFqOhV-7pIDtWWnXfqLWP","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"HGLC5hcCmQuth68wm1DyS","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"1B5IIYMUF6RDcVhVNJWIe","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"B0rIsxR2_-IJWwG-DypvR","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"_Z2HyWdLgtWeF1NVRrHR9","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"o1wj4C0g1M5IpoDwqwqsw","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"qwlxjcHcYqAUfBxRSca62","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_4Fv2cQNwCgkZehuKzZ0gh (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 500\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, gou_start, gou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    heng_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton, global_params) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_heng_gou } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_heng_gou } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  const gou_angle = Math.atan2(gou_end.y - gou_start.y, gou_start.x - gou_end.x)\n  const out_corner_heng_gou_1 = {\n    x: out_corner_heng_gou.x - weight * Math.sin(gou_angle),\n    y: out_corner_heng_gou.y - weight * Math.cos(gou_angle),\n  }\n  const { corner: out_corner_heng_gou_2 } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  pen.lineTo(out_corner_heng_gou_2.x, out_corner_heng_gou_2.y)\n  pen.lineTo(out_corner_heng_gou_1.x, out_corner_heng_gou_1.y)\n  pen.lineTo(out_corner_heng_gou.x, out_corner_heng_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  pen.lineTo(in_corner_heng_gou.x, in_corner_heng_gou.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":500,"uuid":"o-rmLcK71xYSn_VhgSQyF","name":"heng_start_ref"},{"_x":750,"_y":500,"uuid":"ST-22IidP8nWrXP-uXxwc","name":"heng_end_ref"},{"_x":250,"_y":500,"uuid":"HrE9aATIFLuoC2JIijH4u","name":"heng_start"},{"_x":750,"_y":500,"uuid":"SDWdq_QtqW83bX09y4VxW","name":"heng_end"},{"_x":750,"_y":500,"uuid":"w7psEt33VlC9plyIr1_Fc","name":"gou_start"},{"_x":650,"_y":600,"uuid":"eTZwmAy42LwI3q2okmEyh","name":"gou_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"KLZvznb6TVGvFU0zX1tUH","type":"anchor","x":250,"y":462.5,"origin":null},{"uuid":"_Ae_wRd4NEb-hDzOYgY_t","type":"control","x":250,"y":462.5,"origin":"KLZvznb6TVGvFU0zX1tUH"},{"uuid":"MXkkGqpFtcO0hfya1owWH","type":"control","x":270,"y":462.5,"origin":"LKa-gqkBHxjrDhd_SPYkm"},{"uuid":"LKa-gqkBHxjrDhd_SPYkm","type":"anchor","x":270,"y":462.5,"origin":null},{"uuid":"0KsXDM4nBWO0vrePvjx1L","type":"control","x":270,"y":470.8333333333333,"origin":"LKa-gqkBHxjrDhd_SPYkm"},{"uuid":"Oe3IWOwani26M4Srb0_m6","type":"control","x":276.6666666666667,"y":475,"origin":"xC5YC-CDq3BIGh8M576KB"},{"uuid":"xC5YC-CDq3BIGh8M576KB","type":"anchor","x":290,"y":475,"origin":null},{"uuid":"g2x9ZkALX57g6i1kWIu7R","type":"control","x":290,"y":475,"origin":"xC5YC-CDq3BIGh8M576KB"},{"uuid":"5fOftEmykwP7sllXFSHk2","type":"control","x":739.6446609406726,"y":475,"origin":"MPPVKb_Mq0DBY6vFEm17q"},{"uuid":"MPPVKb_Mq0DBY6vFEm17q","type":"anchor","x":739.6446609406726,"y":475,"origin":null},{"uuid":"wE_-9wzyU_tmg2qUmi4Ca","type":"control","x":739.6446609406726,"y":475,"origin":"MPPVKb_Mq0DBY6vFEm17q"},{"uuid":"JGnqtN-41yE62eZx2oqR6","type":"control","x":775,"y":439.6446609406726,"origin":"jxFtqB2Q3Q29dORfHIyQq"},{"uuid":"jxFtqB2Q3Q29dORfHIyQq","type":"anchor","x":775,"y":439.6446609406726,"origin":null},{"uuid":"TdCHTg8etKBEBRytRIjHz","type":"control","x":775,"y":439.6446609406726,"origin":"jxFtqB2Q3Q29dORfHIyQq"},{"uuid":"P3jihb5n12yJj-YNN5Ldb","type":"control","x":810.3553390593273,"y":475,"origin":"k9T0bhKKsiQ2gBfhqwNIP"},{"uuid":"k9T0bhKKsiQ2gBfhqwNIP","type":"anchor","x":810.3553390593273,"y":475,"origin":null},{"uuid":"dS6bv4wynJh2VwHElqcSd","type":"control","x":810.3553390593273,"y":475,"origin":"k9T0bhKKsiQ2gBfhqwNIP"},{"uuid":"Y5KGqxQO6rTRComn2N22B","type":"control","x":667.6776695296637,"y":617.6776695296637,"origin":"gJhrT3-krqzILz2XKVgze"},{"uuid":"gJhrT3-krqzILz2XKVgze","type":"anchor","x":667.6776695296637,"y":617.6776695296637,"origin":null},{"uuid":"E7nlmX1AGMR05GhL7X2Dj","type":"control","x":667.6776695296637,"y":617.6776695296637,"origin":"gJhrT3-krqzILz2XKVgze"},{"uuid":"-PAJrWRgBV33V9SJcxCjv","type":"control","x":632.3223304703363,"y":582.3223304703363,"origin":"573-DNlnnlPcLNqLKrtnH"},{"uuid":"573-DNlnnlPcLNqLKrtnH","type":"anchor","x":632.3223304703363,"y":582.3223304703363,"origin":null},{"uuid":"FQPCQoSHEmGXlrMR5ZHUL","type":"control","x":632.3223304703363,"y":582.3223304703363,"origin":"573-DNlnnlPcLNqLKrtnH"},{"uuid":"dXUygLrmz75ee-WIWiqhC","type":"control","x":689.6446609406726,"y":525,"origin":"xgd-iuMB9xZIjipTD8ccE"},{"uuid":"xgd-iuMB9xZIjipTD8ccE","type":"anchor","x":689.6446609406726,"y":525,"origin":null},{"uuid":"2sfiHQhR5ZxwrCVUoOocq","type":"control","x":689.6446609406726,"y":525,"origin":"xgd-iuMB9xZIjipTD8ccE"},{"uuid":"fzkMqJFpsqxDP3K5Ba7eQ","type":"control","x":290,"y":525,"origin":"PyHMBXAL8dmGoVBOrgR8w"},{"uuid":"PyHMBXAL8dmGoVBOrgR8w","type":"anchor","x":290,"y":525,"origin":null},{"uuid":"y_ET-bYZqX52z-tBolx2e","type":"control","x":276.6666666666667,"y":525,"origin":"PyHMBXAL8dmGoVBOrgR8w"},{"uuid":"Ua6Zzj_X6pGhHLo0kMI5l","type":"control","x":270,"y":529.1666666666666,"origin":"HBbyyta5ofBY68nNEDJ2R"},{"uuid":"HBbyyta5ofBY68nNEDJ2R","type":"anchor","x":270,"y":537.5,"origin":null},{"uuid":"YxICNl2Dd0sZxiPjJG9uN","type":"control","x":270,"y":537.5,"origin":"HBbyyta5ofBY68nNEDJ2R"},{"uuid":"G4QR3VNguSsAWgOJ1dwPa","type":"control","x":250,"y":537.5,"origin":"Dnxoc53fWg8HP6RzBJRu_"},{"uuid":"Dnxoc53fWg8HP6RzBJRu_","type":"anchor","x":250,"y":537.5,"origin":null},{"uuid":"bRJiFbTenBeS1OZYOA5lg","type":"control","x":250,"y":537.5,"origin":"Dnxoc53fWg8HP6RzBJRu_"},{"uuid":"DoCI0_ZDtBlmVX72JViTL","type":"control","x":250,"y":462.5,"origin":"UjY1_omXmE_F_Tcs5WROs"},{"uuid":"UjY1_omXmE_F_Tcs5WROs","type":"anchor","x":250,"y":462.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":337.5},"end":{"x":270,"y":337.5},"control1":{"x":250,"y":337.5},"control2":{"x":270,"y":337.5},"fill":false},{"type":2,"start":{"x":270,"y":337.5},"end":{"x":290,"y":325},"control1":{"x":270,"y":329.16666666666674},"control2":{"x":276.6666666666667,"y":325},"fill":false},{"type":2,"start":{"x":290,"y":325},"end":{"x":739.6446609406726,"y":325},"control1":{"x":290,"y":325},"control2":{"x":739.6446609406726,"y":325},"fill":false},{"type":2,"start":{"x":739.6446609406726,"y":325},"end":{"x":775,"y":360.35533905932743},"control1":{"x":739.6446609406726,"y":325},"control2":{"x":775,"y":360.35533905932743},"fill":false},{"type":2,"start":{"x":775,"y":360.35533905932743},"end":{"x":810.3553390593273,"y":325},"control1":{"x":775,"y":360.35533905932743},"control2":{"x":810.3553390593273,"y":325},"fill":false},{"type":2,"start":{"x":810.3553390593273,"y":325},"end":{"x":667.6776695296637,"y":182.32233047033628},"control1":{"x":810.3553390593273,"y":325},"control2":{"x":667.6776695296637,"y":182.32233047033628},"fill":false},{"type":2,"start":{"x":667.6776695296637,"y":182.32233047033628},"end":{"x":632.3223304703363,"y":217.67766952966372},"control1":{"x":667.6776695296637,"y":182.32233047033628},"control2":{"x":632.3223304703363,"y":217.67766952966372},"fill":false},{"type":2,"start":{"x":632.3223304703363,"y":217.67766952966372},"end":{"x":689.6446609406726,"y":275},"control1":{"x":632.3223304703363,"y":217.67766952966372},"control2":{"x":689.6446609406726,"y":275},"fill":false},{"type":2,"start":{"x":689.6446609406726,"y":275},"end":{"x":290,"y":275},"control1":{"x":689.6446609406726,"y":275},"control2":{"x":290,"y":275},"fill":false},{"type":2,"start":{"x":290,"y":275},"end":{"x":270,"y":262.5},"control1":{"x":276.6666666666667,"y":275},"control2":{"x":270,"y":270.83333333333337},"fill":false},{"type":2,"start":{"x":270,"y":262.5},"end":{"x":250,"y":262.5},"control1":{"x":270,"y":262.5},"control2":{"x":250,"y":262.5},"fill":false},{"type":2,"start":{"x":250,"y":262.5},"end":{"x":250,"y":337.5},"control1":{"x":250,"y":262.5},"control2":{"x":250,"y":337.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":46.25},"end":{"x":27,"y":46.25},"control1":{"x":25,"y":46.25},"control2":{"x":27,"y":46.25},"fill":false},{"type":2,"start":{"x":27,"y":46.25},"end":{"x":29,"y":47.5},"control1":{"x":27,"y":47.083333333333336},"control2":{"x":27.66666666666667,"y":47.5},"fill":false},{"type":2,"start":{"x":29,"y":47.5},"end":{"x":73.96446609406726,"y":47.5},"control1":{"x":29,"y":47.5},"control2":{"x":73.96446609406726,"y":47.5},"fill":false},{"type":2,"start":{"x":73.96446609406726,"y":47.5},"end":{"x":77.5,"y":43.96446609406726},"control1":{"x":73.96446609406726,"y":47.5},"control2":{"x":77.5,"y":43.96446609406726},"fill":false},{"type":2,"start":{"x":77.5,"y":43.96446609406726},"end":{"x":81.03553390593274,"y":47.5},"control1":{"x":77.5,"y":43.96446609406726},"control2":{"x":81.03553390593274,"y":47.5},"fill":false},{"type":2,"start":{"x":81.03553390593274,"y":47.5},"end":{"x":66.76776695296637,"y":61.767766952966376},"control1":{"x":81.03553390593274,"y":47.5},"control2":{"x":66.76776695296637,"y":61.767766952966376},"fill":false},{"type":2,"start":{"x":66.76776695296637,"y":61.767766952966376},"end":{"x":63.23223304703363,"y":58.23223304703363},"control1":{"x":66.76776695296637,"y":61.767766952966376},"control2":{"x":63.23223304703363,"y":58.23223304703363},"fill":false},{"type":2,"start":{"x":63.23223304703363,"y":58.23223304703363},"end":{"x":68.96446609406726,"y":52.5},"control1":{"x":63.23223304703363,"y":58.23223304703363},"control2":{"x":68.96446609406726,"y":52.5},"fill":false},{"type":2,"start":{"x":68.96446609406726,"y":52.5},"end":{"x":29,"y":52.5},"control1":{"x":68.96446609406726,"y":52.5},"control2":{"x":29,"y":52.5},"fill":false},{"type":2,"start":{"x":29,"y":52.5},"end":{"x":27,"y":53.75},"control1":{"x":27.66666666666667,"y":52.5},"control2":{"x":27,"y":52.916666666666664},"fill":false},{"type":2,"start":{"x":27,"y":53.75},"end":{"x":25,"y":53.75},"control1":{"x":27,"y":53.75},"control2":{"x":25,"y":53.75},"fill":false},{"type":2,"start":{"x":25,"y":53.75},"end":{"x":25,"y":46.25},"control1":{"x":25,"y":53.75},"control2":{"x":25,"y":46.25},"fill":false}]}]}},{"uuid":"V_BD4vLRZ0lJ-jePpTQLI","type":"system","name":"弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"dJQCzFklMgoXFMyYO6q_O","name":"弯-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"dO0bzqXQrWhJ2-9nAvqCX","name":"弯-弯曲度","type":0,"value":100,"min":0,"max":350},{"uuid":"NDrPmu4iEEaoqhbh5eoSX","name":"钩-水平延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"hbO1EgKLCmx6wa69ca_DS","name":"钩-竖直延伸","type":0,"value":-30,"min":-300,"max":300},{"uuid":"YqbrR9L0mK1nmOFu4Uso2","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"cIgbzT73Z-6_jsx-kIBsV","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"yK_r4uetCCskMRh0faZen","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"YcHst8GBbTEPrR6UlQeLp","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"YmM0pI6oIpe9Qk4rb7p0f","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"DdlnZYr-3uTHosS8k8Mj3","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"2gINaDOVqYHsIPSoRthPM","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"S0MDkv20wahVTKQSi5HZk","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_V_BD4vLRZ0lJ_jePpTQLI (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 500\nconst y0 = 250\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  wan_length: glyph.getParam('弯-长度'),\n  wan_bendDegree: glyph.getParam('弯-弯曲度') + 30 * global_params.bending_degree,\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'wan_bend': {\n      jointsMap['wan_bend'] = {\n        x: glyph.tempData['wan_bend'].x + deltaX,\n        y: glyph.tempData['wan_bend'].y,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['wan_start'], jointsMap['wan_end'])\n      jointsMap['wan_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['wan_start'], jointsMap['wan_end'])\n      jointsMap['wan_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { wan_bendDegree: bendDegree } = params\n  const verticalSpan = Math.abs(end.y - start.y)\n  const bend = {\n    x: start.x + bendDegree,\n    y: start.y + verticalSpan / 2,\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('弯-长度', _params.wan_length)\n  glyph.setParam('弯-弯曲度', _params.wan_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { wan_start, wan_end, wan_bend, gou_start, gou_end } = jointsMap\n  const wan_length_range = glyph.getParamRange('弯-长度')\n  const wan_bend_degree_range = glyph.getParamRange('弯-弯曲度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const wan_length = range(wan_end.y - wan_start.y, wan_length_range)\n  const wan_bendDegree = range(wan_bend.x - wan_start.x, wan_bend_degree_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    wan_length,\n    wan_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    wan_length,\n    wan_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  } = params\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x,\n      y: wan_start.y + wan_length,\n    },\n  )\n  const wan_bend = new FP.Joint(\n    'wan_bend',\n    {\n      x: wan_start.x + wan_bendDegree,\n      y: wan_start.y + wan_length / 2,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: wan_start.x,\n      y: wan_start.y + wan_length,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_bend)\n  glyph.addJoint(wan_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    wan_start,\n    wan_bend,\n    wan_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(wan_start, wan_bend))\n  glyph.addRefLine(refline(wan_bend, wan_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    wan_start,\n    wan_bend,\n    wan_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_wan_curves, out_wan_points, in_wan_curves, in_wan_points } = FP.getCurveContours('wan', { wan_start, wan_bend, wan_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: in_wan_curves[in_wan_curves.length - 1].control2, end: in_wan_curves[in_wan_curves.length - 1].end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: out_wan_curves[out_wan_curves.length - 1].control2, end: out_wan_curves[out_wan_curves.length - 1].end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  // 内侧弯曲线最后一个控制点使用in_corner_wan_gou\n  in_wan_curves[in_wan_curves.length - 1].end = in_corner_wan_gou\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius = 30 * bending_degree\n  let out_radius = 30 * bending_degree\n  // 如果in_radius超出钩或弯的长度，取钩或弯的最小长度\n  const in_radius_min_length = Math.min(\n    getDistance(in_corner_wan_gou, in_gou_end),\n    getDistance(in_corner_wan_gou, in_wan_curves[0].start),\n  )\n  const out_radius_min_length = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_wan_curves[0].start, out_wan_curves[out_wan_curves.length - 1].end),\n  )\n  if (in_radius >= in_radius_min_length) {\n    in_radius = in_radius_min_length\n  }\n  if (out_radius >= out_radius_min_length) {\n    out_radius = out_radius_min_length\n  }\n  const in_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(in_wan_curves), in_radius, true)\n  const in_radius_control = FP.getIntersection(\n    { type: 'line', start: in_radius_data.tangent.start, end: in_radius_data.tangent.end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  ).corner\n  const in_radius_start = in_radius_data.point\n  const in_radius_end = getRadiusPoint({\n    start: in_radius_control,\n    end: in_gou_end,\n    radius: in_radius,\n  })\n  const out_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(out_wan_curves), out_radius, true)\n  const out_radius_control = FP.getIntersection(\n    { type: 'line', start: out_radius_data.tangent.start, end: out_radius_data.tangent.end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  ).corner\n  const out_radius_start = out_radius_data.point\n  const out_radius_end = getRadiusPoint({\n    start: out_radius_control,\n    end: out_gou_end,\n    radius: out_radius,\n  })\n  const in_wan_curves_final = in_radius_data.final_curves\n  const out_wan_curves_final = out_radius_data.final_curves\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）侧轮廓\n  pen.moveTo(out_wan_curves_final[0].start.x, out_wan_curves_final[0].start.y)\n  for (let i = 0; i < out_wan_curves_final.length; i++) {\n    const curve = out_wan_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  // 绘制外侧圆角\n  pen.quadraticBezierTo(out_radius_control.x, out_radius_control.y, out_radius_end.x, out_radius_end.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）侧轮廓\n  // 绘制内侧圆角\n  pen.lineTo(in_radius_end.x, in_radius_end.y)\n  pen.quadraticBezierTo(in_radius_control.x, in_radius_control.y, in_radius_start.x, in_radius_start.y)\n  for (let i = in_wan_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_wan_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_wan_curves[0].start.x, out_wan_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":500,"_y":250,"uuid":"dCYgua4i2Wp2S1TJ_bpRf","name":"wan_start"},{"_x":630,"_y":500,"uuid":"4XTMKZWuiZ87gpDX5-E4B","name":"wan_bend"},{"_x":500,"_y":750,"uuid":"XCGZ9rz7Hci8IGUp-ifHd","name":"wan_end"},{"_x":500,"_y":750,"uuid":"rLbwqvj9H67AVRSJpXu30","name":"gou_start"},{"_x":400,"_y":720,"uuid":"0UtkNA9iCPlmBxKXQycrU","name":"gou_end"}],"_reflines":[{"name":"wan_start-wan_bend","start":"wan_start","end":"wan_bend"},{"name":"wan_bend-wan_end","start":"wan_bend","end":"wan_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"oDm2Ils8ddMBafSpBh-Bf","type":"anchor","x":522.1804200308649,"y":238.46618158395026,"origin":null},{"uuid":"UbVbJbE-IsKgWLI0wLaTO","type":"control","x":601.3086038690956,"y":393.8729086000983,"origin":"oDm2Ils8ddMBafSpBh-Bf"},{"uuid":"n8TG1UVrthdzuX1mEHt_V","type":"control","x":607.6109441312142,"y":571.2340579237925,"origin":"HgWGijmbMrDNZBhk0wmFm"},{"uuid":"HgWGijmbMrDNZBhk0wmFm","type":"anchor","x":536.8987353047298,"y":730.9511209071769,"origin":null},{"uuid":"9lndcYcSd5qlo8whKWKd8","type":"control","x":522.2508142637993,"y":764.0362552325767,"origin":"HgWGijmbMrDNZBhk0wmFm"},{"uuid":"xzfFcW-pJCqNtNYacqGWS","type":"control","x":505.3485908911224,"y":777.7053435396131,"origin":"vVvqaLBbxjskItv9_4Mz5"},{"uuid":"vVvqaLBbxjskItv9_4Mz5","type":"anchor","x":486.1920651866994,"y":771.9583858282862,"origin":null},{"uuid":"gCR0mZJ731WtkrgIbWHea","type":"control","x":486.1920651866994,"y":771.9583858282862,"origin":"vVvqaLBbxjskItv9_4Mz5"},{"uuid":"gbats4LhZY8qqYTyIEwgU","type":"control","x":392.81630286084135,"y":743.9456571305288,"origin":"17q7CPj9_trB0RHmxydz3"},{"uuid":"17q7CPj9_trB0RHmxydz3","type":"anchor","x":392.81630286084135,"y":743.9456571305288,"origin":null},{"uuid":"vZkUACTzjPaZisMHPEbqq","type":"control","x":392.81630286084135,"y":743.9456571305288,"origin":"17q7CPj9_trB0RHmxydz3"},{"uuid":"PgZ49wtHrpGjGDDWUcQwB","type":"control","x":407.18369713915865,"y":696.0543428694712,"origin":"2tU27LlaHk1qXtJsUhsRD"},{"uuid":"2tU27LlaHk1qXtJsUhsRD","type":"anchor","x":407.18369713915865,"y":696.0543428694712,"origin":null},{"uuid":"SSfO-kkRL-_4A6LgrUNyR","type":"control","x":407.18369713915865,"y":696.0543428694712,"origin":"2tU27LlaHk1qXtJsUhsRD"},{"uuid":"L-WrixcV0pBELL7JFGQ3Q","type":"control","x":459.78543838493226,"y":711.8348652432032,"origin":"G_x7Ncx-cihnlF8a4zvLs"},{"uuid":"G_x7Ncx-cihnlF8a4zvLs","type":"anchor","x":459.78543838493226,"y":711.8348652432032,"origin":null},{"uuid":"XQgFA6Xi9r9vdjLBS08oO","type":"control","x":478.9419640893553,"y":717.5818229545301,"origin":"G_x7Ncx-cihnlF8a4zvLs"},{"uuid":"HVICCPpUurAKFj898a0Zf","type":"control","x":492.67054119763975,"y":710.6490492300983,"origin":"NxXUbtPqT0X9xPHQBSmDo"},{"uuid":"NxXUbtPqT0X9xPHQBSmDo","type":"anchor","x":500.97116970978556,"y":691.0365440699077,"origin":null},{"uuid":"rnT0tFfyfc5CtrjgFZEWx","type":"control","x":559.9656245394892,"y":551.6460089944998,"origin":"NxXUbtPqT0X9xPHQBSmDo"},{"uuid":"CwPNfubKhqQqcFVroXSQW","type":"control","x":545.7854308260648,"y":395.0035178481631,"origin":"k73XKaigFmUQs9dGCwUzG"},{"uuid":"k73XKaigFmUQs9dGCwUzG","type":"anchor","x":477.81957996913513,"y":261.5338184160497,"origin":null},{"uuid":"DUv_bT-TPUTm1DW6LiZI_","type":"control","x":477.81957996913513,"y":261.5338184160497,"origin":"k73XKaigFmUQs9dGCwUzG"},{"uuid":"z63AR-_KxHUyfpjIIDtp4","type":"control","x":522.1804200308649,"y":238.46618158395026,"origin":"dvDbM_-iOjpmXpGaTyBgn"},{"uuid":"dvDbM_-iOjpmXpGaTyBgn","type":"anchor","x":522.1804200308649,"y":238.46618158395026,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":522.1804200308649,"y":561.5338184160497},"end":{"x":536.8987353047298,"y":69.04887909282309},"control1":{"x":601.3086038690956,"y":406.1270913999017},"control2":{"x":607.6109441312142,"y":228.76594207620747},"fill":false},{"type":2,"start":{"x":536.8987353047298,"y":69.04887909282309},"end":{"x":486.1920651866994,"y":28.04161417171383},"control1":{"x":522.2508142637993,"y":35.96374476742335},"control2":{"x":505.3485908911224,"y":22.294656460386932},"fill":false},{"type":2,"start":{"x":486.1920651866994,"y":28.04161417171383},"end":{"x":392.81630286084135,"y":56.05434286947116},"control1":{"x":486.1920651866994,"y":28.04161417171383},"control2":{"x":392.81630286084135,"y":56.05434286947116},"fill":false},{"type":2,"start":{"x":392.81630286084135,"y":56.05434286947116},"end":{"x":407.18369713915865,"y":103.94565713052884},"control1":{"x":392.81630286084135,"y":56.05434286947116},"control2":{"x":407.18369713915865,"y":103.94565713052884},"fill":false},{"type":2,"start":{"x":407.18369713915865,"y":103.94565713052884},"end":{"x":459.78543838493226,"y":88.16513475679676},"control1":{"x":407.18369713915865,"y":103.94565713052884},"control2":{"x":459.78543838493226,"y":88.16513475679676},"fill":false},{"type":2,"start":{"x":459.78543838493226,"y":88.16513475679676},"end":{"x":500.97116970978556,"y":108.96345593009232},"control1":{"x":478.9419640893553,"y":82.41817704546986},"control2":{"x":492.67054119763975,"y":89.35095076990171},"fill":false},{"type":2,"start":{"x":500.97116970978556,"y":108.96345593009232},"end":{"x":477.81957996913513,"y":538.4661815839503},"control1":{"x":559.9656245394892,"y":248.35399100550023},"control2":{"x":545.7854308260648,"y":404.996482151837},"fill":false},{"type":2,"start":{"x":477.81957996913513,"y":538.4661815839503},"end":{"x":522.1804200308649,"y":561.5338184160497},"control1":{"x":477.81957996913513,"y":538.4661815839503},"control2":{"x":522.1804200308649,"y":561.5338184160497},"fill":false}],"preview":[{"type":2,"start":{"x":52.21804200308649,"y":23.846618158395028},"end":{"x":53.68987353047299,"y":73.09511209071769},"control1":{"x":60.13086038690956,"y":39.387290860009834},"control2":{"x":60.76109441312142,"y":57.12340579237926},"fill":false},{"type":2,"start":{"x":53.68987353047299,"y":73.09511209071769},"end":{"x":48.61920651866994,"y":77.19583858282863},"control1":{"x":52.22508142637993,"y":76.40362552325767},"control2":{"x":50.534859089112246,"y":77.77053435396131},"fill":false},{"type":2,"start":{"x":48.61920651866994,"y":77.19583858282863},"end":{"x":39.28163028608414,"y":74.39456571305288},"control1":{"x":48.61920651866994,"y":77.19583858282863},"control2":{"x":39.28163028608414,"y":74.39456571305288},"fill":false},{"type":2,"start":{"x":39.28163028608414,"y":74.39456571305288},"end":{"x":40.71836971391587,"y":69.60543428694712},"control1":{"x":39.28163028608414,"y":74.39456571305288},"control2":{"x":40.71836971391587,"y":69.60543428694712},"fill":false},{"type":2,"start":{"x":40.71836971391587,"y":69.60543428694712},"end":{"x":45.97854383849323,"y":71.18348652432033},"control1":{"x":40.71836971391587,"y":69.60543428694712},"control2":{"x":45.97854383849323,"y":71.18348652432033},"fill":false},{"type":2,"start":{"x":45.97854383849323,"y":71.18348652432033},"end":{"x":50.09711697097856,"y":69.10365440699077},"control1":{"x":47.89419640893553,"y":71.75818229545301},"control2":{"x":49.267054119763976,"y":71.06490492300983},"fill":false},{"type":2,"start":{"x":50.09711697097856,"y":69.10365440699077},"end":{"x":47.78195799691352,"y":26.153381841604972},"control1":{"x":55.996562453948926,"y":55.16460089944998},"control2":{"x":54.57854308260649,"y":39.50035178481631},"fill":false},{"type":2,"start":{"x":47.78195799691352,"y":26.153381841604972},"end":{"x":52.21804200308649,"y":23.846618158395028},"control1":{"x":47.78195799691352,"y":26.153381841604972},"control2":{"x":52.21804200308649,"y":23.846618158395028},"fill":false}]}]}},{"uuid":"EAzM7DXPaVkNGKf3hv008","type":"system","name":"斜钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"VNNrHKuO8x-OyHHpuJWl3","name":"斜-水平延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"5Jy87d3PvXL8GkSY7YGwA","name":"斜-竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"sErW4HDSAgJDZFxK7qOpL","name":"斜-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"CDvhbHKtcZ4z5WhtCxMzq","name":"斜-弯曲度","type":0,"value":200,"min":0,"max":500},{"uuid":"vaoIGBFVtBbFqGt55emMA","name":"钩-水平延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"hkoy9UMBSjHKC2OilMOn3","name":"钩-竖直延伸","type":0,"value":100,"min":0,"max":300},{"uuid":"CP9N97ldWDZ41xVxzD-IC","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"JbfdqGY6TqHkbBzNyG-5K","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"bdMzGeQ4mJBzEFyLLCJbh","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"psOZhJnuAVk9A3Ykhss36","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"p4lPhY-YDh3F93JcI1QXB","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"aXcLTHXPocLpfSEEoPa7f","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"RNtj6VhFDqf5cIoKPxB2z","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"ayP_EXevfOOKUc-zQlgLO","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_EAzM7DXPaVkNGKf3hv008 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 350\nconst y0 = 250\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  xie_horizonalSpan: glyph.getParam('斜-水平延伸'),\n  xie_verticalSpan: glyph.getParam('斜-竖直延伸'),\n  xie_bendCursor: glyph.getParam('斜-弯曲游标'),\n  xie_bendDegree: glyph.getParam('斜-弯曲度') + 30 * global_params.bending_degree,\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'xie_bend': {\n      jointsMap['xie_bend'] = {\n        x: glyph.tempData['xie_bend'].x + deltaX,\n        y: glyph.tempData['xie_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'xie_end': {\n      jointsMap['xie_end'] = {\n        x: glyph.tempData['xie_end'].x + deltaX,\n        y: glyph.tempData['xie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['xie_start'], jointsMap['xie_end'])\n      jointsMap['xie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['xie_end'] = {\n        x: glyph.tempData['xie_end'].x + deltaX,\n        y: glyph.tempData['xie_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['xie_start'], jointsMap['xie_end'])\n      jointsMap['xie_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { xie_bendCursor: bendCursor, xie_bendDegree: bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('斜-水平延伸', _params.xie_horizonalSpan)\n  glyph.setParam('斜-竖直延伸', _params.xie_verticalSpan)\n  glyph.setParam('斜-弯曲游标', _params.xie_bendCursor)\n  glyph.setParam('斜-弯曲度', _params.xie_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { xie_start, xie_end, xie_bend, gou_start, gou_end } = jointsMap\n  const xie_horizonal_span_range = glyph.getParamRange('斜-水平延伸')\n  const xie_vertical_span_range = glyph.getParamRange('斜-竖直延伸')\n  const xie_bend_cursor_range = glyph.getParamRange('斜-弯曲游标')\n  const xie_bend_degree_range = glyph.getParamRange('斜-弯曲度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const xie_horizonalSpan = range(xie_end.x - xie_start.x, xie_horizonal_span_range)\n  const xie_verticalSpan = range(xie_end.y - xie_start.y, xie_vertical_span_range)\n  const xie_data = FP.distanceAndFootPoint(xie_start, xie_end, xie_bend)\n  const xie_bendCursor = range(xie_data.percentageFromA, xie_bend_cursor_range)\n  const xie_bendDegree = range(xie_data.distance, xie_bend_degree_range)\n  const gou_horizonalSpan = range(gou_end.x - gou_start.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_start.y - gou_end.y, gou_vertical_span_range)\n  return {\n    xie_horizonalSpan,\n    xie_verticalSpan,\n    xie_bendCursor,\n    xie_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    xie_horizonalSpan,\n    xie_verticalSpan,\n    xie_bendCursor,\n    xie_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  } = params\n\n  // 斜\n  const xie_start = new FP.Joint(\n    'xie_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const xie_end = new FP.Joint(\n    'xie_end',\n    {\n      x: xie_start.x + xie_horizonalSpan,\n      y: xie_start.y + xie_verticalSpan,\n    },\n  )\n\n  const xie_length = distance(xie_start, xie_end)\n  const xie_cursor_x = xie_start.x + xie_bendCursor * xie_horizonalSpan\n  const xie_cursor_y = xie_start.y + xie_bendCursor * xie_verticalSpan\n  const xie_angle = Math.atan2(xie_verticalSpan, xie_horizonalSpan)\n\n  const xie_bend = new FP.Joint(\n    'xie_bend',\n    {\n      x: xie_cursor_x - xie_bendDegree * Math.sin(xie_angle),\n      y: xie_cursor_y + xie_bendDegree * Math.cos(xie_angle),\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: xie_start.x + xie_horizonalSpan,\n      y: xie_start.y + xie_verticalSpan,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x + gou_horizonalSpan,\n      y: gou_start.y - gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(xie_start)\n  glyph.addJoint(xie_end)\n  glyph.addJoint(xie_bend)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    xie_start,\n    xie_bend,\n    xie_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(xie_start, xie_bend))\n  glyph.addRefLine(refline(xie_bend, xie_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    xie_start,\n    xie_bend,\n    xie_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_xie_curves, out_xie_points, in_xie_curves, in_xie_points } = FP.getCurveContours('xie', { xie_start, xie_bend, xie_end }, weight, {\n    unticlockwise: true,   \n  })\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: in_corner_xie_gou, corner_index: in_corner_index_xie_gou } = FP.getIntersection(\n    { type: 'curve', points: in_xie_points },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_xie_gou } = FP.getIntersection(\n    { type: 'line', start: out_xie_curves[out_xie_curves.length - 1].control2, end: out_xie_curves[out_xie_curves.length - 1].end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  let { curves: in_xie_curves_final } = FP.fitCurvesByPoints(in_xie_points.slice(0, in_corner_index_xie_gou))\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius = 30 * bending_degree\n  let out_radius = 30 * bending_degree\n  // 如果in_radius超出钩或弯的长度，取钩或弯的最小长度\n  const in_radius_min_length = Math.min(\n    getDistance(in_corner_index_xie_gou, in_gou_end),\n    getDistance(in_corner_index_xie_gou, in_xie_curves_final[0].start),\n  )\n  const out_radius_min_length = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_xie_curves[0].start, out_xie_curves[out_xie_curves.length - 1].end),\n  )\n  if (in_radius >= in_radius_min_length) {\n    in_radius = in_radius_min_length\n  }\n  if (out_radius >= out_radius_min_length) {\n    out_radius = out_radius_min_length\n  }\n  const in_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(in_xie_curves_final), in_radius, true)\n  const in_radius_control = FP.getIntersection(\n    { type: 'line', start: in_radius_data.tangent.start, end: in_radius_data.tangent.end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  ).corner\n  const in_radius_start = in_radius_data.point\n  const in_radius_end = getRadiusPoint({\n    start: in_radius_control,\n    end: in_gou_end,\n    radius: in_radius,\n  })\n  const out_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(out_xie_curves), out_radius, true)\n  const out_radius_control = FP.getIntersection(\n    { type: 'line', start: out_radius_data.tangent.start, end: out_radius_data.tangent.end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  ).corner\n  const out_radius_start = out_radius_data.point\n  const out_radius_end = getRadiusPoint({\n    start: out_radius_control,\n    end: out_gou_end,\n    radius: out_radius,\n  })\n  in_xie_curves_final = in_radius_data.final_curves\n  const out_xie_curves_final = out_radius_data.final_curves\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）侧轮廓\n  pen.moveTo(out_xie_curves_final[0].start.x, out_xie_curves_final[0].start.y)\n  for (let i = 0; i < out_xie_curves_final.length; i++) {\n    const curve = out_xie_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  // 绘制外侧圆角\n  pen.quadraticBezierTo(out_radius_control.x, out_radius_control.y, out_radius_end.x, out_radius_end.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制右侧（内侧）侧轮廓\n  // 绘制内侧圆角\n  pen.lineTo(in_radius_end.x, in_radius_end.y)\n  pen.quadraticBezierTo(in_radius_control.x, in_radius_control.y, in_radius_start.x, in_radius_start.y)\n  for (let i = in_xie_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_xie_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_xie_curves[0].start.x, out_xie_curves[0].start.y)\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":350,"_y":250,"uuid":"6KkDGtTgbb-Bq4KRZhoE3","name":"xie_start"},{"_x":650,"_y":750,"uuid":"39n-S6LHr3WD4pbIx_H5v","name":"xie_end"},{"_x":302.77662708611484,"_y":618.3340237483311,"uuid":"vjGmx3WawNY9yuQ5pNzai","name":"xie_bend"},{"_x":650,"_y":750,"uuid":"M5pANbaojqngGif2gsaHJ","name":"gou_start"},{"_x":750,"_y":650,"uuid":"_GtPVAb9j5g3Q2q5BCKW4","name":"gou_end"}],"_reflines":[{"name":"xie_start-xie_bend","start":"xie_start","end":"xie_bend"},{"name":"xie_bend-xie_end","start":"xie_bend","end":"xie_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"kZV1v-WII6KW16pfGeinx","type":"anchor","x":325.20296740239945,"y":246.8208217487007,"origin":null},{"uuid":"A78Ov-9yyY3vDx6w2xb5I","type":"control","x":296.3243840274173,"y":490.86532461873065,"origin":"kZV1v-WII6KW16pfGeinx"},{"uuid":"XT3wLHey--mXghxCcR8YD","type":"control","x":385.3026185594589,"y":662.3364652469344,"origin":"_6Op3HaEa-obLkmrsFGNt"},{"uuid":"_6Op3HaEa-obLkmrsFGNt","type":"anchor","x":612.6610358232396,"y":761.7730616853535,"origin":null},{"uuid":"hW3svs0VFQfsWnUIAYbgV","type":"control","x":640.9171933041521,"y":774.1310652382639,"origin":"_6Op3HaEa-obLkmrsFGNt"},{"uuid":"JxiMORWmGdXEAdqKE_Rvz","type":"control","x":662.1163398564737,"y":773.2389992028537,"origin":"m-5RfMhufuioifT4LoJka"},{"uuid":"m-5RfMhufuioifT4LoJka","type":"anchor","x":676.2584754802047,"y":759.0968635791228,"origin":null},{"uuid":"OAjP96yZaah21ErDQb84y","type":"control","x":676.2584754802047,"y":759.0968635791228,"origin":"m-5RfMhufuioifT4LoJka"},{"uuid":"zRllKBTFENdulAODOr_n6","type":"control","x":767.6776695296637,"y":667.6776695296637,"origin":"AZGrb4BZPROkZHE-VKmmq"},{"uuid":"AZGrb4BZPROkZHE-VKmmq","type":"anchor","x":767.6776695296637,"y":667.6776695296637,"origin":null},{"uuid":"i2A_vk99eF8994xYQ3tc1","type":"control","x":767.6776695296637,"y":667.6776695296637,"origin":"AZGrb4BZPROkZHE-VKmmq"},{"uuid":"aKXP-E1yv4tXp1I7aRLYj","type":"control","x":732.3223304703363,"y":632.3223304703363,"origin":"n8Z3u4FVSB7102Stq9WG4"},{"uuid":"n8Z3u4FVSB7102Stq9WG4","type":"anchor","x":732.3223304703363,"y":632.3223304703363,"origin":null},{"uuid":"DO80a9pziKqCgHKszbRMm","type":"control","x":732.3223304703363,"y":632.3223304703363,"origin":"n8Z3u4FVSB7102Stq9WG4"},{"uuid":"xKPn6S2dYbphgg6FM56v6","type":"control","x":664.0746419676643,"y":700.5700189730084,"origin":"Tr5j_nfXTseE2bgqKXPcZ"},{"uuid":"Tr5j_nfXTseE2bgqKXPcZ","type":"anchor","x":664.0746419676643,"y":700.5700189730084,"origin":null},{"uuid":"K51aDIgTmECQw-eInnSa4","type":"control","x":649.9325063439334,"y":714.7121545967393,"origin":"Tr5j_nfXTseE2bgqKXPcZ"},{"uuid":"4qWgMnB4E1jt44amdRE_L","type":"control","x":631.4666216359803,"y":716.2308546867226,"origin":"TpvNCWzVF1Kbd6ygQpwvb"},{"uuid":"TpvNCWzVF1Kbd6ygQpwvb","type":"anchor","x":608.6769878438053,"y":705.1261192429586,"origin":null},{"uuid":"R1VObfFlGUu9Mxspl-twf","type":"control","x":418.2747301534705,"y":612.3485556002925,"origin":"TpvNCWzVF1Kbd6ygQpwvb"},{"uuid":"1mVm0eGAs_nrypK4R40nx","type":"control","x":350.3085124244363,"y":459.5392114831404,"origin":"6viVp3LjKMxWySvhKEDtY"},{"uuid":"6viVp3LjKMxWySvhKEDtY","type":"anchor","x":374.79703259760055,"y":253.1791782512993,"origin":null},{"uuid":"Q8XcLuTOOeRIhJIVwoRE0","type":"control","x":374.79703259760055,"y":253.1791782512993,"origin":"6viVp3LjKMxWySvhKEDtY"},{"uuid":"uAe2K2T82JsVhrofm6V09","type":"control","x":325.20296740239945,"y":246.8208217487007,"origin":"6kFmlasdLbHP4K70zu7ww"},{"uuid":"6kFmlasdLbHP4K70zu7ww","type":"anchor","x":325.20296740239945,"y":246.8208217487007,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":325.20296740239945,"y":553.1791782512993},"end":{"x":612.6610358232396,"y":38.22693831464653},"control1":{"x":296.3243840274173,"y":309.1346753812693},"control2":{"x":385.3026185594589,"y":137.66353475306562},"fill":false},{"type":2,"start":{"x":612.6610358232396,"y":38.22693831464653},"end":{"x":676.2584754802047,"y":40.90313642087722},"control1":{"x":640.9171933041521,"y":25.868934761736114},"control2":{"x":662.1163398564737,"y":26.761000797146266},"fill":false},{"type":2,"start":{"x":676.2584754802047,"y":40.90313642087722},"end":{"x":767.6776695296637,"y":132.32233047033628},"control1":{"x":676.2584754802047,"y":40.90313642087722},"control2":{"x":767.6776695296637,"y":132.32233047033628},"fill":false},{"type":2,"start":{"x":767.6776695296637,"y":132.32233047033628},"end":{"x":732.3223304703363,"y":167.67766952966372},"control1":{"x":767.6776695296637,"y":132.32233047033628},"control2":{"x":732.3223304703363,"y":167.67766952966372},"fill":false},{"type":2,"start":{"x":732.3223304703363,"y":167.67766952966372},"end":{"x":664.0746419676643,"y":99.42998102699164},"control1":{"x":732.3223304703363,"y":167.67766952966372},"control2":{"x":664.0746419676643,"y":99.42998102699164},"fill":false},{"type":2,"start":{"x":664.0746419676643,"y":99.42998102699164},"end":{"x":608.6769878438053,"y":94.87388075704143},"control1":{"x":649.9325063439334,"y":85.28784540326069},"control2":{"x":631.4666216359803,"y":83.76914531327736},"fill":false},{"type":2,"start":{"x":608.6769878438053,"y":94.87388075704143},"end":{"x":374.79703259760055,"y":546.8208217487007},"control1":{"x":418.2747301534705,"y":187.65144439970754},"control2":{"x":350.3085124244363,"y":340.46078851685957},"fill":false},{"type":2,"start":{"x":374.79703259760055,"y":546.8208217487007},"end":{"x":325.20296740239945,"y":553.1791782512993},"control1":{"x":374.79703259760055,"y":546.8208217487007},"control2":{"x":325.20296740239945,"y":553.1791782512993},"fill":false}],"preview":[{"type":2,"start":{"x":32.52029674023995,"y":24.68208217487007},"end":{"x":61.26610358232396,"y":76.17730616853535},"control1":{"x":29.63243840274173,"y":49.08653246187307},"control2":{"x":38.530261855945895,"y":66.23364652469344},"fill":false},{"type":2,"start":{"x":61.26610358232396,"y":76.17730616853535},"end":{"x":67.62584754802047,"y":75.90968635791228},"control1":{"x":64.09171933041522,"y":77.4131065238264},"control2":{"x":66.21163398564737,"y":77.32389992028538},"fill":false},{"type":2,"start":{"x":67.62584754802047,"y":75.90968635791228},"end":{"x":76.76776695296637,"y":66.76776695296637},"control1":{"x":67.62584754802047,"y":75.90968635791228},"control2":{"x":76.76776695296637,"y":66.76776695296637},"fill":false},{"type":2,"start":{"x":76.76776695296637,"y":66.76776695296637},"end":{"x":73.23223304703363,"y":63.23223304703363},"control1":{"x":76.76776695296637,"y":66.76776695296637},"control2":{"x":73.23223304703363,"y":63.23223304703363},"fill":false},{"type":2,"start":{"x":73.23223304703363,"y":63.23223304703363},"end":{"x":66.40746419676644,"y":70.05700189730084},"control1":{"x":73.23223304703363,"y":63.23223304703363},"control2":{"x":66.40746419676644,"y":70.05700189730084},"fill":false},{"type":2,"start":{"x":66.40746419676644,"y":70.05700189730084},"end":{"x":60.86769878438053,"y":70.51261192429585},"control1":{"x":64.99325063439333,"y":71.47121545967393},"control2":{"x":63.14666216359804,"y":71.62308546867227},"fill":false},{"type":2,"start":{"x":60.86769878438053,"y":70.51261192429585},"end":{"x":37.47970325976006,"y":25.317917825129932},"control1":{"x":41.82747301534705,"y":61.234855560029246},"control2":{"x":35.03085124244363,"y":45.95392114831404},"fill":false},{"type":2,"start":{"x":37.47970325976006,"y":25.317917825129932},"end":{"x":32.52029674023995,"y":24.68208217487007},"control1":{"x":37.47970325976006,"y":25.317917825129932},"control2":{"x":32.52029674023995,"y":24.68208217487007},"fill":false}]}]}},{"uuid":"1Ro0lgA03339fN8JV6KkU","type":"system","name":"竖弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"FgtL-nxiSbca9GzrUoBoa","name":"竖-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"7xr5eLG118PHvv_KDoSbp","name":"弯-长度","type":0,"value":260,"min":0,"max":1000},{"uuid":"-mbEKKTrorKTwB055QoAw","name":"钩-水平延伸","type":0,"value":25,"min":-150,"max":150},{"uuid":"xQYB2zefEA0KNKk79v_Ia","name":"钩-竖直延伸","type":0,"value":80,"min":0,"max":200},{"uuid":"iLIUa9p-yUvthNBRktPFe","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"dmldcszTWJxWubur6m9Ay","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"EHCn7EJT73LRUeEllaIDS","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"PFmxxsmdKkxUahWl9Eff4","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"7IssG40lcMCrQrhYY5Frd","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"duGpYRGApWZsh7FLq1Uy1","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"IIa4h5afxtF7GlDp4Xjt6","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"1CeqIuOJn6fcC6Z1mrSQf","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_1Ro0lgA03339fN8JV6KkU (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 370\nconst y0 = 250\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  wan_length: glyph.getParam('弯-长度'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2) => {\n  return {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('弯-长度', _params.wan_length)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, wan_start, wan_end, gou_start, gou_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const wan_length_range = glyph.getParamRange('弯-长度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const wan_length = range(wan_end.x - wan_start.x, wan_length_range)\n  const gou_horizonalSpan = range(gou_end.x - gou_start.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_start.y - gou_end.y, gou_vertical_span_range)\n  return {\n    shu_length,\n    wan_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    wan_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  } = params\n\n  // 竖\n  const shu_start = new FP.Joint(\n    'shu_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end = new FP.Joint(\n    'shu_end',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x + gou_horizonalSpan,\n      y: gou_start.y - gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(wan_start, wan_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_wan_start, out_wan_end, in_wan_start, in_wan_end } = FP.getLineContours('wan', { wan_start, wan_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: in_corner_shu_wan } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  )\n  const { corner: out_corner_shu_wan } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  )\n  let { corner: in_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  let { corner: out_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n\n  // 计算竖弯拐角处内外圆角相关的点与数据\n  let in_radius_shu_wan = 80 * bending_degree\n  let out_radius_shu_wan = 80 * bending_degree\n  // 如果in_radius超出竖或弯长度，取竖或弯的最小长度\n  const in_radius_min_length_shu_wan = Math.min(\n    getDistance(in_corner_shu_wan, in_shu_start),\n    getDistance(in_corner_shu_wan, in_corner_wan_gou),\n  )\n  const out_radius_min_length_shu_wan = Math.min(\n    getDistance(shu_start, shu_end),\n    getDistance(wan_start, wan_end),\n  )\n  if (in_radius_shu_wan >= in_radius_min_length_shu_wan) {\n    in_radius_shu_wan = in_radius_min_length_shu_wan\n  }\n  if (out_radius_shu_wan >= out_radius_min_length_shu_wan) {\n    out_radius_shu_wan = out_radius_min_length_shu_wan\n  }\n  const in_radius_start_shu_wan = {\n    x: in_corner_shu_wan.x,\n    y: in_corner_shu_wan.y - in_radius_shu_wan,\n  }\n  const in_radius_end_shu_wan = {\n    x: in_corner_shu_wan.x + in_radius_shu_wan,\n    y: in_corner_shu_wan.y,\n  }\n  const out_radius_start_shu_wan = {\n    x: out_shu_end.x,\n    y: out_shu_end.y - out_radius_shu_wan,\n  }\n  const out_radius_end_shu_wan = {\n    x: out_wan_start.x + out_radius_shu_wan,\n    y: out_wan_start.y,\n  }\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius_wan_gou = 30 * bending_degree\n  let out_radius_wan_gou = 30 * bending_degree\n  // 如果in_radius超出弯或钩的长度，取弯或钩的最小长度\n  const in_radius_min_length_wan_gou = Math.min(\n    getDistance(in_corner_wan_gou, in_gou_end),\n    getDistance(in_corner_wan_gou, in_radius_end_shu_wan),\n  )\n  const out_radius_min_length_wan_gou = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_wan_end, out_radius_end_shu_wan),\n  )\n  if (in_radius_wan_gou >= in_radius_min_length_wan_gou) {\n    in_radius_wan_gou = in_radius_min_length_wan_gou\n  }\n  if (out_radius_wan_gou >= out_radius_min_length_wan_gou) {\n    out_radius_wan_gou = out_radius_min_length_wan_gou\n  }\n  const in_radius_start_wan_gou = {\n    x: in_corner_wan_gou.x - in_radius_wan_gou,\n    y: in_corner_wan_gou.y,\n  }\n  const in_radius_end_wan_gou = getRadiusPoint({\n    start: in_corner_wan_gou,\n    end: in_gou_end,\n    radius: in_radius_wan_gou,\n  })\n  const out_radius_start_wan_gou = {\n    x: out_wan_end.x - out_radius_wan_gou,\n    y: out_wan_end.y,\n  }\n  const out_radius_end_wan_gou = getRadiusPoint({\n    start: out_gou_start,\n    end: out_gou_end,\n    radius: out_radius_wan_gou,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  // 绘制外侧竖弯圆角\n  pen.lineTo(out_radius_start_shu_wan.x, out_radius_start_shu_wan.y)\n  pen.quadraticBezierTo(out_corner_shu_wan.x, out_corner_shu_wan.y, out_radius_end_shu_wan.x, out_radius_end_shu_wan.y)\n  // 绘制外侧弯钩圆角\n  pen.lineTo(out_radius_start_wan_gou.x, out_radius_start_wan_gou.y)\n  pen.quadraticBezierTo(out_corner_wan_gou.x, out_corner_wan_gou.y, out_radius_end_wan_gou.x, out_radius_end_wan_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  // 绘制内侧弯钩圆角\n  pen.lineTo(in_radius_end_wan_gou.x, in_radius_end_wan_gou.y)\n  pen.quadraticBezierTo(in_corner_wan_gou.x, in_corner_wan_gou.y, in_radius_start_wan_gou.x, in_radius_start_wan_gou.y)\n  // 绘制内侧竖弯圆角\n  pen.lineTo(in_radius_end_shu_wan.x, in_radius_end_shu_wan.y)\n  pen.quadraticBezierTo(in_corner_shu_wan.x, in_corner_shu_wan.y, in_radius_start_shu_wan.x, in_radius_start_shu_wan.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x + start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":370,"_y":250,"uuid":"TsNPAVmPsYoNcOKAVpOpg","name":"shu_start"},{"_x":370,"_y":750,"uuid":"K9p0hpSwbk3M1pUxdLFhE","name":"shu_end"},{"_x":370,"_y":750,"uuid":"5i-gsSjx2JnNr-xja7-8P","name":"wan_start"},{"_x":630,"_y":750,"uuid":"Nkl9H7L_ZUCpumztIjSfe","name":"wan_end"},{"_x":630,"_y":750,"uuid":"PKzm5b_7b4ufBmij341n4","name":"gou_start"},{"_x":655,"_y":670,"uuid":"O5jzP7GwnXNGNhMm45uKF","name":"gou_end"}],"_reflines":[{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"wan_start-wan_end","start":"wan_start","end":"wan_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"bEpEZc7TY6Ya6cTHQPl3p","type":"anchor","x":332.5,"y":250,"origin":null},{"uuid":"W2VAH-yLYcywW2NbdD2QW","type":"control","x":332.5,"y":250,"origin":"bEpEZc7TY6Ya6cTHQPl3p"},{"uuid":"zA-UBZbVdgvDmEonfnBMl","type":"control","x":332.5,"y":270,"origin":"tm0syy5_2Wiv8sLwfTBXc"},{"uuid":"tm0syy5_2Wiv8sLwfTBXc","type":"anchor","x":332.5,"y":270,"origin":null},{"uuid":"dec9f--1ebobh9sVQB_y7","type":"control","x":340.8333333333333,"y":270,"origin":"tm0syy5_2Wiv8sLwfTBXc"},{"uuid":"-ElibjqFNWj9fJWVcQbuw","type":"control","x":345,"y":276.6666666666667,"origin":"XyYKbe0kCeldjH_KoJSuS"},{"uuid":"XyYKbe0kCeldjH_KoJSuS","type":"anchor","x":345,"y":290,"origin":null},{"uuid":"w9083M5VBflVnx7xBi8d3","type":"control","x":345,"y":290,"origin":"XyYKbe0kCeldjH_KoJSuS"},{"uuid":"Ey2UgBs5m1n-uui_opdwW","type":"control","x":345,"y":670,"origin":"1Qcvfxz6vuthb0s08g6oM"},{"uuid":"1Qcvfxz6vuthb0s08g6oM","type":"anchor","x":345,"y":670,"origin":null},{"uuid":"7VZtroKVzNLC7Js0iSRlv","type":"control","x":345,"y":740,"origin":"1Qcvfxz6vuthb0s08g6oM"},{"uuid":"b3rlkRWSwISTsUeRnB68t","type":"control","x":380,"y":775,"origin":"6DFfuXe_Cdq1sl66qWN4c"},{"uuid":"6DFfuXe_Cdq1sl66qWN4c","type":"anchor","x":450,"y":775,"origin":null},{"uuid":"_Dvi7xIjzseWPHf0HKszh","type":"control","x":450,"y":775,"origin":"6DFfuXe_Cdq1sl66qWN4c"},{"uuid":"CiOnlpDSzmeQxrpJuBhNR","type":"control","x":600,"y":775,"origin":"iTJ7L0pL1Xx6aFYL5vpOZ"},{"uuid":"iTJ7L0pL1Xx6aFYL5vpOZ","type":"anchor","x":600,"y":775,"origin":null},{"uuid":"XJOZsAAF3FzyoI2AxRYnL","type":"control","x":632.2531818898336,"y":775,"origin":"iTJ7L0pL1Xx6aFYL5vpOZ"},{"uuid":"9X8BvSsChco_2zYMYneqR","type":"control","x":653.1899316381516,"y":759.6074918291159,"origin":"jjbrBlbDompLaCVCo89V7"},{"uuid":"jjbrBlbDompLaCVCo89V7","type":"anchor","x":662.8102492449541,"y":728.8224754873478,"origin":null},{"uuid":"UXdVUIDFZQnUBYevj7VA5","type":"control","x":662.8102492449541,"y":728.8224754873478,"origin":"jjbrBlbDompLaCVCo89V7"},{"uuid":"_7PCld06cFIDpxEDdVvMC","type":"control","x":678.8619994508757,"y":677.4568748283987,"origin":"Nx3TFibOIrrlwCQSkf-g3"},{"uuid":"Nx3TFibOIrrlwCQSkf-g3","type":"anchor","x":678.8619994508757,"y":677.4568748283987,"origin":null},{"uuid":"dr8WN9YNL54uPpHus9PW1","type":"control","x":678.8619994508757,"y":677.4568748283987,"origin":"Nx3TFibOIrrlwCQSkf-g3"},{"uuid":"_vvfV0NQN7yKUUfBrjxQK","type":"control","x":631.1380005491243,"y":662.5431251716013,"origin":"8dRlm-n2GiYvjqd0W_Elh"},{"uuid":"8dRlm-n2GiYvjqd0W_Elh","type":"anchor","x":631.1380005491243,"y":662.5431251716013,"origin":null},{"uuid":"xGR6eE8MOedkUljTPO_IG","type":"control","x":631.1380005491243,"y":662.5431251716013,"origin":"8dRlm-n2GiYvjqd0W_Elh"},{"uuid":"8rYZ4zFkfgqc435Lt0w-w","type":"control","x":620.5684769593281,"y":696.3656006589491,"origin":"BLPFnGKUMnbjOqqWM7Yvx"},{"uuid":"BLPFnGKUMnbjOqqWM7Yvx","type":"anchor","x":620.5684769593281,"y":696.3656006589491,"origin":null},{"uuid":"Mdb5L4y1GBfxf7LgKPAxA","type":"control","x":614.6029770966092,"y":715.4552002196497,"origin":"BLPFnGKUMnbjOqqWM7Yvx"},{"uuid":"HF0MXkhbjlLXoUJy5btQ5","type":"control","x":601.6202271652496,"y":725,"origin":"40woczmX3cf8g_OrfDKgM"},{"uuid":"40woczmX3cf8g_OrfDKgM","type":"anchor","x":581.6202271652496,"y":725,"origin":null},{"uuid":"O-nU4bSs2jp809SBrg0aP","type":"control","x":581.6202271652496,"y":725,"origin":"40woczmX3cf8g_OrfDKgM"},{"uuid":"jwTw5RxvoFpS0NASxxqII","type":"control","x":475,"y":725,"origin":"WQ5YTdSdIpCLQh1mFKa2-"},{"uuid":"WQ5YTdSdIpCLQh1mFKa2-","type":"anchor","x":475,"y":725,"origin":null},{"uuid":"PL4ayP-EMPpuEQjdH34D2","type":"control","x":421.6666666666667,"y":725,"origin":"WQ5YTdSdIpCLQh1mFKa2-"},{"uuid":"bZD2cuKy3KAqXdBR4ILvG","type":"control","x":395,"y":698.3333333333334,"origin":"BkbpjkFuzCq4emDXnpS6N"},{"uuid":"BkbpjkFuzCq4emDXnpS6N","type":"anchor","x":395,"y":645,"origin":null},{"uuid":"J7mcanNlt3VexxhLCM60Q","type":"control","x":395,"y":645,"origin":"BkbpjkFuzCq4emDXnpS6N"},{"uuid":"pMSEX23cpWjv814Ohc81b","type":"control","x":395,"y":290,"origin":"TNrM7gzFM4XjW5dWU3ltT"},{"uuid":"TNrM7gzFM4XjW5dWU3ltT","type":"anchor","x":395,"y":290,"origin":null},{"uuid":"OWkKLtlSUZ5aht2rGr7XV","type":"control","x":395,"y":276.6666666666667,"origin":"TNrM7gzFM4XjW5dWU3ltT"},{"uuid":"mZN0rQO2-tZ4zvvtgJceA","type":"control","x":399.1666666666667,"y":270,"origin":"AIxbRg76z2Rfe3L1eFzGc"},{"uuid":"AIxbRg76z2Rfe3L1eFzGc","type":"anchor","x":407.5,"y":270,"origin":null},{"uuid":"-NTFkHuevuB6OX5oeUilm","type":"control","x":407.5,"y":270,"origin":"AIxbRg76z2Rfe3L1eFzGc"},{"uuid":"IGZKSXniJjIIJ3a-EZKLx","type":"control","x":407.5,"y":250,"origin":"e7rtoyO_m3mTNGaYDYsuy"},{"uuid":"e7rtoyO_m3mTNGaYDYsuy","type":"anchor","x":407.5,"y":250,"origin":null},{"uuid":"4v9HBGZuGboqaQIgVWBQh","type":"control","x":407.5,"y":250,"origin":"e7rtoyO_m3mTNGaYDYsuy"},{"uuid":"PHdP4icV7uef2tZ3vZLgm","type":"control","x":332.5,"y":250,"origin":"eiIe38Dbg0_3_sfeGx_7E"},{"uuid":"eiIe38Dbg0_3_sfeGx_7E","type":"anchor","x":332.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":332.5,"y":550},"end":{"x":332.5,"y":530},"control1":{"x":332.5,"y":550},"control2":{"x":332.5,"y":530},"fill":false},{"type":2,"start":{"x":332.5,"y":530},"end":{"x":345,"y":510},"control1":{"x":340.8333333333333,"y":530},"control2":{"x":345,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":345,"y":510},"end":{"x":345,"y":130},"control1":{"x":345,"y":510},"control2":{"x":345,"y":130},"fill":false},{"type":2,"start":{"x":345,"y":130},"end":{"x":450,"y":25},"control1":{"x":345,"y":60},"control2":{"x":380,"y":25},"fill":false},{"type":2,"start":{"x":450,"y":25},"end":{"x":600,"y":25},"control1":{"x":450,"y":25},"control2":{"x":600,"y":25},"fill":false},{"type":2,"start":{"x":600,"y":25},"end":{"x":662.8102492449541,"y":71.17752451265221},"control1":{"x":632.2531818898336,"y":25},"control2":{"x":653.1899316381516,"y":40.39250817088407},"fill":false},{"type":2,"start":{"x":662.8102492449541,"y":71.17752451265221},"end":{"x":678.8619994508757,"y":122.54312517160133},"control1":{"x":662.8102492449541,"y":71.17752451265221},"control2":{"x":678.8619994508757,"y":122.54312517160133},"fill":false},{"type":2,"start":{"x":678.8619994508757,"y":122.54312517160133},"end":{"x":631.1380005491243,"y":137.45687482839867},"control1":{"x":678.8619994508757,"y":122.54312517160133},"control2":{"x":631.1380005491243,"y":137.45687482839867},"fill":false},{"type":2,"start":{"x":631.1380005491243,"y":137.45687482839867},"end":{"x":620.5684769593281,"y":103.63439934105088},"control1":{"x":631.1380005491243,"y":137.45687482839867},"control2":{"x":620.5684769593281,"y":103.63439934105088},"fill":false},{"type":2,"start":{"x":620.5684769593281,"y":103.63439934105088},"end":{"x":581.6202271652496,"y":75},"control1":{"x":614.6029770966092,"y":84.54479978035033},"control2":{"x":601.6202271652496,"y":75},"fill":false},{"type":2,"start":{"x":581.6202271652496,"y":75},"end":{"x":475,"y":75},"control1":{"x":581.6202271652496,"y":75},"control2":{"x":475,"y":75},"fill":false},{"type":2,"start":{"x":475,"y":75},"end":{"x":395,"y":155},"control1":{"x":421.6666666666667,"y":75},"control2":{"x":395,"y":101.66666666666663},"fill":false},{"type":2,"start":{"x":395,"y":155},"end":{"x":395,"y":510},"control1":{"x":395,"y":155},"control2":{"x":395,"y":510},"fill":false},{"type":2,"start":{"x":395,"y":510},"end":{"x":407.5,"y":530},"control1":{"x":395,"y":523.3333333333333},"control2":{"x":399.1666666666667,"y":530},"fill":false},{"type":2,"start":{"x":407.5,"y":530},"end":{"x":407.5,"y":550},"control1":{"x":407.5,"y":530},"control2":{"x":407.5,"y":550},"fill":false},{"type":2,"start":{"x":407.5,"y":550},"end":{"x":332.5,"y":550},"control1":{"x":407.5,"y":550},"control2":{"x":332.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":33.25,"y":25},"end":{"x":33.25,"y":27},"control1":{"x":33.25,"y":25},"control2":{"x":33.25,"y":27},"fill":false},{"type":2,"start":{"x":33.25,"y":27},"end":{"x":34.5,"y":29},"control1":{"x":34.083333333333336,"y":27},"control2":{"x":34.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":34.5,"y":29},"end":{"x":34.5,"y":67},"control1":{"x":34.5,"y":29},"control2":{"x":34.5,"y":67},"fill":false},{"type":2,"start":{"x":34.5,"y":67},"end":{"x":45,"y":77.5},"control1":{"x":34.5,"y":74},"control2":{"x":38,"y":77.5},"fill":false},{"type":2,"start":{"x":45,"y":77.5},"end":{"x":60,"y":77.5},"control1":{"x":45,"y":77.5},"control2":{"x":60,"y":77.5},"fill":false},{"type":2,"start":{"x":60,"y":77.5},"end":{"x":66.28102492449541,"y":72.88224754873478},"control1":{"x":63.225318188983366,"y":77.5},"control2":{"x":65.31899316381516,"y":75.9607491829116},"fill":false},{"type":2,"start":{"x":66.28102492449541,"y":72.88224754873478},"end":{"x":67.88619994508757,"y":67.74568748283987},"control1":{"x":66.28102492449541,"y":72.88224754873478},"control2":{"x":67.88619994508757,"y":67.74568748283987},"fill":false},{"type":2,"start":{"x":67.88619994508757,"y":67.74568748283987},"end":{"x":63.11380005491243,"y":66.25431251716013},"control1":{"x":67.88619994508757,"y":67.74568748283987},"control2":{"x":63.11380005491243,"y":66.25431251716013},"fill":false},{"type":2,"start":{"x":63.11380005491243,"y":66.25431251716013},"end":{"x":62.05684769593282,"y":69.63656006589491},"control1":{"x":63.11380005491243,"y":66.25431251716013},"control2":{"x":62.05684769593282,"y":69.63656006589491},"fill":false},{"type":2,"start":{"x":62.05684769593282,"y":69.63656006589491},"end":{"x":58.162022716524966,"y":72.5},"control1":{"x":61.46029770966092,"y":71.54552002196498},"control2":{"x":60.162022716524966,"y":72.5},"fill":false},{"type":2,"start":{"x":58.162022716524966,"y":72.5},"end":{"x":47.5,"y":72.5},"control1":{"x":58.162022716524966,"y":72.5},"control2":{"x":47.5,"y":72.5},"fill":false},{"type":2,"start":{"x":47.5,"y":72.5},"end":{"x":39.5,"y":64.5},"control1":{"x":42.16666666666667,"y":72.5},"control2":{"x":39.5,"y":69.83333333333334},"fill":false},{"type":2,"start":{"x":39.5,"y":64.5},"end":{"x":39.5,"y":29},"control1":{"x":39.5,"y":64.5},"control2":{"x":39.5,"y":29},"fill":false},{"type":2,"start":{"x":39.5,"y":29},"end":{"x":40.75,"y":27},"control1":{"x":39.5,"y":27.66666666666667},"control2":{"x":39.91666666666667,"y":27},"fill":false},{"type":2,"start":{"x":40.75,"y":27},"end":{"x":40.75,"y":25},"control1":{"x":40.75,"y":27},"control2":{"x":40.75,"y":25},"fill":false},{"type":2,"start":{"x":40.75,"y":25},"end":{"x":33.25,"y":25},"control1":{"x":40.75,"y":25},"control2":{"x":33.25,"y":25},"fill":false}]}]}},{"uuid":"TUu8IT6m-EDb_4flTKmNj","type":"system","name":"竖折折钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"a1ay8NYJ5qUpGQ5TfJt7D","name":"竖-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"5zo5XChgZpXWmkYyvXud0","name":"折1-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"bp_SFhxFWPGkWU0kBplHl","name":"折2-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"eyDkKZ-grUWJqXFyAKqiz","name":"折2-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"97oA3HFTwFPQCn6NCdGzj","name":"钩-水平延伸","type":0,"value":80,"min":0,"max":300},{"uuid":"_dayEDqVRsqKmRjg601G_","name":"钩-竖直延伸","type":0,"value":-60,"min":-300,"max":300},{"uuid":"-pdLUwmXN0qZszlPuLEqr","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"CtjMtPwCPF0-pSuuq5JxA","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"JN75u2PcdZORTyecVcl-L","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"PHGhiIHZVHhII0iUNzT2p","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"Hk_DmxfVxRKfA26BkcZjK","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"bJ8NMq8O3o22_q12k3ukE","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"igsvQoK5jukcEOiXfD-SO","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"t45aFbnn_cj7MzlWWlYvy","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_TUu8IT6m_EDb_4flTKmNj (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 250\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  zhe1_length: glyph.getParam('折1-长度'),\n  zhe2_horizonalSpan: glyph.getParam('折2-水平延伸'),\n  zhe2_verticalSpan: glyph.getParam('折2-竖直延伸'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x,\n        y: glyph.tempData['zhe1_start'].y + deltaY,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe1_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x,\n        y: glyph.tempData['zhe1_start'].y + deltaY,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe1_end': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe2_start': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe2_end': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('折1-长度', _params.zhe1_length)\n  glyph.setParam('折2-水平延伸', _params.zhe2_horizonalSpan)\n  glyph.setParam('折2-竖直延伸', _params.zhe2_verticalSpan)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, zhe1_start, zhe1_end, zhe2_start, zhe2_end, gou_start, gou_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const zhe1_length_range = glyph.getParamRange('折1-长度')\n  const zhe2_horizonal_span_range = glyph.getParamRange('折2-水平延伸')\n  const zhe2_vertical_span_range = glyph.getParamRange('折2-竖直延伸')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const zhe1_length = range(zhe1_end.x - zhe1_start.x, zhe1_length_range)\n  const zhe2_horizonalSpan = range(zhe2_start.x - zhe2_end.x, zhe2_horizonal_span_range)\n  const zhe2_verticalSpan = range(zhe2_end.y - zhe2_start.y, zhe2_vertical_span_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    shu_length,\n    zhe1_length,\n    zhe2_horizonalSpan,\n    zhe2_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    zhe1_length,\n    zhe2_horizonalSpan,\n    zhe2_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  let shu_start, shu_end\n  const shu_start_ref = new FP.Joint(\n    'shu_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end_ref = new FP.Joint(\n    'shu_end_ref',\n    {\n      x: shu_start_ref.x,\n      y: shu_start_ref.y + shu_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x - weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x - weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x + weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x + weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x,\n        y: shu_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(shu_start_ref)\n  glyph.addJoint(shu_end_ref)\n  glyph.addRefLine(refline(shu_start_ref, shu_end_ref, 'ref'))\n\n  // 折1\n  const zhe1_start = new FP.Joint(\n    'zhe1_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const zhe1_end = new FP.Joint(\n    'zhe1_end',\n    {\n      x: zhe1_start.x + zhe1_length,\n      y: zhe1_start.y,\n    },\n  )\n\n  // 折2\n  const zhe2_start = new FP.Joint(\n    'zhe2_start',\n    {\n      x: zhe1_start.x + zhe1_length,\n      y: zhe1_start.y,\n    },\n  )\n  const zhe2_end = new FP.Joint(\n    'zhe2_end',\n    {\n      x: zhe2_start.x - zhe2_horizonalSpan,\n      y: zhe2_start.y + zhe2_verticalSpan,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: zhe2_start.x - zhe2_horizonalSpan,\n      y: zhe2_start.y + zhe2_verticalSpan,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(zhe1_start)\n  glyph.addJoint(zhe1_end)\n  glyph.addJoint(zhe2_start)\n  glyph.addJoint(zhe2_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(zhe1_start, zhe1_end))\n  glyph.addRefLine(refline(zhe2_start, zhe2_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight)\n  const { out_zhe1_start, out_zhe1_end, in_zhe1_start, in_zhe1_end } = FP.getLineContours('zhe1', { zhe1_start, zhe1_end }, weight)\n  const { out_zhe2_start, out_zhe2_end, in_zhe2_start, in_zhe2_end } = FP.getLineContours('zhe2', { zhe2_start, zhe2_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_shu_zhe1 } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n  )\n  const { corner: out_corner_shu_zhe1 } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n  )\n  const { corner: in_corner_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n  )\n  const { corner: out_corner_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n  )\n  const { corner: in_corner_zhe2_gou } = FP.getIntersection(\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_zhe2_gou } = FP.getIntersection(\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n\n  // 计算折1折2拐角处内外圆角相关的点与数据\n  let in_radius_zhe1_zhe2 = 60 * bending_degree\n  let out_radius_zhe1_zhe2 = 80 * bending_degree\n  // 如果in_radius超出折1或折2长度，取折1或折2的最小长度\n  const in_radius_min_length_zhe1_zhe2 = Math.min(\n    getDistance(in_corner_zhe1_zhe2, in_corner_shu_zhe1),\n    getDistance(in_corner_zhe1_zhe2, in_corner_zhe2_gou),\n  )\n  const out_radius_min_length_zhe1_zhe2 = Math.min(\n    getDistance(out_zhe1_end, out_corner_shu_zhe1),\n    getDistance(out_zhe2_start, out_zhe2_end),\n  )\n  if (in_radius_zhe1_zhe2 >= in_radius_min_length_zhe1_zhe2) {\n    in_radius_zhe1_zhe2 = in_radius_min_length_zhe1_zhe2\n  }\n  if (out_radius_zhe1_zhe2 >= out_radius_min_length_zhe1_zhe2) {\n    out_radius_zhe1_zhe2 = out_radius_min_length_zhe1_zhe2\n  }\n  const in_radius_start_zhe1_zhe2= {\n    x: in_corner_zhe1_zhe2.x - in_radius_zhe1_zhe2,\n    y: in_corner_zhe1_zhe2.y,\n  }\n  const in_radius_end_zhe1_zhe2 = getRadiusPoint({\n    start: in_corner_zhe1_zhe2,\n    end: in_corner_zhe2_gou,\n    radius: in_radius_zhe1_zhe2,\n  })\n  const out_radius_start_zhe1_zhe2 = {\n    x: out_corner_zhe1_zhe2.x - out_radius_zhe1_zhe2,\n    y: out_corner_zhe1_zhe2.y,\n  }\n  const out_radius_end_zhe1_zhe2 = getRadiusPoint({\n    start: out_corner_zhe1_zhe2,\n    end: out_corner_zhe2_gou,\n    radius: out_radius_zhe1_zhe2,\n  })\n\n  // 计算折2钩拐角处内外圆角相关的点与数据\n  let in_radius_zhe2_gou = 30 * bending_degree\n  let out_radius_zhe2_gou = 30 * bending_degree\n  // 如果in_radius超出折2或钩的长度，取折2或钩的最小长度\n  const in_radius_min_length_zhe2_gou = Math.min(\n    getDistance(in_corner_zhe2_gou, in_gou_end),\n    getDistance(in_corner_zhe2_gou, in_radius_end_zhe1_zhe2),\n  )\n  const out_radius_min_length_zhe2_gou = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_zhe2_end, out_radius_end_zhe1_zhe2),\n  )\n  if (in_radius_zhe2_gou >= in_radius_min_length_zhe2_gou) {\n    in_radius_zhe2_gou = in_radius_min_length_zhe2_gou\n  }\n  if (out_radius_zhe2_gou >= out_radius_min_length_zhe2_gou) {\n    out_radius_zhe2_gou = out_radius_min_length_zhe2_gou\n  }\n  const in_radius_start_zhe2_gou = getRadiusPoint({\n    start: in_corner_zhe2_gou,\n    end: in_corner_zhe1_zhe2,\n    radius: in_radius_zhe2_gou,\n  })\n  const in_radius_end_zhe2_gou = getRadiusPoint({\n    start: in_corner_zhe2_gou,\n    end: in_gou_end,\n    radius: in_radius_zhe2_gou,\n  })\n  const out_radius_start_zhe2_gou = getRadiusPoint({\n    start: out_zhe2_end,\n    end: out_radius_end_zhe1_zhe2,\n    radius: out_radius_zhe2_gou,\n  })\n  const out_radius_end_zhe2_gou = getRadiusPoint({\n    start: out_gou_start,\n    end: out_gou_end,\n    radius: out_radius_zhe2_gou,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_zhe1_start, out_corner_zhe1_zhe2, out_zhe2_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_zhe1_zhe2.x - corner_radius,\n      y: out_corner_zhe1_zhe2.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_zhe1_zhe2,\n      end: out_zhe2_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_zhe2_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  pen.lineTo(out_corner_shu_zhe1.x, out_corner_shu_zhe1.y)\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    // 绘制外侧折1折2圆角\n    pen.lineTo(out_radius_start_zhe1_zhe2.x, out_radius_start_zhe1_zhe2.y)\n    pen.quadraticBezierTo(out_corner_zhe1_zhe2.x, out_corner_zhe1_zhe2.y, out_radius_end_zhe1_zhe2.x, out_radius_end_zhe1_zhe2.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折2钩圆角\n  pen.lineTo(out_radius_start_zhe2_gou.x, out_radius_start_zhe2_gou.y)\n  pen.quadraticBezierTo(out_corner_zhe2_gou.x, out_corner_zhe2_gou.y, out_radius_end_zhe2_gou.x, out_radius_end_zhe2_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧折2钩圆角\n  pen.lineTo(in_radius_end_zhe2_gou.x, in_radius_end_zhe2_gou.y)\n  pen.quadraticBezierTo(in_corner_zhe2_gou.x, in_corner_zhe2_gou.y, in_radius_start_zhe2_gou.x, in_radius_start_zhe2_gou.y)\n  // 绘制内侧折1折2圆角\n  pen.lineTo(in_radius_end_zhe1_zhe2.x, in_radius_end_zhe1_zhe2.y)\n  pen.quadraticBezierTo(in_corner_zhe1_zhe2.x, in_corner_zhe1_zhe2.y, in_radius_start_zhe1_zhe2.x, in_radius_start_zhe1_zhe2.y)\n  pen.lineTo(in_corner_shu_zhe1.x, in_corner_shu_zhe1.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x - start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x - start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x + start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":250,"uuid":"x2ZGqpiRlkJnKAOyPU54_","name":"shu_start_ref"},{"_x":250,"_y":450,"uuid":"_cGt2PmNzRG9wg5ev1Otr","name":"shu_end_ref"},{"_x":250,"_y":250,"uuid":"vnNhqmGxerjtqcy5Q9ZDr","name":"shu_start"},{"_x":250,"_y":450,"uuid":"3mAV9KSMxWoGkFxZwPCy9","name":"shu_end"},{"_x":250,"_y":450,"uuid":"JS66loPfcSOYoksGdy03g","name":"zhe1_start"},{"_x":750,"_y":450,"uuid":"5p2hmfd6R_UsMmAbihiB5","name":"zhe1_end"},{"_x":750,"_y":450,"uuid":"IxNgyOmK4VTj8Ym_1AvI7","name":"zhe2_start"},{"_x":650,"_y":750,"uuid":"AcIcVhFhqo5iBOCJUqGYC","name":"zhe2_end"},{"_x":650,"_y":750,"uuid":"AwmR7OtXCkdLLoM08lR78","name":"gou_start"},{"_x":570,"_y":690,"uuid":"f3gPJRUwXDwjF9X7pDZje","name":"gou_end"}],"_reflines":[{"name":"shu_start_ref-shu_end_ref","start":"shu_start_ref","end":"shu_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"zhe1_start-zhe1_end","start":"zhe1_start","end":"zhe1_end"},{"name":"zhe2_start-zhe2_end","start":"zhe2_start","end":"zhe2_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"SpyBH3Af0UFzHjGSIiv1d","type":"anchor","x":287.5,"y":250,"origin":null},{"uuid":"d7ABTAJp3rhkB_rm2xARJ","type":"control","x":287.5,"y":250,"origin":"SpyBH3Af0UFzHjGSIiv1d"},{"uuid":"pPCXyl3OFo5JgAsV1BBRB","type":"control","x":287.5,"y":270,"origin":"T8RVyUFZEikbfETXfSPRW"},{"uuid":"T8RVyUFZEikbfETXfSPRW","type":"anchor","x":287.5,"y":270,"origin":null},{"uuid":"uW1asmhhAi-Vv8PXxqRsj","type":"control","x":279.1666666666667,"y":270,"origin":"T8RVyUFZEikbfETXfSPRW"},{"uuid":"2VmiuS0556g0P4AM9g6KH","type":"control","x":275,"y":276.6666666666667,"origin":"IAJ101XV3_yRa3buClqgJ"},{"uuid":"IAJ101XV3_yRa3buClqgJ","type":"anchor","x":275,"y":290,"origin":null},{"uuid":"zNLshCcXtdvR3cLTOsOnK","type":"control","x":275,"y":290,"origin":"IAJ101XV3_yRa3buClqgJ"},{"uuid":"7-Z-PJ7iQU496ObGzTz42","type":"control","x":275,"y":425,"origin":"vZDuY3DCN80hgVF8kuZKH"},{"uuid":"vZDuY3DCN80hgVF8kuZKH","type":"anchor","x":275,"y":425,"origin":null},{"uuid":"Q2J3Ep_08TozA_i1BZRv3","type":"control","x":275,"y":425,"origin":"vZDuY3DCN80hgVF8kuZKH"},{"uuid":"Mr4A45r4om0-7qoJLVB83","type":"control","x":699.1732125291746,"y":425,"origin":"xtqxnDIsvbd-2qLMrQuSO"},{"uuid":"xtqxnDIsvbd-2qLMrQuSO","type":"anchor","x":699.1732125291746,"y":425,"origin":null},{"uuid":"eS10YZ80y4QHoM_cDDHG1","type":"control","x":727.6773574088064,"y":425,"origin":"xtqxnDIsvbd-2qLMrQuSO"},{"uuid":"edysQII3PFhFRz6W8GIBh","type":"control","x":747.337711083126,"y":421.1019314355749,"origin":"nreqO-XUVkQ8C7cW0S1Zf"},{"uuid":"nreqO-XUVkQ8C7cW0S1Zf","type":"anchor","x":758.1542735521334,"y":413.3057943067247,"origin":null},{"uuid":"FbPwAYspxeEGB4q08hao5","type":"control","x":758.1542735521334,"y":413.3057943067247,"origin":"nreqO-XUVkQ8C7cW0S1Zf"},{"uuid":"MbrctrONcRY84kIFO6EqG","type":"control","x":787.3897877853217,"y":453.86790356550273,"origin":"tqedODnSAVeC-ed8pgfYD"},{"uuid":"tqedODnSAVeC-ed8pgfYD","type":"anchor","x":787.3897877853217,"y":453.86790356550273,"origin":null},{"uuid":"fxpnTO87W2QIoVOS32AET","type":"control","x":776.5732253163143,"y":461.66404069435293,"origin":"tqedODnSAVeC-ed8pgfYD"},{"uuid":"vcZwqohGHVFfeqvRybf37","type":"control","x":766.6580430530574,"y":479.0828123450374,"origin":"Eci6RjnU5IpYQj7II4sQ0"},{"uuid":"Eci6RjnU5IpYQj7II4sQ0","type":"anchor","x":757.6442409955512,"y":506.1242185175561,"origin":null},{"uuid":"c_1hgI-rfpZ5HgcIduAni","type":"control","x":757.6442409955512,"y":506.1242185175561,"origin":"Eci6RjnU5IpYQj7II4sQ0"},{"uuid":"N0DEx8aTGluQTYzyhkPMM","type":"control","x":683.203915431768,"y":729.4451952089055,"origin":"DFFcdPs102C8-mfkUudrm"},{"uuid":"DFFcdPs102C8-mfkUudrm","type":"anchor","x":683.203915431768,"y":729.4451952089055,"origin":null},{"uuid":"q_qSP_LGN49d7eFpVKRXp","type":"control","x":669.5669836335599,"y":770.3559906035298,"origin":"DFFcdPs102C8-mfkUudrm"},{"uuid":"5x7TSkNfM0yrNw01g1DmZ","type":"control","x":645.4990118229706,"y":777.8742588672279,"origin":"E7NMA8trl5M46Fp3PeLPv"},{"uuid":"E7NMA8trl5M46Fp3PeLPv","type":"anchor","x":611,"y":752,"origin":null},{"uuid":"eNAW5h341xMbtY5atKjNd","type":"control","x":611,"y":752,"origin":"E7NMA8trl5M46Fp3PeLPv"},{"uuid":"0lovReGIe_nS8jR8tt7Wc","type":"control","x":555,"y":710,"origin":"qTH_oYlznweMjjoF-VcpE"},{"uuid":"qTH_oYlznweMjjoF-VcpE","type":"anchor","x":555,"y":710,"origin":null},{"uuid":"Q7M87eSFpcZKJWhWIBHn_","type":"control","x":555,"y":710,"origin":"qTH_oYlznweMjjoF-VcpE"},{"uuid":"oyfXcGGWEHLBo8F4nZLYT","type":"control","x":585,"y":670,"origin":"zvf5wW9spjgjLB1Xp4tY8"},{"uuid":"zvf5wW9spjgjLB1Xp4tY8","type":"anchor","x":585,"y":670,"origin":null},{"uuid":"amrMjQ2aJ5JWBCPR1TwXQ","type":"control","x":585,"y":670,"origin":"zvf5wW9spjgjLB1Xp4tY8"},{"uuid":"hI4qifOvwYxqY4btouA_0","type":"control","x":613.2514822655442,"y":691.1886116991582,"origin":"nna5bUCx9OUQ1Q4lPkTfa"},{"uuid":"nna5bUCx9OUQ1Q4lPkTfa","type":"anchor","x":613.2514822655442,"y":691.1886116991582,"origin":null},{"uuid":"MU6unDstG3m4DzOsmIbn6","type":"control","x":629.2514822655442,"y":703.1886116991582,"origin":"nna5bUCx9OUQ1Q4lPkTfa"},{"uuid":"ccK1-OpuaiK5_q-tTrwWO","type":"control","x":640.4137599257125,"y":699.701778718653,"origin":"KfUDSf5AQ1TeGPvhiHkDn"},{"uuid":"KfUDSf5AQ1TeGPvhiHkDn","type":"anchor","x":646.7383152460493,"y":680.7281127576427,"origin":null},{"uuid":"7I7-mARqeMTlT1WKpG6Rm","type":"control","x":646.7383152460493,"y":680.7281127576427,"origin":"KfUDSf5AQ1TeGPvhiHkDn"},{"uuid":"Npgve7MGYe3-2IywD1woJ","type":"control","x":696.3406868709199,"y":531.9209978830309,"origin":"FJcQ_u_Yk5-pEH1DDvgrY"},{"uuid":"FJcQ_u_Yk5-pEH1DDvgrY","type":"anchor","x":696.3406868709199,"y":531.9209978830309,"origin":null},{"uuid":"tJaBNsHMxa4m6QSlhRfmF","type":"control","x":708.9897975115933,"y":493.9736659610103,"origin":"FJcQ_u_Yk5-pEH1DDvgrY"},{"uuid":"JeCS13y17xxwulyCYSlT7","type":"control","x":695.3143528319301,"y":475,"origin":"1sRU3yBMwGxNldSpqHHSp"},{"uuid":"1sRU3yBMwGxNldSpqHHSp","type":"anchor","x":655.3143528319301,"y":475,"origin":null},{"uuid":"zDBw3PUVuLy-XBSKNw4Xe","type":"control","x":655.3143528319301,"y":475,"origin":"1sRU3yBMwGxNldSpqHHSp"},{"uuid":"YzRTlFlhqXhUlJkwWVni9","type":"control","x":225,"y":475,"origin":"nWCbJrUzSGJHoQ8_AJJPJ"},{"uuid":"nWCbJrUzSGJHoQ8_AJJPJ","type":"anchor","x":225,"y":475,"origin":null},{"uuid":"FWfysw_VRdoIhW8lALJ6z","type":"control","x":225,"y":475,"origin":"nWCbJrUzSGJHoQ8_AJJPJ"},{"uuid":"mrt3-TO_GegX7Zy4Ov_2e","type":"control","x":225,"y":290,"origin":"lhW3jcQ6Mwx3rH8wE4E5e"},{"uuid":"lhW3jcQ6Mwx3rH8wE4E5e","type":"anchor","x":225,"y":290,"origin":null},{"uuid":"edD0ftgRzWCKjMfxw_Lyz","type":"control","x":225,"y":276.6666666666667,"origin":"lhW3jcQ6Mwx3rH8wE4E5e"},{"uuid":"SFlkSMunvbWsePYKZCU3R","type":"control","x":220.83333333333334,"y":270,"origin":"nofxV-r2VYzm5pRi7d8Ir"},{"uuid":"nofxV-r2VYzm5pRi7d8Ir","type":"anchor","x":212.5,"y":270,"origin":null},{"uuid":"-ycnyYmUUdTBIBocjXIEF","type":"control","x":212.5,"y":270,"origin":"nofxV-r2VYzm5pRi7d8Ir"},{"uuid":"qkBTZbfEnptXfp6kjmC3F","type":"control","x":212.5,"y":250,"origin":"6xKDIIG9Pcqimk66pigXh"},{"uuid":"6xKDIIG9Pcqimk66pigXh","type":"anchor","x":212.5,"y":250,"origin":null},{"uuid":"vhWSXIJ2QhnAd2d9--A4C","type":"control","x":212.5,"y":250,"origin":"6xKDIIG9Pcqimk66pigXh"},{"uuid":"poM82cvLGxCjP8tN3-xJL","type":"control","x":287.5,"y":250,"origin":"uM1aRaJSMfdBuGhsjJisf"},{"uuid":"uM1aRaJSMfdBuGhsjJisf","type":"anchor","x":287.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":287.5,"y":550},"end":{"x":287.5,"y":530},"control1":{"x":287.5,"y":550},"control2":{"x":287.5,"y":530},"fill":false},{"type":2,"start":{"x":287.5,"y":530},"end":{"x":275,"y":510},"control1":{"x":279.1666666666667,"y":530},"control2":{"x":275,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":275,"y":510},"end":{"x":275,"y":375},"control1":{"x":275,"y":510},"control2":{"x":275,"y":375},"fill":false},{"type":2,"start":{"x":275,"y":375},"end":{"x":699.1732125291746,"y":375},"control1":{"x":275,"y":375},"control2":{"x":699.1732125291746,"y":375},"fill":false},{"type":2,"start":{"x":699.1732125291746,"y":375},"end":{"x":758.1542735521334,"y":386.6942056932753},"control1":{"x":727.6773574088064,"y":375},"control2":{"x":747.337711083126,"y":378.8980685644251},"fill":false},{"type":2,"start":{"x":758.1542735521334,"y":386.6942056932753},"end":{"x":787.3897877853217,"y":346.13209643449727},"control1":{"x":758.1542735521334,"y":386.6942056932753},"control2":{"x":787.3897877853217,"y":346.13209643449727},"fill":false},{"type":2,"start":{"x":787.3897877853217,"y":346.13209643449727},"end":{"x":757.6442409955512,"y":293.8757814824439},"control1":{"x":776.5732253163143,"y":338.33595930564707},"control2":{"x":766.6580430530574,"y":320.9171876549626},"fill":false},{"type":2,"start":{"x":757.6442409955512,"y":293.8757814824439},"end":{"x":683.203915431768,"y":70.55480479109451},"control1":{"x":757.6442409955512,"y":293.8757814824439},"control2":{"x":683.203915431768,"y":70.55480479109451},"fill":false},{"type":2,"start":{"x":683.203915431768,"y":70.55480479109451},"end":{"x":611,"y":48},"control1":{"x":669.5669836335599,"y":29.64400939647021},"control2":{"x":645.4990118229706,"y":22.125741132772077},"fill":false},{"type":2,"start":{"x":611,"y":48},"end":{"x":555,"y":90},"control1":{"x":611,"y":48},"control2":{"x":555,"y":90},"fill":false},{"type":2,"start":{"x":555,"y":90},"end":{"x":585,"y":130},"control1":{"x":555,"y":90},"control2":{"x":585,"y":130},"fill":false},{"type":2,"start":{"x":585,"y":130},"end":{"x":613.2514822655442,"y":108.81138830084183},"control1":{"x":585,"y":130},"control2":{"x":613.2514822655442,"y":108.81138830084183},"fill":false},{"type":2,"start":{"x":613.2514822655442,"y":108.81138830084183},"end":{"x":646.7383152460493,"y":119.27188724235725},"control1":{"x":629.2514822655442,"y":96.81138830084183},"control2":{"x":640.4137599257125,"y":100.29822128134697},"fill":false},{"type":2,"start":{"x":646.7383152460493,"y":119.27188724235725},"end":{"x":696.3406868709199,"y":268.07900211696915},"control1":{"x":646.7383152460493,"y":119.27188724235725},"control2":{"x":696.3406868709199,"y":268.07900211696915},"fill":false},{"type":2,"start":{"x":696.3406868709199,"y":268.07900211696915},"end":{"x":655.3143528319301,"y":325},"control1":{"x":708.9897975115933,"y":306.0263340389897},"control2":{"x":695.3143528319301,"y":325},"fill":false},{"type":2,"start":{"x":655.3143528319301,"y":325},"end":{"x":225,"y":325},"control1":{"x":655.3143528319301,"y":325},"control2":{"x":225,"y":325},"fill":false},{"type":2,"start":{"x":225,"y":325},"end":{"x":225,"y":510},"control1":{"x":225,"y":325},"control2":{"x":225,"y":510},"fill":false},{"type":2,"start":{"x":225,"y":510},"end":{"x":212.5,"y":530},"control1":{"x":225,"y":523.3333333333333},"control2":{"x":220.83333333333334,"y":530},"fill":false},{"type":2,"start":{"x":212.5,"y":530},"end":{"x":212.5,"y":550},"control1":{"x":212.5,"y":530},"control2":{"x":212.5,"y":550},"fill":false},{"type":2,"start":{"x":212.5,"y":550},"end":{"x":287.5,"y":550},"control1":{"x":212.5,"y":550},"control2":{"x":287.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":28.75,"y":25},"end":{"x":28.75,"y":27},"control1":{"x":28.75,"y":25},"control2":{"x":28.75,"y":27},"fill":false},{"type":2,"start":{"x":28.75,"y":27},"end":{"x":27.5,"y":29},"control1":{"x":27.91666666666667,"y":27},"control2":{"x":27.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":27.5,"y":29},"end":{"x":27.5,"y":42.5},"control1":{"x":27.5,"y":29},"control2":{"x":27.5,"y":42.5},"fill":false},{"type":2,"start":{"x":27.5,"y":42.5},"end":{"x":69.91732125291746,"y":42.5},"control1":{"x":27.5,"y":42.5},"control2":{"x":69.91732125291746,"y":42.5},"fill":false},{"type":2,"start":{"x":69.91732125291746,"y":42.5},"end":{"x":75.81542735521334,"y":41.33057943067247},"control1":{"x":72.76773574088064,"y":42.5},"control2":{"x":74.73377110831261,"y":42.110193143557495},"fill":false},{"type":2,"start":{"x":75.81542735521334,"y":41.33057943067247},"end":{"x":78.73897877853217,"y":45.38679035655028},"control1":{"x":75.81542735521334,"y":41.33057943067247},"control2":{"x":78.73897877853217,"y":45.38679035655028},"fill":false},{"type":2,"start":{"x":78.73897877853217,"y":45.38679035655028},"end":{"x":75.76442409955511,"y":50.61242185175561},"control1":{"x":77.65732253163144,"y":46.166404069435295},"control2":{"x":76.66580430530574,"y":47.90828123450374},"fill":false},{"type":2,"start":{"x":75.76442409955511,"y":50.61242185175561},"end":{"x":68.3203915431768,"y":72.94451952089055},"control1":{"x":75.76442409955511,"y":50.61242185175561},"control2":{"x":68.3203915431768,"y":72.94451952089055},"fill":false},{"type":2,"start":{"x":68.3203915431768,"y":72.94451952089055},"end":{"x":61.1,"y":75.2},"control1":{"x":66.95669836335598,"y":77.03559906035298},"control2":{"x":64.54990118229706,"y":77.7874258867228},"fill":false},{"type":2,"start":{"x":61.1,"y":75.2},"end":{"x":55.5,"y":71},"control1":{"x":61.1,"y":75.2},"control2":{"x":55.5,"y":71},"fill":false},{"type":2,"start":{"x":55.5,"y":71},"end":{"x":58.5,"y":67},"control1":{"x":55.5,"y":71},"control2":{"x":58.5,"y":67},"fill":false},{"type":2,"start":{"x":58.5,"y":67},"end":{"x":61.32514822655442,"y":69.11886116991582},"control1":{"x":58.5,"y":67},"control2":{"x":61.32514822655442,"y":69.11886116991582},"fill":false},{"type":2,"start":{"x":61.32514822655442,"y":69.11886116991582},"end":{"x":64.67383152460494,"y":68.07281127576428},"control1":{"x":62.92514822655442,"y":70.31886116991582},"control2":{"x":64.04137599257125,"y":69.9701778718653},"fill":false},{"type":2,"start":{"x":64.67383152460494,"y":68.07281127576428},"end":{"x":69.63406868709198,"y":53.19209978830309},"control1":{"x":64.67383152460494,"y":68.07281127576428},"control2":{"x":69.63406868709198,"y":53.19209978830309},"fill":false},{"type":2,"start":{"x":69.63406868709198,"y":53.19209978830309},"end":{"x":65.53143528319302,"y":47.5},"control1":{"x":70.89897975115933,"y":49.39736659610103},"control2":{"x":69.53143528319302,"y":47.5},"fill":false},{"type":2,"start":{"x":65.53143528319302,"y":47.5},"end":{"x":22.5,"y":47.5},"control1":{"x":65.53143528319302,"y":47.5},"control2":{"x":22.5,"y":47.5},"fill":false},{"type":2,"start":{"x":22.5,"y":47.5},"end":{"x":22.5,"y":29},"control1":{"x":22.5,"y":47.5},"control2":{"x":22.5,"y":29},"fill":false},{"type":2,"start":{"x":22.5,"y":29},"end":{"x":21.25,"y":27},"control1":{"x":22.5,"y":27.66666666666667},"control2":{"x":22.083333333333336,"y":27},"fill":false},{"type":2,"start":{"x":21.25,"y":27},"end":{"x":21.25,"y":25},"control1":{"x":21.25,"y":27},"control2":{"x":21.25,"y":25},"fill":false},{"type":2,"start":{"x":21.25,"y":25},"end":{"x":28.75,"y":25},"control1":{"x":21.25,"y":25},"control2":{"x":28.75,"y":25},"fill":false}]}]}},{"uuid":"xFPmnCm5IKwlQs2jFDRMu","type":"system","name":"横折钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"saClkF7gCWH3cIg_OZJeh","name":"横-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"Yr-vrtr-IC6cDanwbLhis","name":"折-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"eCS0Bvf5VwfSDFHKR_u5b","name":"折-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"VdaGq60Fw1JN751VxNtqN","name":"钩-水平延伸","type":0,"value":80,"min":0,"max":300},{"uuid":"KFFV5xdOLDzvzWGvLPEdi","name":"钩-竖直延伸","type":0,"value":-60,"min":-300,"max":300},{"uuid":"yJA9NE5v-36YwFODVzizZ","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"HZhiC5ysNMXSmQYBt34lj","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"bbgu7t78euuDkLuL25yg7","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"OpgIHvKytYN0I7gkqmQJ2","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"sy8eWtzCwXf8sQCeIYoi4","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"M7lHaNLly_oXFcoD07bmE","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"fvmVAJ58F_B_AlFCis5rG","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"Tastwh9V_W3CxrcC3jWr5","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_xFPmnCm5IKwlQs2jFDRMu (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 350\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_horizonalSpan: glyph.getParam('折-水平延伸'),\n  zhe_verticalSpan: glyph.getParam('折-竖直延伸'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-水平延伸', _params.zhe_horizonalSpan)\n  glyph.setParam('折-竖直延伸', _params.zhe_verticalSpan)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end, gou_start, gou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_horizonal_span_range = glyph.getParamRange('折-水平延伸')\n  const zhe_vertical_span_range = glyph.getParamRange('折-竖直延伸')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_horizonalSpan = range(zhe_start.x - zhe_end.x, zhe_horizonal_span_range)\n  const zhe_verticalSpan = range(zhe_end.y - zhe_start.y, zhe_vertical_span_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折\n  const zhe_start = new FP.Joint(\n    'zhe_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe_end = new FP.Joint(\n    'zhe_end',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n\n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n\n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n  const { corner: in_corner_zhe_gou } = FP.getIntersection(\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_zhe_gou } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n\n  // 计算横折拐角处内外圆角相关的点与数据\n  let in_radius_heng_zhe = 60 * bending_degree\n  let out_radius_heng_zhe = 80 * bending_degree\n  // 如果in_radius超出折1或折2长度，取折1或折2的最小长度\n  const in_radius_min_length_heng_zhe = Math.min(\n    getDistance(in_corner_heng_zhe, in_heng_start),\n    getDistance(in_corner_heng_zhe, in_corner_zhe_gou),\n  )\n  const out_radius_min_length_heng_zhe = Math.min(\n    getDistance(out_zhe_end, out_heng_start),\n    getDistance(out_zhe_start, out_zhe_end),\n  )\n  if (in_radius_heng_zhe >= in_radius_min_length_heng_zhe) {\n    in_radius_heng_zhe = in_radius_min_length_heng_zhe\n  }\n  if (out_radius_heng_zhe >= out_radius_min_length_heng_zhe) {\n    out_radius_heng_zhe = out_radius_min_length_heng_zhe\n  }\n  const in_radius_start_heng_zhe = {\n    x: in_corner_heng_zhe.x - in_radius_heng_zhe,\n    y: in_corner_heng_zhe.y,\n  }\n  const in_radius_end_heng_zhe = getRadiusPoint({\n    start: in_corner_heng_zhe,\n    end: in_corner_zhe_gou,\n    radius: in_radius_heng_zhe,\n  })\n  const out_radius_start_heng_zhe = {\n    x: out_corner_heng_zhe.x - out_radius_heng_zhe,\n    y: out_corner_heng_zhe.y,\n  }\n  const out_radius_end_heng_zhe = getRadiusPoint({\n    start: out_corner_heng_zhe,\n    end: out_corner_zhe_gou,\n    radius: out_radius_heng_zhe,\n  })\n\n  // 计算折2钩拐角处内外圆角相关的点与数据\n  let in_radius_zhe_gou = 30 * bending_degree\n  let out_radius_zhe_gou = 30 * bending_degree\n  // 如果in_radius超出折2或钩的长度，取折2或钩的最小长度\n  const in_radius_min_length_zhe_gou = Math.min(\n    getDistance(in_corner_zhe_gou, in_gou_end),\n    getDistance(in_corner_zhe_gou, in_radius_end_heng_zhe),\n  )\n  const out_radius_min_length_zhe_gou = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_zhe_end, out_radius_end_heng_zhe),\n  )\n  if (in_radius_zhe_gou >= in_radius_min_length_zhe_gou) {\n    in_radius_zhe_gou = in_radius_min_length_zhe_gou\n  }\n  if (out_radius_zhe_gou >= out_radius_min_length_zhe_gou) {\n    out_radius_zhe_gou = out_radius_min_length_zhe_gou\n  }\n  const in_radius_start_zhe_gou = getRadiusPoint({\n    start: in_corner_zhe_gou,\n    end: in_corner_heng_zhe,\n    radius: in_radius_zhe_gou,\n  })\n  const in_radius_end_zhe_gou = getRadiusPoint({\n    start: in_corner_zhe_gou,\n    end: in_gou_end,\n    radius: in_radius_zhe_gou,\n  })\n  const out_radius_start_zhe_gou = getRadiusPoint({\n    start: out_zhe_end,\n    end: out_radius_end_heng_zhe,\n    radius: out_radius_zhe_gou,\n  })\n  const out_radius_end_zhe_gou = getRadiusPoint({\n    start: out_gou_start,\n    end: out_gou_end,\n    radius: out_radius_zhe_gou,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe, out_zhe_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_zhe.x - corner_radius,\n      y: out_corner_heng_zhe.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_heng_zhe,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    // 绘制外侧横折圆角\n    pen.lineTo(out_radius_start_heng_zhe.x, out_radius_start_heng_zhe.y)\n    pen.quadraticBezierTo(out_corner_heng_zhe.x, out_corner_heng_zhe.y, out_radius_end_heng_zhe.x, out_radius_end_heng_zhe.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折钩圆角\n  pen.lineTo(out_radius_start_zhe_gou.x, out_radius_start_zhe_gou.y)\n  pen.quadraticBezierTo(out_corner_zhe_gou.x, out_corner_zhe_gou.y, out_radius_end_zhe_gou.x, out_radius_end_zhe_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧折钩圆角\n  pen.lineTo(in_radius_end_zhe_gou.x, in_radius_end_zhe_gou.y)\n  pen.quadraticBezierTo(in_corner_zhe_gou.x, in_corner_zhe_gou.y, in_radius_start_zhe_gou.x, in_radius_start_zhe_gou.y)\n  // 绘制内侧横折圆角\n  pen.lineTo(in_radius_end_heng_zhe.x, in_radius_end_heng_zhe.y)\n  pen.quadraticBezierTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y, in_radius_start_heng_zhe.x, in_radius_start_heng_zhe.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_heng_start.x, out_heng_start.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":350,"uuid":"ekxVcVXjp1PLgykRUz16f","name":"heng_start_ref"},{"_x":750,"_y":350,"uuid":"LDcjYuYZ2iz0rY8qAZt5Q","name":"heng_end_ref"},{"_x":250,"_y":350,"uuid":"P95LowpUJ2AR1oOOL_CgN","name":"heng_start"},{"_x":750,"_y":350,"uuid":"bjUhBLTPCQ1rCSquRcZrP","name":"heng_end"},{"_x":750,"_y":350,"uuid":"Wf5sLcS4223XEfWWE068n","name":"zhe_start"},{"_x":650,"_y":650,"uuid":"m-LpjwFMmgJ98jFGheVXK","name":"zhe_end"},{"_x":650,"_y":650,"uuid":"SMkQdwpAad4eGMRg2kBVb","name":"gou_start"},{"_x":570,"_y":590,"uuid":"ozp1QrDVkBapuIRfsMAlz","name":"gou_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"eg5Kk-qBp5hbvipNbrdZf","type":"anchor","x":250,"y":312.5,"origin":null},{"uuid":"SJWVTkzeeIFlMkZ-YkVMY","type":"control","x":250,"y":312.5,"origin":"eg5Kk-qBp5hbvipNbrdZf"},{"uuid":"0WdBOaxRAGcWVuFZfOpoq","type":"control","x":270,"y":312.5,"origin":"oHpFyMcU4OJrtHuibxTrO"},{"uuid":"oHpFyMcU4OJrtHuibxTrO","type":"anchor","x":270,"y":312.5,"origin":null},{"uuid":"fuOUOraUL5qyShxmXLUAx","type":"control","x":270,"y":320.8333333333333,"origin":"oHpFyMcU4OJrtHuibxTrO"},{"uuid":"0QA9A8X8y04DanusvQcny","type":"control","x":276.6666666666667,"y":325,"origin":"wX0EqGQCats8XQGOJcE8U"},{"uuid":"wX0EqGQCats8XQGOJcE8U","type":"anchor","x":290,"y":325,"origin":null},{"uuid":"ZkQCgR42tOEl-8qvyflWf","type":"control","x":290,"y":325,"origin":"wX0EqGQCats8XQGOJcE8U"},{"uuid":"X-uiTZYniuzXADkS66rtj","type":"control","x":699.1732125291746,"y":325,"origin":"UEuhy3eBFQr5j3kZtsYLZ"},{"uuid":"UEuhy3eBFQr5j3kZtsYLZ","type":"anchor","x":699.1732125291746,"y":325,"origin":null},{"uuid":"0p8CAjYvyIhfeEt30wAPS","type":"control","x":727.6773574088064,"y":325,"origin":"UEuhy3eBFQr5j3kZtsYLZ"},{"uuid":"dPfFYjci0NN3bHf9hCpRn","type":"control","x":747.337711083126,"y":321.1019314355749,"origin":"mukf8i-g8nOaYDpvlWg1A"},{"uuid":"mukf8i-g8nOaYDpvlWg1A","type":"anchor","x":758.1542735521334,"y":313.3057943067247,"origin":null},{"uuid":"A3z87ZkCuqFIAtpprqfkZ","type":"control","x":758.1542735521334,"y":313.3057943067247,"origin":"mukf8i-g8nOaYDpvlWg1A"},{"uuid":"p2IIZ5kcpOnkyVYDyAzq3","type":"control","x":787.3897877853217,"y":353.86790356550273,"origin":"pzQ3tCRm--Dpr4hLXaV0B"},{"uuid":"pzQ3tCRm--Dpr4hLXaV0B","type":"anchor","x":787.3897877853217,"y":353.86790356550273,"origin":null},{"uuid":"WJKR44wtqPMbv0tBSrurd","type":"control","x":776.5732253163143,"y":361.66404069435293,"origin":"pzQ3tCRm--Dpr4hLXaV0B"},{"uuid":"D7Tt7fvunoGaCCMylBNWi","type":"control","x":766.6580430530574,"y":379.0828123450374,"origin":"PmKspsIxwXSJ8LSEay_--"},{"uuid":"PmKspsIxwXSJ8LSEay_--","type":"anchor","x":757.6442409955512,"y":406.1242185175561,"origin":null},{"uuid":"Rzkx4rkMnRQEnceQ3yFFM","type":"control","x":757.6442409955512,"y":406.1242185175561,"origin":"PmKspsIxwXSJ8LSEay_--"},{"uuid":"rUku81tIXY3Mim796nxZe","type":"control","x":683.203915431768,"y":629.4451952089055,"origin":"GXbd3t_E1CgKF65inhvzq"},{"uuid":"GXbd3t_E1CgKF65inhvzq","type":"anchor","x":683.203915431768,"y":629.4451952089055,"origin":null},{"uuid":"ZB_YQ_f_9Y33vCp5qDhnZ","type":"control","x":669.5669836335599,"y":670.3559906035298,"origin":"GXbd3t_E1CgKF65inhvzq"},{"uuid":"_e0pSLNQZiRmohTWJj-FB","type":"control","x":645.4990118229706,"y":677.8742588672279,"origin":"WcBSo7dTKZllTjB5ciH3C"},{"uuid":"WcBSo7dTKZllTjB5ciH3C","type":"anchor","x":611,"y":652,"origin":null},{"uuid":"UnnevCIjXvmm2Xr7DL-b3","type":"control","x":611,"y":652,"origin":"WcBSo7dTKZllTjB5ciH3C"},{"uuid":"EwYXmOJOw7w496Y8DTPRH","type":"control","x":555,"y":610,"origin":"3UPuo_BhiW2K2L9KG1eYj"},{"uuid":"3UPuo_BhiW2K2L9KG1eYj","type":"anchor","x":555,"y":610,"origin":null},{"uuid":"KoVzvrpjcc6BbUUvDZvtc","type":"control","x":555,"y":610,"origin":"3UPuo_BhiW2K2L9KG1eYj"},{"uuid":"BznQcloXWfGfivl3Ke233","type":"control","x":585,"y":570,"origin":"OAXDDkZyzQL9c0GaqiKLn"},{"uuid":"OAXDDkZyzQL9c0GaqiKLn","type":"anchor","x":585,"y":570,"origin":null},{"uuid":"7a1Xk30uGePxjdNfXEFfp","type":"control","x":585,"y":570,"origin":"OAXDDkZyzQL9c0GaqiKLn"},{"uuid":"fWvlaDjyLWe1MaG-nAis_","type":"control","x":613.2514822655442,"y":591.1886116991582,"origin":"d1xhDAeffMsKJY-MwMrc6"},{"uuid":"d1xhDAeffMsKJY-MwMrc6","type":"anchor","x":613.2514822655442,"y":591.1886116991582,"origin":null},{"uuid":"IU0FryYJIKY4BkDbsFVOW","type":"control","x":629.2514822655442,"y":603.1886116991582,"origin":"d1xhDAeffMsKJY-MwMrc6"},{"uuid":"0YUzeu03lMrPEnuY0gNbX","type":"control","x":640.4137599257125,"y":599.701778718653,"origin":"Ng02DLSvIyEtVlVPwTTWo"},{"uuid":"Ng02DLSvIyEtVlVPwTTWo","type":"anchor","x":646.7383152460493,"y":580.7281127576427,"origin":null},{"uuid":"sVkSgOg6UhNVZCXnJmhLs","type":"control","x":646.7383152460493,"y":580.7281127576427,"origin":"Ng02DLSvIyEtVlVPwTTWo"},{"uuid":"Rw_ulJYyGnfdbgP9QIK71","type":"control","x":696.3406868709199,"y":431.92099788303085,"origin":"LOxklKnm8EtlLtOJlolS3"},{"uuid":"LOxklKnm8EtlLtOJlolS3","type":"anchor","x":696.3406868709199,"y":431.92099788303085,"origin":null},{"uuid":"WneBdOXQNTd968zV58_ZD","type":"control","x":708.9897975115933,"y":393.9736659610103,"origin":"LOxklKnm8EtlLtOJlolS3"},{"uuid":"gpalz0mmJQjKnRRBwPF66","type":"control","x":695.3143528319301,"y":375,"origin":"Qh47sS2cfVRYZqRW6XKWl"},{"uuid":"Qh47sS2cfVRYZqRW6XKWl","type":"anchor","x":655.3143528319301,"y":375,"origin":null},{"uuid":"8kNvxfZ48y17c2jjOkEnK","type":"control","x":655.3143528319301,"y":375,"origin":"Qh47sS2cfVRYZqRW6XKWl"},{"uuid":"OKkS-mqmaMF440YyDAjiM","type":"control","x":290,"y":375,"origin":"aFGdcPJ_EHVnnmXXaFDxM"},{"uuid":"aFGdcPJ_EHVnnmXXaFDxM","type":"anchor","x":290,"y":375,"origin":null},{"uuid":"Ua0WukrVvtm8ehT9d_DMq","type":"control","x":276.6666666666667,"y":375,"origin":"aFGdcPJ_EHVnnmXXaFDxM"},{"uuid":"PGsvK25PwM019RtaMduGo","type":"control","x":270,"y":379.1666666666667,"origin":"hOWPTdahIAAd252_muo2U"},{"uuid":"hOWPTdahIAAd252_muo2U","type":"anchor","x":270,"y":387.5,"origin":null},{"uuid":"-ZfYYDKli_lGF8NUSenjR","type":"control","x":270,"y":387.5,"origin":"hOWPTdahIAAd252_muo2U"},{"uuid":"FLSm4qskHBteGBwJWtT9r","type":"control","x":250,"y":387.5,"origin":"XTaTRdpsOSQ2HvsCajNYS"},{"uuid":"XTaTRdpsOSQ2HvsCajNYS","type":"anchor","x":250,"y":387.5,"origin":null},{"uuid":"zb0jvR0Lz7o3wkCobVs69","type":"control","x":250,"y":387.5,"origin":"XTaTRdpsOSQ2HvsCajNYS"},{"uuid":"dacklCLvam-wbZgLwQlvI","type":"control","x":250,"y":325,"origin":"Xvy7tvlWeEOQmegBU1kh_"},{"uuid":"Xvy7tvlWeEOQmegBU1kh_","type":"anchor","x":250,"y":325,"origin":null},{"uuid":"BlP-gjX7_0uFbaOX4p4X8","type":"control","x":250,"y":325,"origin":"Xvy7tvlWeEOQmegBU1kh_"},{"uuid":"oQ4u2W2UN3MvHxQiSggRW","type":"control","x":250,"y":312.5,"origin":"rINdWBqvzFxwqATede0za"},{"uuid":"rINdWBqvzFxwqATede0za","type":"anchor","x":250,"y":312.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":487.5},"end":{"x":270,"y":487.5},"control1":{"x":250,"y":487.5},"control2":{"x":270,"y":487.5},"fill":false},{"type":2,"start":{"x":270,"y":487.5},"end":{"x":290,"y":475},"control1":{"x":270,"y":479.16666666666674},"control2":{"x":276.6666666666667,"y":475},"fill":false},{"type":2,"start":{"x":290,"y":475},"end":{"x":699.1732125291746,"y":475},"control1":{"x":290,"y":475},"control2":{"x":699.1732125291746,"y":475},"fill":false},{"type":2,"start":{"x":699.1732125291746,"y":475},"end":{"x":758.1542735521334,"y":486.6942056932753},"control1":{"x":727.6773574088064,"y":475},"control2":{"x":747.337711083126,"y":478.8980685644251},"fill":false},{"type":2,"start":{"x":758.1542735521334,"y":486.6942056932753},"end":{"x":787.3897877853217,"y":446.13209643449727},"control1":{"x":758.1542735521334,"y":486.6942056932753},"control2":{"x":787.3897877853217,"y":446.13209643449727},"fill":false},{"type":2,"start":{"x":787.3897877853217,"y":446.13209643449727},"end":{"x":757.6442409955512,"y":393.8757814824439},"control1":{"x":776.5732253163143,"y":438.33595930564707},"control2":{"x":766.6580430530574,"y":420.9171876549626},"fill":false},{"type":2,"start":{"x":757.6442409955512,"y":393.8757814824439},"end":{"x":683.203915431768,"y":170.5548047910945},"control1":{"x":757.6442409955512,"y":393.8757814824439},"control2":{"x":683.203915431768,"y":170.5548047910945},"fill":false},{"type":2,"start":{"x":683.203915431768,"y":170.5548047910945},"end":{"x":611,"y":148},"control1":{"x":669.5669836335599,"y":129.6440093964702},"control2":{"x":645.4990118229706,"y":122.12574113277208},"fill":false},{"type":2,"start":{"x":611,"y":148},"end":{"x":555,"y":190},"control1":{"x":611,"y":148},"control2":{"x":555,"y":190},"fill":false},{"type":2,"start":{"x":555,"y":190},"end":{"x":585,"y":230},"control1":{"x":555,"y":190},"control2":{"x":585,"y":230},"fill":false},{"type":2,"start":{"x":585,"y":230},"end":{"x":613.2514822655442,"y":208.81138830084183},"control1":{"x":585,"y":230},"control2":{"x":613.2514822655442,"y":208.81138830084183},"fill":false},{"type":2,"start":{"x":613.2514822655442,"y":208.81138830084183},"end":{"x":646.7383152460493,"y":219.27188724235725},"control1":{"x":629.2514822655442,"y":196.81138830084183},"control2":{"x":640.4137599257125,"y":200.29822128134697},"fill":false},{"type":2,"start":{"x":646.7383152460493,"y":219.27188724235725},"end":{"x":696.3406868709199,"y":368.07900211696915},"control1":{"x":646.7383152460493,"y":219.27188724235725},"control2":{"x":696.3406868709199,"y":368.07900211696915},"fill":false},{"type":2,"start":{"x":696.3406868709199,"y":368.07900211696915},"end":{"x":655.3143528319301,"y":425},"control1":{"x":708.9897975115933,"y":406.0263340389897},"control2":{"x":695.3143528319301,"y":425},"fill":false},{"type":2,"start":{"x":655.3143528319301,"y":425},"end":{"x":290,"y":425},"control1":{"x":655.3143528319301,"y":425},"control2":{"x":290,"y":425},"fill":false},{"type":2,"start":{"x":290,"y":425},"end":{"x":270,"y":412.5},"control1":{"x":276.6666666666667,"y":425},"control2":{"x":270,"y":420.83333333333326},"fill":false},{"type":2,"start":{"x":270,"y":412.5},"end":{"x":250,"y":412.5},"control1":{"x":270,"y":412.5},"control2":{"x":250,"y":412.5},"fill":false},{"type":2,"start":{"x":250,"y":412.5},"end":{"x":250,"y":475},"control1":{"x":250,"y":412.5},"control2":{"x":250,"y":475},"fill":false},{"type":2,"start":{"x":250,"y":475},"end":{"x":250,"y":487.5},"control1":{"x":250,"y":475},"control2":{"x":250,"y":487.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":31.25},"end":{"x":27,"y":31.25},"control1":{"x":25,"y":31.25},"control2":{"x":27,"y":31.25},"fill":false},{"type":2,"start":{"x":27,"y":31.25},"end":{"x":29,"y":32.5},"control1":{"x":27,"y":32.083333333333336},"control2":{"x":27.66666666666667,"y":32.5},"fill":false},{"type":2,"start":{"x":29,"y":32.5},"end":{"x":69.91732125291746,"y":32.5},"control1":{"x":29,"y":32.5},"control2":{"x":69.91732125291746,"y":32.5},"fill":false},{"type":2,"start":{"x":69.91732125291746,"y":32.5},"end":{"x":75.81542735521334,"y":31.330579430672472},"control1":{"x":72.76773574088064,"y":32.5},"control2":{"x":74.73377110831261,"y":32.11019314355749},"fill":false},{"type":2,"start":{"x":75.81542735521334,"y":31.330579430672472},"end":{"x":78.73897877853217,"y":35.38679035655027},"control1":{"x":75.81542735521334,"y":31.330579430672472},"control2":{"x":78.73897877853217,"y":35.38679035655027},"fill":false},{"type":2,"start":{"x":78.73897877853217,"y":35.38679035655027},"end":{"x":75.76442409955511,"y":40.61242185175561},"control1":{"x":77.65732253163144,"y":36.166404069435295},"control2":{"x":76.66580430530574,"y":37.90828123450374},"fill":false},{"type":2,"start":{"x":75.76442409955511,"y":40.61242185175561},"end":{"x":68.3203915431768,"y":62.94451952089055},"control1":{"x":75.76442409955511,"y":40.61242185175561},"control2":{"x":68.3203915431768,"y":62.94451952089055},"fill":false},{"type":2,"start":{"x":68.3203915431768,"y":62.94451952089055},"end":{"x":61.1,"y":65.2},"control1":{"x":66.95669836335598,"y":67.03559906035298},"control2":{"x":64.54990118229706,"y":67.7874258867228},"fill":false},{"type":2,"start":{"x":61.1,"y":65.2},"end":{"x":55.5,"y":61},"control1":{"x":61.1,"y":65.2},"control2":{"x":55.5,"y":61},"fill":false},{"type":2,"start":{"x":55.5,"y":61},"end":{"x":58.5,"y":57},"control1":{"x":55.5,"y":61},"control2":{"x":58.5,"y":57},"fill":false},{"type":2,"start":{"x":58.5,"y":57},"end":{"x":61.32514822655442,"y":59.11886116991582},"control1":{"x":58.5,"y":57},"control2":{"x":61.32514822655442,"y":59.11886116991582},"fill":false},{"type":2,"start":{"x":61.32514822655442,"y":59.11886116991582},"end":{"x":64.67383152460494,"y":58.07281127576428},"control1":{"x":62.92514822655442,"y":60.31886116991582},"control2":{"x":64.04137599257125,"y":59.9701778718653},"fill":false},{"type":2,"start":{"x":64.67383152460494,"y":58.07281127576428},"end":{"x":69.63406868709198,"y":43.19209978830309},"control1":{"x":64.67383152460494,"y":58.07281127576428},"control2":{"x":69.63406868709198,"y":43.19209978830309},"fill":false},{"type":2,"start":{"x":69.63406868709198,"y":43.19209978830309},"end":{"x":65.53143528319302,"y":37.5},"control1":{"x":70.89897975115933,"y":39.39736659610103},"control2":{"x":69.53143528319302,"y":37.5},"fill":false},{"type":2,"start":{"x":65.53143528319302,"y":37.5},"end":{"x":29,"y":37.5},"control1":{"x":65.53143528319302,"y":37.5},"control2":{"x":29,"y":37.5},"fill":false},{"type":2,"start":{"x":29,"y":37.5},"end":{"x":27,"y":38.75},"control1":{"x":27.66666666666667,"y":37.5},"control2":{"x":27,"y":37.91666666666667},"fill":false},{"type":2,"start":{"x":27,"y":38.75},"end":{"x":25,"y":38.75},"control1":{"x":27,"y":38.75},"control2":{"x":25,"y":38.75},"fill":false},{"type":2,"start":{"x":25,"y":38.75},"end":{"x":25,"y":32.5},"control1":{"x":25,"y":38.75},"control2":{"x":25,"y":32.5},"fill":false},{"type":2,"start":{"x":25,"y":32.5},"end":{"x":25,"y":31.25},"control1":{"x":25,"y":32.5},"control2":{"x":25,"y":31.25},"fill":false}]}]}},{"uuid":"el1kUYQBvkt84VAf4gwZ1","type":"system","name":"横弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"hazb_Kyvm549xyRln9-CN","name":"横-长度","type":0,"value":300,"min":0,"max":1000},{"uuid":"hb_LP7VHZ7bS0zkOik-dv","name":"弯-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"hk48gsy4feniusReSHAC0","name":"弯-竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"gK7_Cz06ml-kEIszZWTaR","name":"弯-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"4IhWl8jxPjfGKpnnI9vY5","name":"弯-弯曲度","type":0,"value":100,"min":0,"max":350},{"uuid":"KkkXJ091maR2bh1KRivdf","name":"钩-水平延伸","type":0,"value":60,"min":0,"max":300},{"uuid":"LirxURmAa4AppCsJCIxlH","name":"钩-竖直延伸","type":0,"value":60,"min":0,"max":300},{"uuid":"J_YNEfiFrelF4EfI1qHPD","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"pqkalHLhWkMnaEidH7n-e","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"RWpEceivSyrBSTSKXnTCr","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"YmC7B8LRmyWhicBZrSxzV","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"rlv_U3my9tU9DxKWSLFaF","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"3yhD6rmoLxNMQhNaPGN0U","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"KHj9yjMdJz43Y65ZlSaMC","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"GPGiD2DLuO5kkLAzizI5R","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_el1kUYQBvkt84VAf4gwZ1 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 300\nconst y0 = 250\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  wan_horizonalSpan: glyph.getParam('弯-水平延伸'),\n  wan_verticalSpan: glyph.getParam('弯-竖直延伸'),\n  wan_bendCursor: glyph.getParam('弯-弯曲游标'),\n  wan_bendDegree: glyph.getParam('弯-弯曲度'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_bend'] = {\n        x: glyph.tempData['wan_bend'].x + deltaX,\n        y: glyph.tempData['wan_bend'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_bend'] = {\n        x: glyph.tempData['wan_bend'].x + deltaX,\n        y: glyph.tempData['wan_bend'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'wan_bend': {\n      jointsMap['wan_bend'] = {\n        x: glyph.tempData['wan_bend'].x + deltaX,\n        y: glyph.tempData['wan_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['wan_start'], jointsMap['wan_end'])\n      jointsMap['wan_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['wan_start'], jointsMap['wan_end'])\n      jointsMap['wan_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { wan_bendCursor: bendCursor, wan_bendDegree: bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x + bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y + bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('弯-水平延伸', _params.wan_horizonalSpan)\n  glyph.setParam('弯-竖直延伸', _params.wan_verticalSpan)\n  glyph.setParam('弯-弯曲游标', _params.wan_bendCursor)\n  glyph.setParam('弯-弯曲度', _params.wan_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, wan_start, wan_end, wan_bend, gou_start, gou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const wan_horizonal_span_range = glyph.getParamRange('弯-水平延伸')\n  const wan_vertical_span_range = glyph.getParamRange('弯-竖直延伸')\n  const wan_bend_cursor_range = glyph.getParamRange('弯-弯曲游标')\n  const wan_bend_degree_range = glyph.getParamRange('弯-弯曲度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const wan_horizonalSpan = range(wan_end.x - wan_start.x, wan_horizonal_span_range)\n  const wan_verticalSpan = range(wan_end.y - wan_start.y, wan_vertical_span_range)\n  const wan_data = FP.distanceAndFootPoint(wan_start, wan_end, wan_bend)\n  const wan_bendCursor = range(wan_data.percentageFromA, wan_bend_cursor_range)\n  const wan_bendDegree = range(wan_data.distance, wan_bend_degree_range)\n  const gou_horizonalSpan = range(gou_end.x - gou_start.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_start.y - gou_end.y, gou_vertical_span_range)\n  return {\n    heng_length,\n    wan_horizonalSpan,\n    wan_verticalSpan,\n    wan_bendCursor,\n    wan_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    wan_horizonalSpan,\n    wan_verticalSpan,\n    wan_bendCursor,\n    wan_bendDegree,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x + wan_horizonalSpan,\n      y: wan_start.y + wan_verticalSpan,\n    },\n  )\n  const wan_length = distance(wan_start, wan_end)\n  const wan_cursor_x = wan_start.x + wan_bendCursor * wan_horizonalSpan\n  const wan_cursor_y = wan_start.y + wan_bendCursor * wan_verticalSpan\n  const wan_angle = Math.atan2(wan_verticalSpan, wan_horizonalSpan)\n\n  const wan_bend = new FP.Joint(\n    'wan_bend',\n    {\n      x: wan_cursor_x - wan_bendDegree * Math.sin(wan_angle),\n      y: wan_cursor_y + wan_bendDegree * Math.cos(wan_angle),\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: wan_start.x + wan_horizonalSpan,\n      y: wan_start.y + wan_verticalSpan,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x + gou_horizonalSpan,\n      y: gou_start.y - gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_bend)\n  glyph.addJoint(wan_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    wan_start,\n    wan_bend,\n    wan_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(wan_start, wan_bend))\n  glyph.addRefLine(refline(wan_bend, wan_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    wan_start,\n    wan_bend,\n    wan_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_wan_curves, out_wan_points, in_wan_curves, in_wan_points } = FP.getCurveContours('wan', { wan_start, wan_bend, wan_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_heng_wan, corner_index: in_corner_index_heng_wan } = FP.getIntersection(\n    { type: 'curve', points: in_wan_points },\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n  )\n  const { corner: out_corner_heng_wan } = FP.getIntersection(\n    { type: 'line', start: out_wan_curves[0].start, end: out_wan_curves[0].control1 },\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n  )\n  const { corner: in_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: in_wan_curves[in_wan_curves.length - 1].control2, end: in_wan_curves[in_wan_curves.length - 1].end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_wan_gou, corner_index: out_corner_index_wan_gou } = FP.getIntersection(\n    { type: 'curve', points: out_wan_points },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  let in_wan_points_final = in_wan_points.slice(in_corner_index_heng_wan)\n  let { curves: in_wan_curves_final } = FP.fitCurvesByPoints(in_wan_points_final)\n  let { curves: out_wan_curves_final } = FP.fitCurvesByPoints(out_wan_points.slice(0, out_corner_index_wan_gou))\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius = 30 * bending_degree\n  let out_radius = 30 * bending_degree\n  // 如果in_radius超出钩或弯的长度，取钩或弯的最小长度\n  const in_radius_min_length = Math.min(\n    getDistance(in_gou_start, in_gou_end),\n    getDistance(in_wan_curves_final[0].start, in_wan_curves_final[in_wan_curves_final.length - 1].end),\n  )\n  const out_radius_min_length = Math.min(\n    getDistance(out_wan_curves_final[out_wan_curves_final.length - 1].end, out_gou_end),\n    getDistance(out_wan_curves_final[0].start, out_wan_curves_final[out_wan_curves_final.length - 1].end),\n  )\n  if (in_radius >= in_radius_min_length) {\n    in_radius = in_radius_min_length\n  }\n  if (out_radius >= out_radius_min_length) {\n    out_radius = out_radius_min_length\n  }\n  //const in_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(in_wan_curves_final), in_radius, true)\n  const in_radius_data = FP.getRadiusPointsOnCurve(in_wan_points_final, in_radius, true)\n  const in_radius_control = FP.getIntersection(\n    { type: 'line', start: in_radius_data.tangent.start, end: in_radius_data.tangent.end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  ).corner\n  const in_radius_start = in_radius_data.point\n  const in_radius_end = getRadiusPoint({\n    start: in_radius_control,\n    end: in_gou_end,\n    radius: in_radius,\n  })\n  const out_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(out_wan_curves_final), out_radius, true)\n  const out_radius_control = FP.getIntersection(\n    { type: 'line', start: out_radius_data.tangent.start, end: out_radius_data.tangent.end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  ).corner\n  const out_radius_start = out_radius_data.point\n  const out_radius_end = getRadiusPoint({\n    start: out_radius_control,\n    end: out_gou_end,\n    radius: out_radius,\n  })\n  in_wan_curves_final = in_radius_data.final_curves\n  in_wan_points_final = in_wan_points_final.slice(0, in_wan_curves_final.length - in_radius_data.index + 1)\n  out_wan_curves_final = out_radius_data.final_curves\n  // in_wan_points.map((p, index) => {\n  //   glyph.addJoint(new FP.Joint(\n  //     'test' + index,\n  //     {\n  //       x: p.x,\n  //       y: p.y,\n  //     },\n  //   ))\n  // })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）侧轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_corner_heng_wan.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_corner_heng_wan.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_corner_heng_wan.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_corner_heng_wan.y,\n    )\n  }\n  pen.lineTo(out_corner_heng_wan.x, out_corner_heng_wan.y)\n  pen.lineTo(out_wan_curves_final[0].start.x, out_wan_curves_final[0].start.y)\n  for (let i = 0; i < out_wan_curves_final.length; i++) {\n    const curve = out_wan_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  // 绘制外侧圆角\n  pen.quadraticBezierTo(out_radius_control.x, out_radius_control.y, out_radius_end.x, out_radius_end.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）侧轮廓\n  // 绘制内侧圆角\n  pen.lineTo(in_radius_end.x, in_radius_end.y)\n  pen.quadraticBezierTo(in_radius_control.x, in_radius_control.y, in_radius_start.x, in_radius_start.y)\n  for (let i = in_wan_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_wan_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_wan_curves_final[0].start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_wan_curves_final[0].start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_wan_curves_final[0].start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_wan_curves_final[0].start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_wan_curves_final[0].start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_wan_curves_final[0].start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_wan_curves_final[0].start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_wan_curves_final[0].start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_corner_heng_wan.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_corner_heng_wan.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [pen]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":300,"_y":250,"uuid":"WzDjPKXPp9NAcqhSEtcH-","name":"heng_start_ref"},{"_x":600,"_y":250,"uuid":"5lb86re3bt5QmK5wUIxnE","name":"heng_end_ref"},{"_x":300,"_y":250,"uuid":"hOPiWxA2aPiAJFF4CRelX","name":"heng_start"},{"_x":600,"_y":250,"uuid":"n9smhtg8PrWN0OM1Vdmu3","name":"heng_end"},{"_x":600,"_y":250,"uuid":"V6tBO9_I2dCBBc4hONRAl","name":"wan_start"},{"_x":551.941932430908,"_y":519.6116135138184,"uuid":"sOBrz1NEtQmhBD0vIefAq","name":"wan_bend"},{"_x":700,"_y":750,"uuid":"07muYAZHcR0Qp6bTM4Lmf","name":"wan_end"},{"_x":700,"_y":750,"uuid":"WoSORyDYYvMDXuJtXSJKQ","name":"gou_start"},{"_x":760,"_y":690,"uuid":"yTfqdqniK4auDtwL575Lz","name":"gou_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"wan_start-wan_bend","start":"wan_start","end":"wan_bend"},{"name":"wan_bend-wan_end","start":"wan_bend","end":"wan_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"E9w0lRKMovq1BqprZ4Mzo","type":"anchor","x":300,"y":212.5,"origin":null},{"uuid":"p3aYyxV6TEbilWKI39O5b","type":"control","x":300,"y":212.5,"origin":"E9w0lRKMovq1BqprZ4Mzo"},{"uuid":"Q6EUZUCFQ3rLYVWUi2GKo","type":"control","x":320,"y":212.5,"origin":"oiDUyyXG_tp73Q2RgWDrF"},{"uuid":"oiDUyyXG_tp73Q2RgWDrF","type":"anchor","x":320,"y":212.5,"origin":null},{"uuid":"CN5AnmZY-6UTtKLPi4_qZ","type":"control","x":320,"y":220.83333333333334,"origin":"oiDUyyXG_tp73Q2RgWDrF"},{"uuid":"NP5046Ae_ctupVpXizuni","type":"control","x":326.6666666666667,"y":225,"origin":"9IZdz11DKkQno4P9J4vum"},{"uuid":"9IZdz11DKkQno4P9J4vum","type":"anchor","x":340,"y":225,"origin":null},{"uuid":"XaOkZJEskmgYMZXkbmh3D","type":"control","x":340,"y":225,"origin":"9IZdz11DKkQno4P9J4vum"},{"uuid":"RfeaM1HH7VaAqHZsVzKo-","type":"control","x":629.7471440707909,"y":225,"origin":"7-j9tUjcDrr3w0VPy7vs1"},{"uuid":"7-j9tUjcDrr3w0VPy7vs1","type":"anchor","x":629.7471440707909,"y":225,"origin":null},{"uuid":"729jx70Kj_iZpwalVTClv","type":"control","x":629.7471440707909,"y":225,"origin":"7-j9tUjcDrr3w0VPy7vs1"},{"uuid":"NZI4ZWHaeTIY02-XwxiX1","type":"control","x":624.6120604144805,"y":254.38708127961652,"origin":"ihn_BvDDVqPe4Y1ibFRtG"},{"uuid":"ihn_BvDDVqPe4Y1ibFRtG","type":"anchor","x":624.6120604144805,"y":254.38708127961652,"origin":null},{"uuid":"uJgrnZ34v_xO5--MreyaA","type":"control","x":599.7019589428478,"y":399.79895818417083,"origin":"ihn_BvDDVqPe4Y1ibFRtG"},{"uuid":"G5ecWX2lfwsgik90lxT4s","type":"control","x":620.9430003512227,"y":548.6257488847853,"origin":"TFL0M1Tca39tSolupAWlZ"},{"uuid":"TFL0M1Tca39tSolupAWlZ","type":"anchor","x":688.3384690383888,"y":680.0988106496959,"origin":null},{"uuid":"elhbQ8Yyw_zme9BsN8XyN","type":"control","x":698.7780899921431,"y":700.4641105310003,"origin":"TFL0M1Tca39tSolupAWlZ"},{"uuid":"dSr1h7f774RnQcS_YkcfW","type":"control","x":711.0689682808857,"y":703.5756926597869,"origin":"UMyhbf_tP9l3JkG9sBcz0"},{"uuid":"UMyhbf_tP9l3JkG9sBcz0","type":"anchor","x":725.2111039046166,"y":689.433557036056,"origin":null},{"uuid":"yZ9SHzy7evC3s2UHuwngs","type":"control","x":725.2111039046166,"y":689.433557036056,"origin":"UMyhbf_tP9l3JkG9sBcz0"},{"uuid":"LUG_aXo1bCP9EX3u2XJ0K","type":"control","x":742.3223304703363,"y":672.3223304703363,"origin":"Z1R7jotpm2Qc3514qH9sG"},{"uuid":"Z1R7jotpm2Qc3514qH9sG","type":"anchor","x":742.3223304703363,"y":672.3223304703363,"origin":null},{"uuid":"UASIkKgE1uIlT46PyWo_V","type":"control","x":742.3223304703363,"y":672.3223304703363,"origin":"Z1R7jotpm2Qc3514qH9sG"},{"uuid":"q0dlMnMbF5RcgaVcv13J_","type":"control","x":777.6776695296637,"y":707.6776695296637,"origin":"R2iUGf15ARFOPF2172yW0"},{"uuid":"R2iUGf15ARFOPF2172yW0","type":"anchor","x":777.6776695296637,"y":707.6776695296637,"origin":null},{"uuid":"NrPbr6-rFJUTafMc_v274","type":"control","x":777.6776695296637,"y":707.6776695296637,"origin":"R2iUGf15ARFOPF2172yW0"},{"uuid":"X4Zzpw_tcmbV-bazbG2JE","type":"control","x":715.3344845409142,"y":770.0208545184132,"origin":"9We76w2fz3e95xJooNFkb"},{"uuid":"9We76w2fz3e95xJooNFkb","type":"anchor","x":715.3344845409142,"y":770.0208545184132,"origin":null},{"uuid":"wV8uvP3jcNpqw2RS-xlD0","type":"control","x":701.1923489171833,"y":784.1629901421442,"origin":"9We76w2fz3e95xJooNFkb"},{"uuid":"gvSneKUvtt1fHKVqOeI6V","type":"control","x":683.2027841673577,"y":772.4377920877122,"origin":"JQ05rurXTIZM20dq_nzwB"},{"uuid":"JQ05rurXTIZM20dq_nzwB","type":"anchor","x":661.3657902914372,"y":734.8452603551174,"origin":null},{"uuid":"Q0Im5tQFqs_zsVRc88Ta8","type":"control","x":580.6218740953652,"y":595.8440659113207,"origin":"JQ05rurXTIZM20dq_nzwB"},{"uuid":"M2uPsqEiRl06zTqOSiooa","type":"control","x":549.0955507375223,"y":438.2124491221016,"origin":"DJ8Iv6mAdKHnVFbDO8BA-"},{"uuid":"DJ8Iv6mAdKHnVFbDO8BA-","type":"anchor","x":570.1663985939737,"y":278.84830186780033,"origin":null},{"uuid":"USpGLKcIV_8bccqkZea0e","type":"control","x":570.1663985939737,"y":278.84830186780033,"origin":"DJ8Iv6mAdKHnVFbDO8BA-"},{"uuid":"tzijgDD3YVyeOLmn8aP5b","type":"control","x":340,"y":278.84830186780033,"origin":"aJur7n90ITa60T66PC_0E"},{"uuid":"aJur7n90ITa60T66PC_0E","type":"anchor","x":340,"y":278.84830186780033,"origin":null},{"uuid":"PHr7F1LkDV4r2wLwe-84l","type":"control","x":326.6666666666667,"y":278.84830186780033,"origin":"aJur7n90ITa60T66PC_0E"},{"uuid":"fHB83dvpaQDlANwRP9vuF","type":"control","x":320,"y":283.014968534467,"origin":"SaQedUB1LYmlZSLAR4v-3"},{"uuid":"SaQedUB1LYmlZSLAR4v-3","type":"anchor","x":320,"y":291.34830186780033,"origin":null},{"uuid":"rwsILFM51oNbz3GXuitjF","type":"control","x":320,"y":291.34830186780033,"origin":"SaQedUB1LYmlZSLAR4v-3"},{"uuid":"dH3tPiZrt7T5xleCc-VhS","type":"control","x":300,"y":291.34830186780033,"origin":"_cbMDO-jSn4Ou6M1hYJe4"},{"uuid":"_cbMDO-jSn4Ou6M1hYJe4","type":"anchor","x":300,"y":291.34830186780033,"origin":null},{"uuid":"hT6XAfwBHYgdqzMotC-jf","type":"control","x":300,"y":291.34830186780033,"origin":"_cbMDO-jSn4Ou6M1hYJe4"},{"uuid":"Z0DuR8et30W7Bo-0UM7T-","type":"control","x":300,"y":212.5,"origin":"klRDtBPCwYTTUiQLbxUOt"},{"uuid":"klRDtBPCwYTTUiQLbxUOt","type":"anchor","x":300,"y":212.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":300,"y":587.5},"end":{"x":320,"y":587.5},"control1":{"x":300,"y":587.5},"control2":{"x":320,"y":587.5},"fill":false},{"type":2,"start":{"x":320,"y":587.5},"end":{"x":340,"y":575},"control1":{"x":320,"y":579.1666666666666},"control2":{"x":326.6666666666667,"y":575},"fill":false},{"type":2,"start":{"x":340,"y":575},"end":{"x":629.7471440707909,"y":575},"control1":{"x":340,"y":575},"control2":{"x":629.7471440707909,"y":575},"fill":false},{"type":2,"start":{"x":629.7471440707909,"y":575},"end":{"x":624.6120604144805,"y":545.6129187203835},"control1":{"x":629.7471440707909,"y":575},"control2":{"x":624.6120604144805,"y":545.6129187203835},"fill":false},{"type":2,"start":{"x":624.6120604144805,"y":545.6129187203835},"end":{"x":688.3384690383888,"y":119.9011893503041},"control1":{"x":599.7019589428478,"y":400.20104181582917},"control2":{"x":620.9430003512227,"y":251.37425111521475},"fill":false},{"type":2,"start":{"x":688.3384690383888,"y":119.9011893503041},"end":{"x":725.2111039046166,"y":110.56644296394404},"control1":{"x":698.7780899921431,"y":99.5358894689997},"control2":{"x":711.0689682808857,"y":96.42430734021309},"fill":false},{"type":2,"start":{"x":725.2111039046166,"y":110.56644296394404},"end":{"x":742.3223304703363,"y":127.67766952966372},"control1":{"x":725.2111039046166,"y":110.56644296394404},"control2":{"x":742.3223304703363,"y":127.67766952966372},"fill":false},{"type":2,"start":{"x":742.3223304703363,"y":127.67766952966372},"end":{"x":777.6776695296637,"y":92.32233047033628},"control1":{"x":742.3223304703363,"y":127.67766952966372},"control2":{"x":777.6776695296637,"y":92.32233047033628},"fill":false},{"type":2,"start":{"x":777.6776695296637,"y":92.32233047033628},"end":{"x":715.3344845409142,"y":29.979145481586784},"control1":{"x":777.6776695296637,"y":92.32233047033628},"control2":{"x":715.3344845409142,"y":29.979145481586784},"fill":false},{"type":2,"start":{"x":715.3344845409142,"y":29.979145481586784},"end":{"x":661.3657902914372,"y":65.15473964488262},"control1":{"x":701.1923489171833,"y":15.837009857855833},"control2":{"x":683.2027841673577,"y":27.562207912287818},"fill":false},{"type":2,"start":{"x":661.3657902914372,"y":65.15473964488262},"end":{"x":570.1663985939737,"y":521.1516981321997},"control1":{"x":580.6218740953652,"y":204.15593408867926},"control2":{"x":549.0955507375223,"y":361.7875508778984},"fill":false},{"type":2,"start":{"x":570.1663985939737,"y":521.1516981321997},"end":{"x":340,"y":521.1516981321997},"control1":{"x":570.1663985939737,"y":521.1516981321997},"control2":{"x":340,"y":521.1516981321997},"fill":false},{"type":2,"start":{"x":340,"y":521.1516981321997},"end":{"x":320,"y":508.65169813219967},"control1":{"x":326.6666666666667,"y":521.1516981321997},"control2":{"x":320,"y":516.985031465533},"fill":false},{"type":2,"start":{"x":320,"y":508.65169813219967},"end":{"x":300,"y":508.65169813219967},"control1":{"x":320,"y":508.65169813219967},"control2":{"x":300,"y":508.65169813219967},"fill":false},{"type":2,"start":{"x":300,"y":508.65169813219967},"end":{"x":300,"y":587.5},"control1":{"x":300,"y":508.65169813219967},"control2":{"x":300,"y":587.5},"fill":false}],"preview":[{"type":2,"start":{"x":30,"y":21.25},"end":{"x":32,"y":21.25},"control1":{"x":30,"y":21.25},"control2":{"x":32,"y":21.25},"fill":false},{"type":2,"start":{"x":32,"y":21.25},"end":{"x":34,"y":22.5},"control1":{"x":32,"y":22.083333333333336},"control2":{"x":32.66666666666667,"y":22.5},"fill":false},{"type":2,"start":{"x":34,"y":22.5},"end":{"x":62.97471440707909,"y":22.5},"control1":{"x":34,"y":22.5},"control2":{"x":62.97471440707909,"y":22.5},"fill":false},{"type":2,"start":{"x":62.97471440707909,"y":22.5},"end":{"x":62.46120604144806,"y":25.438708127961654},"control1":{"x":62.97471440707909,"y":22.5},"control2":{"x":62.46120604144806,"y":25.438708127961654},"fill":false},{"type":2,"start":{"x":62.46120604144806,"y":25.438708127961654},"end":{"x":68.83384690383888,"y":68.00988106496959},"control1":{"x":59.970195894284785,"y":39.979895818417084},"control2":{"x":62.094300035122274,"y":54.86257488847853},"fill":false},{"type":2,"start":{"x":68.83384690383888,"y":68.00988106496959},"end":{"x":72.52111039046166,"y":68.9433557036056},"control1":{"x":69.87780899921431,"y":70.04641105310003},"control2":{"x":71.10689682808857,"y":70.3575692659787},"fill":false},{"type":2,"start":{"x":72.52111039046166,"y":68.9433557036056},"end":{"x":74.23223304703363,"y":67.23223304703363},"control1":{"x":72.52111039046166,"y":68.9433557036056},"control2":{"x":74.23223304703363,"y":67.23223304703363},"fill":false},{"type":2,"start":{"x":74.23223304703363,"y":67.23223304703363},"end":{"x":77.76776695296638,"y":70.76776695296637},"control1":{"x":74.23223304703363,"y":67.23223304703363},"control2":{"x":77.76776695296638,"y":70.76776695296637},"fill":false},{"type":2,"start":{"x":77.76776695296638,"y":70.76776695296637},"end":{"x":71.53344845409143,"y":77.00208545184132},"control1":{"x":77.76776695296638,"y":70.76776695296637},"control2":{"x":71.53344845409143,"y":77.00208545184132},"fill":false},{"type":2,"start":{"x":71.53344845409143,"y":77.00208545184132},"end":{"x":66.13657902914372,"y":73.48452603551173},"control1":{"x":70.11923489171834,"y":78.41629901421442},"control2":{"x":68.32027841673577,"y":77.24377920877123},"fill":false},{"type":2,"start":{"x":66.13657902914372,"y":73.48452603551173},"end":{"x":57.01663985939737,"y":27.884830186780036},"control1":{"x":58.06218740953653,"y":59.58440659113208},"control2":{"x":54.90955507375224,"y":43.82124491221016},"fill":false},{"type":2,"start":{"x":57.01663985939737,"y":27.884830186780036},"end":{"x":34,"y":27.884830186780036},"control1":{"x":57.01663985939737,"y":27.884830186780036},"control2":{"x":34,"y":27.884830186780036},"fill":false},{"type":2,"start":{"x":34,"y":27.884830186780036},"end":{"x":32,"y":29.134830186780036},"control1":{"x":32.66666666666667,"y":27.884830186780036},"control2":{"x":32,"y":28.301496853446704},"fill":false},{"type":2,"start":{"x":32,"y":29.134830186780036},"end":{"x":30,"y":29.134830186780036},"control1":{"x":32,"y":29.134830186780036},"control2":{"x":30,"y":29.134830186780036},"fill":false},{"type":2,"start":{"x":30,"y":29.134830186780036},"end":{"x":30,"y":21.25},"control1":{"x":30,"y":29.134830186780036},"control2":{"x":30,"y":21.25},"fill":false}]}]}},{"uuid":"aOG9Gs3GGybAyJXMPr-d7","type":"system","name":"横折弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Wzliv57ZXtYj8tlDu_Suu","name":"横-长度","type":0,"value":300,"min":0,"max":1000},{"uuid":"ZYLDC6s0Xrcgm4vadNIml","name":"折-水平延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"3QBHL4gBRKE91dvvxJb01","name":"折-竖直延伸","type":0,"value":380,"min":0,"max":1000},{"uuid":"E8MPQaOGE4-lLnRj--j4P","name":"折-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"mS3KD149sMDwZa-90DokC","name":"折-弯曲度","type":0,"value":100,"min":0,"max":300},{"uuid":"jeDjg8a5LGo3XEFMZAMhp","name":"弯-长度","type":0,"value":380,"min":0,"max":1000},{"uuid":"WpbnOQp8KAlrgj8WWEXve","name":"钩-水平延伸","type":0,"value":60,"min":0,"max":300},{"uuid":"VZjprPp53tRSDa0nOt-cW","name":"钩-竖直延伸","type":0,"value":60,"min":0,"max":300},{"uuid":"mYcwc2J1TiYwcZVPy6umv","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"86WGbetFFHwHPKMhCKMrg","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"sc7YUK-TiFnR2sFF0NC77","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"7oRgC7uT_SwAQVzhgefFC","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"ug3BDXkYG9hknIxccdF2u","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"T0IU3Ak6YHGHTd_ri1jsP","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"jpOhOeYPnojFdTS3dzpHg","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"CdAQqUCZXF0fvZIs3UAqN","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_aOG9Gs3GGybAyJXMPr_d7 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 350\nconst y0 = 300\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_horizonalSpan: glyph.getParam('折-水平延伸'),\n  zhe_verticalSpan: glyph.getParam('折-竖直延伸'),\n  zhe_bendCursor: glyph.getParam('折-弯曲游标'),\n  zhe_bendDegree: glyph.getParam('折-弯曲度') + 30 * global_params.bending_degree,\n  wan_length: glyph.getParam('弯-长度'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_bend'] = {\n        x: glyph.tempData['zhe_bend'].x + deltaX,\n        y: glyph.tempData['zhe_bend'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_bend'] = {\n        x: glyph.tempData['zhe_bend'].x + deltaX,\n        y: glyph.tempData['zhe_bend'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe_bend': {\n      jointsMap['zhe_bend'] = {\n        x: glyph.tempData['zhe_bend'].x + deltaX,\n        y: glyph.tempData['zhe_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['zhe_start'], jointsMap['zhe_end'])\n      jointsMap['zhe_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y  + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['zhe_start'], jointsMap['zhe_end'])\n      jointsMap['zhe_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y  + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { zhe_bendCursor: bendCursor, zhe_bendDegree: bendDegree } = params\n  const horizonalSpan = Math.abs(end.x - start.x)\n  const verticalSpan = Math.abs(end.y - start.y)\n  const cursor_x = start.x - bendCursor * horizonalSpan\n  const cursor_y = start.y + bendCursor * verticalSpan\n  const angle = Math.atan2(verticalSpan, horizonalSpan)\n  \n  const bend = {\n    x: cursor_x - bendDegree * Math.sin(angle),\n    y: cursor_y - bendDegree * Math.cos(angle),\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-水平延伸', _params.zhe_horizonalSpan)\n  glyph.setParam('折-竖直延伸', _params.zhe_verticalSpan)\n  glyph.setParam('折-弯曲游标', _params.zhe_bendCursor)\n  glyph.setParam('折-弯曲度', _params.zhe_bendDegree - 30 * global_params.bending_degree)\n  glyph.setParam('弯-长度', _params.wan_length)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end, zhe_bend, wan_start, wan_end, gou_start, gou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_horizonal_span_range = glyph.getParamRange('折-水平延伸')\n  const zhe_vertical_span_range = glyph.getParamRange('折-竖直延伸')\n  const zhe_bend_cursor_range = glyph.getParamRange('折-弯曲游标')\n  const zhe_bend_degree_range = glyph.getParamRange('折-弯曲度')\n  const wan_length_range = glyph.getParamRange('弯-长度')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_horizonalSpan = range(zhe_start.x - zhe_end.x, zhe_horizonal_span_range)\n  const zhe_verticalSpan = range(zhe_end.y - zhe_start.y, zhe_vertical_span_range)\n  const zhe_data = FP.distanceAndFootPoint(zhe_start, zhe_end, zhe_bend)\n  const zhe_bendCursor = range(zhe_data.percentageFromA, zhe_bend_cursor_range)\n  const zhe_bendDegree = range(zhe_data.distance, zhe_bend_degree_range)\n  const wan_length = range(wan_end.x - wan_start.x, wan_length_range)\n  const gou_horizonalSpan = range(gou_end.x - gou_start.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_start.y - gou_end.y, gou_vertical_span_range)\n  return {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    zhe_bendCursor,\n    zhe_bendDegree,\n    wan_length,\n    gou_verticalSpan,\n    gou_horizonalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    zhe_bendCursor,\n    zhe_bendDegree,\n    wan_length,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n  } = params\n\n  // 横\n  const heng_start = new FP.Joint(\n    'heng_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end = new FP.Joint(\n    'heng_end',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n\n  // 折\n  const zhe_start = new FP.Joint(\n    'zhe_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe_end = new FP.Joint(\n    'zhe_end',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n\n  const zhe_length = distance(zhe_start, zhe_end)\n  const zhe_cursor_x = zhe_start.x - zhe_bendCursor * zhe_horizonalSpan\n  const zhe_cursor_y = zhe_start.y + zhe_bendCursor * zhe_verticalSpan\n  const zhe_angle = Math.atan2(zhe_verticalSpan, zhe_horizonalSpan)\n\n  const zhe_bend = new FP.Joint(\n    'zhe_bend',\n    {\n      x: zhe_cursor_x - zhe_bendDegree * Math.sin(zhe_angle),\n      y: zhe_cursor_y - zhe_bendDegree * Math.cos(zhe_angle),\n    },\n  )\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x + gou_horizonalSpan,\n      y: gou_start.y - gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_bend)\n  glyph.addJoint(zhe_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_bend,\n    zhe_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_bend))\n  glyph.addRefLine(refline(zhe_bend, zhe_end))\n  glyph.addRefLine(refline(wan_start, wan_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_bend,\n    zhe_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe_curves, out_zhe_points, in_zhe_curves, in_zhe_points } = FP.getCurveContours('zhe', { zhe_start, zhe_bend, zhe_end }, weight)\n  const { out_wan_start, out_wan_end, in_wan_start, in_wan_end } = FP.getLineContours('wan', { wan_start, wan_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_heng_zhe, corner_index: in_corner_index_heng_zhe } = FP.getIntersection(\n    { type: 'curve', points: in_zhe_points },\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n  )\n  const { corner: out_corner_zhe_wan, corner_index: out_corner_index_zhe_wan } = FP.getIntersection(\n    { type: 'curve', points: out_zhe_points },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  )\n  const { corner: in_corner_zhe_wan } = FP.getIntersection(\n    { type: 'line', start: in_zhe_curves[in_zhe_curves.length - 1].control2, end: in_zhe_curves[in_zhe_curves.length - 1].end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  )\n  const { corner: in_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  let { curves: in_zhe_curves_final } = FP.fitCurvesByPoints(in_zhe_points.slice(in_corner_index_heng_zhe))\n  let { curves: out_zhe_curves_final } = FP.fitCurvesByPoints(out_zhe_points.slice(0, out_corner_index_zhe_wan))\n\n  // 计算折弯拐角处内外圆角相关的点与数据\n  let in_radius = 80 * bending_degree\n  let out_radius = 80 * bending_degree\n  // 如果in_radius超出折或弯的长度，取折或弯的最小长度\n  const in_radius_min_length = Math.min(\n    getDistance(in_zhe_curves_final[in_zhe_curves_final.length - 1].end, in_corner_heng_zhe),\n    getDistance(in_wan_start, in_wan_end),\n  )\n  const out_radius_min_length = Math.min(\n    getDistance(out_zhe_curves_final[out_zhe_curves_final.length - 1].end, out_corner_wan_gou),\n    getDistance(out_zhe_curves_final[0].start, out_zhe_curves_final[out_zhe_curves_final.length - 1].end),\n  )\n  if (in_radius >= in_radius_min_length) {\n    in_radius = in_radius_min_length\n  }\n  if (out_radius >= out_radius_min_length) {\n    out_radius = out_radius_min_length\n  }\n  const in_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(in_zhe_curves_final), in_radius, true)\n  const in_radius_control = FP.getIntersection(\n    { type: 'line', start: in_radius_data.tangent.start, end: in_radius_data.tangent.end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  ).corner\n  const in_radius_start = in_radius_data.point\n  const in_radius_end = {\n    x: in_wan_start.x + in_radius,\n    y: in_wan_start.y,\n  }\n  const out_radius_data = FP.getRadiusPointsOnCurve(FP.getCurvesPoints(out_zhe_curves_final), out_radius, true)\n  const out_radius_control = FP.getIntersection(\n    { type: 'line', start: out_radius_data.tangent.start, end: out_radius_data.tangent.end },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  ).corner\n  const out_radius_start = out_radius_data.point\n  const out_radius_end = {\n    x: out_zhe_curves_final[out_zhe_curves_final.length - 1].end.x + out_radius,\n    y: out_zhe_curves_final[out_zhe_curves_final.length - 1].end.y,\n  }\n  in_zhe_curves_final = in_radius_data.final_curves\n  out_zhe_curves_final = out_radius_data.final_curves\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius_wan_gou = 30 * bending_degree\n  let out_radius_wan_gou = 30 * bending_degree\n  // 如果in_radius超出弯或钩的长度，取弯或钩的最小长度\n  const in_radius_min_length_zhe_gou = Math.min(\n    getDistance(in_gou_start, in_gou_end),\n    getDistance(in_wan_end, in_radius_end),\n  )\n  const out_radius_min_length_zhe_gou = Math.min(\n    getDistance(out_corner_wan_gou, out_gou_end),\n    getDistance(out_corner_wan_gou, out_radius_end),\n  )\n  if (in_radius_wan_gou >= in_radius_min_length_zhe_gou) {\n    in_radius_wan_gou = in_radius_min_length_zhe_gou\n  }\n  if (out_radius_wan_gou >= out_radius_min_length_zhe_gou) {\n    out_radius_wan_gou = out_radius_min_length_zhe_gou\n  }\n  const in_radius_start_wan_gou = {\n    x: in_wan_end.x - in_radius_wan_gou,\n    y: in_wan_end.y,\n  }\n  const in_radius_end_wan_gou = getRadiusPoint({\n    start: in_gou_start,\n    end: in_gou_end,\n    radius: in_radius_wan_gou,\n  })\n  const out_radius_start_wan_gou = {\n    x: out_corner_wan_gou.x - out_radius_wan_gou,\n    y: out_corner_wan_gou.y,\n  }\n  const out_radius_end_wan_gou = getRadiusPoint({\n    start: out_corner_wan_gou,\n    end: out_gou_end,\n    radius: out_radius_wan_gou,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_zhe_curves_final[0].start.y - weight)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_zhe_curves_final[0].start.y - weight,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_zhe_curves_final[0].start.y - weight,\n    )\n  }\n  pen.lineTo(out_zhe_curves_final[0].start.x, out_zhe_curves_final[0].start.y - weight)\n  pen.lineTo(out_zhe_curves_final[0].start.x, out_zhe_curves_final[0].start.y)\n  for (let i = 0; i < out_zhe_curves_final.length; i++) {\n    const curve = out_zhe_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n  // 绘制外侧折弯圆角\n  pen.quadraticBezierTo(out_radius_control.x, out_radius_control.y, out_radius_end.x, out_radius_end.y)\n  pen.lineTo(out_radius_start_wan_gou.x, out_radius_start_wan_gou.y)\n  pen.quadraticBezierTo(out_corner_wan_gou.x, out_corner_wan_gou.y, out_radius_end_wan_gou.x, out_radius_end_wan_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  pen.lineTo(in_radius_end_wan_gou.x, in_radius_end_wan_gou.y)\n  pen.quadraticBezierTo(in_corner_wan_gou.x, in_corner_wan_gou.y, in_radius_start_wan_gou.x, in_radius_start_wan_gou.y)\n  // 绘制内侧折弯圆角\n  pen.lineTo(in_radius_end.x, in_radius_end.y)\n  pen.quadraticBezierTo(in_radius_control.x, in_radius_control.y, in_radius_start.x, in_radius_start.y)\n  for (let i = in_zhe_curves_final.length - 1; i >= 0; i--) {\n    const curve = in_zhe_curves_final[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_zhe_curves_final[0].start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_zhe_curves_final[0].start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_zhe_curves_final[0].start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_zhe_curves_final[0].start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_zhe_curves_final[0].start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_zhe_curves_final[0].start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_zhe_curves_final[0].start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_zhe_curves_final[0].start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_zhe_curves_final[0].start.y - weight - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":350,"_y":300,"uuid":"5Wlkx_U_D8keI3tsJO1I8","name":"heng_start"},{"_x":650,"_y":300,"uuid":"T7bBvPUuTUO_X73qgRPZ-","name":"heng_end"},{"_x":650,"_y":300,"uuid":"jsXfS4fHimyvi_1tOmtIS","name":"zhe_start"},{"_x":397.9652404806546,"_y":409.4462424847273,"uuid":"dOwiL2bApV_46d4I7cmrO","name":"zhe_bend"},{"_x":350,"_y":680,"uuid":"eO9iN6mFxPaW0Pe_UtHi5","name":"zhe_end"},{"_x":350,"_y":680,"uuid":"575-MDE0n0oDNEnEof0qg","name":"wan_start"},{"_x":730,"_y":680,"uuid":"oR2exwcVhPJ_BQbU8ElNh","name":"wan_end"},{"_x":730,"_y":680,"uuid":"9Q7PUbyi5344eGnGioDav","name":"gou_start"},{"_x":790,"_y":620,"uuid":"RpURArujgSI0-6HhobfmT","name":"gou_end"}],"_reflines":[{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_bend","start":"zhe_start","end":"zhe_bend"},{"name":"zhe_bend-zhe_end","start":"zhe_bend","end":"zhe_end"},{"name":"wan_start-wan_end","start":"wan_start","end":"wan_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"8NMF4IMCgpxjTfhgAoGG8","type":"anchor","x":350,"y":260.4312101163556,"origin":null},{"uuid":"K_f1WMVppfqt2aN8gg1o0","type":"control","x":350,"y":260.4312101163556,"origin":"8NMF4IMCgpxjTfhgAoGG8"},{"uuid":"lT05KD5urjSRXZE0OLCx_","type":"control","x":370,"y":260.4312101163556,"origin":"Jm_1Ow0jPUsMnW0MMmB-j"},{"uuid":"Jm_1Ow0jPUsMnW0MMmB-j","type":"anchor","x":370,"y":260.4312101163556,"origin":null},{"uuid":"7m-zP3lL-4FtdhkPWeRX2","type":"control","x":370,"y":268.7645434496889,"origin":"Jm_1Ow0jPUsMnW0MMmB-j"},{"uuid":"TyIpvl19LXgCxMudBI9t3","type":"control","x":376.6666666666667,"y":272.9312101163556,"origin":"cOSZeHmtMx2yW0NCCJCe0"},{"uuid":"cOSZeHmtMx2yW0NCCJCe0","type":"anchor","x":390,"y":272.9312101163556,"origin":null},{"uuid":"r8MvSGGWvjRqUTuwWeNtR","type":"control","x":390,"y":272.9312101163556,"origin":"cOSZeHmtMx2yW0NCCJCe0"},{"uuid":"tcCY_-GpeA20JmZxjmYFx","type":"control","x":659.9578914735777,"y":272.9312101163556,"origin":"LK3ECfQXtp5_cGLmo0PGJ"},{"uuid":"LK3ECfQXtp5_cGLmo0PGJ","type":"anchor","x":659.9578914735777,"y":272.9312101163556,"origin":null},{"uuid":"wYwzaWVTgxLh9_hJmCLQP","type":"control","x":659.9578914735777,"y":272.9312101163556,"origin":"LK3ECfQXtp5_cGLmo0PGJ"},{"uuid":"OfUMZzXH1bvuXB21y-Pfe","type":"control","x":659.9578914735777,"y":322.9312101163556,"origin":"2umfMcmamDcY1lCNL3irl"},{"uuid":"2umfMcmamDcY1lCNL3irl","type":"anchor","x":659.9578914735777,"y":322.9312101163556,"origin":null},{"uuid":"DUpfxn0wziqS_ge1-eQl1","type":"control","x":546.6291340152143,"y":373.2704843215641,"origin":"2umfMcmamDcY1lCNL3irl"},{"uuid":"MsxxTWwOkdx-MRwXuTqAg","type":"control","x":455.1890543447447,"y":460.16277339355565,"origin":"fyT1TzLqRBUgQk9mp1SoV"},{"uuid":"fyT1TzLqRBUgQk9mp1SoV","type":"anchor","x":406.37795974181984,"y":574.8837825978374,"origin":null},{"uuid":"Malj17ACmhZqnn1mzodE8","type":"control","x":383.6529140332813,"y":628.2945941992791,"origin":"fyT1TzLqRBUgQk9mp1SoV"},{"uuid":"KvsggGHtkpZZiLGqMdBEn","type":"control","x":401.8103154242944,"y":654.5784786399914,"origin":"BUO7ISH8R8HsUp55btDIq"},{"uuid":"BUO7ISH8R8HsUp55btDIq","type":"anchor","x":460.8501639148592,"y":653.7354359199744,"origin":null},{"uuid":"Lrf46LVo0S9RIpeJWbmA5","type":"control","x":460.8501639148592,"y":653.7354359199744,"origin":"BUO7ISH8R8HsUp55btDIq"},{"uuid":"U6GulpHDRYQq4B2Dcxm38","type":"control","x":689.6446609406726,"y":655,"origin":"UA9W5XFAb1n9H1VWZ6vHC"},{"uuid":"UA9W5XFAb1n9H1VWZ6vHC","type":"anchor","x":689.6446609406726,"y":655,"origin":null},{"uuid":"KYRycN64Ry6Euuox2ju8m","type":"control","x":709.6446609406726,"y":655,"origin":"UA9W5XFAb1n9H1VWZ6vHC"},{"uuid":"W7FEQdGBcQVGjYWNk6_Ct","type":"control","x":726.715728752538,"y":647.9289321881346,"origin":"RSdTdzVJZAP5CGF_mtOIC"},{"uuid":"RSdTdzVJZAP5CGF_mtOIC","type":"anchor","x":740.8578643762689,"y":633.7867965644036,"origin":null},{"uuid":"jMg5hI8uPxS8uizCq5GLv","type":"control","x":740.8578643762689,"y":633.7867965644036,"origin":"RSdTdzVJZAP5CGF_mtOIC"},{"uuid":"nk7zHV_w91lKRm1a4XKI0","type":"control","x":772.3223304703363,"y":602.3223304703363,"origin":"z4BW0pjHhBz3fnSAxS3HC"},{"uuid":"z4BW0pjHhBz3fnSAxS3HC","type":"anchor","x":772.3223304703363,"y":602.3223304703363,"origin":null},{"uuid":"jY8epJo3E-cmgK3mtILNt","type":"control","x":772.3223304703363,"y":602.3223304703363,"origin":"z4BW0pjHhBz3fnSAxS3HC"},{"uuid":"3fP-d33jKeAcasj3peVzw","type":"control","x":807.6776695296637,"y":637.6776695296637,"origin":"5v3IRBZFnDeGNJGd9eShR"},{"uuid":"5v3IRBZFnDeGNJGd9eShR","type":"anchor","x":807.6776695296637,"y":637.6776695296637,"origin":null},{"uuid":"llKRr-BUR9TuNdcdZO3aR","type":"control","x":807.6776695296637,"y":637.6776695296637,"origin":"5v3IRBZFnDeGNJGd9eShR"},{"uuid":"LE-Re_aae2gA3H51iOm1I","type":"control","x":768.8908729652601,"y":676.4644660940673,"origin":"fyOneh8GpmqlX25xkaI-Q"},{"uuid":"fyOneh8GpmqlX25xkaI-Q","type":"anchor","x":768.8908729652601,"y":676.4644660940673,"origin":null},{"uuid":"6tcwcjorII3hpVqJyZYrL","type":"control","x":749.8671836946384,"y":695.4881553646891,"origin":"fyOneh8GpmqlX25xkaI-Q"},{"uuid":"z8DyzFCN4xYex0kzftikA","type":"control","x":726.903559372885,"y":705,"origin":"3Sy4RA84SZ6DM79Mxsxf0"},{"uuid":"3Sy4RA84SZ6DM79Mxsxf0","type":"anchor","x":700,"y":705,"origin":null},{"uuid":"Fx-WFSi4OoXvUhDInsbXr","type":"control","x":700,"y":705,"origin":"3Sy4RA84SZ6DM79Mxsxf0"},{"uuid":"lmNJ7MIyrFeFNUc3zLNPE","type":"control","x":430,"y":705,"origin":"Ra1_3fcODqRrc2WtllR67"},{"uuid":"Ra1_3fcODqRrc2WtllR67","type":"anchor","x":430,"y":705,"origin":null},{"uuid":"PALAVqi6eTaJJ6WYODi8f","type":"control","x":349.55625300638894,"y":705,"origin":"Ra1_3fcODqRrc2WtllR67"},{"uuid":"QKLQWU2Cw7m9TOkaeGUr7","type":"control","x":321.3668034912478,"y":668.7067809236156,"origin":"UQkiOtvV7DmlUOPj8PM9s"},{"uuid":"UQkiOtvV7DmlUOPj8PM9s","type":"anchor","x":345.4316514545767,"y":596.1203427708467,"origin":null},{"uuid":"uIRr5A8UU-3Ji1a82wVaS","type":"control","x":381.89918103846964,"y":486.1238830068288,"origin":"UQkiOtvV7DmlUOPj8PM9s"},{"uuid":"b946DBJhWmwnS5w60wB-O","type":"control","x":451.32609270076875,"y":391.18085238180555,"origin":"p60dAvJCOmUD541Ga9Q-i"},{"uuid":"p60dAvJCOmUD541Ga9Q-i","type":"anchor","x":547.8701831027175,"y":326.5090212848961,"origin":null},{"uuid":"nBCPlULiOR6-Ngmx9Xt9n","type":"control","x":547.8701831027175,"y":326.5090212848961,"origin":"p60dAvJCOmUD541Ga9Q-i"},{"uuid":"ZhSpv8kEe9Z55vlfbjNM8","type":"control","x":390,"y":326.5090212848961,"origin":"j0D1_rP1DYSe4b1BpkZhf"},{"uuid":"j0D1_rP1DYSe4b1BpkZhf","type":"anchor","x":390,"y":326.5090212848961,"origin":null},{"uuid":"1gDo5EKIP6W-oCgQh4QSY","type":"control","x":376.6666666666667,"y":326.5090212848961,"origin":"j0D1_rP1DYSe4b1BpkZhf"},{"uuid":"o_xC6gBfpeSDbQPYAt_-4","type":"control","x":370,"y":330.6756879515628,"origin":"w4r0JHmFRZAv261OLU6Vd"},{"uuid":"w4r0JHmFRZAv261OLU6Vd","type":"anchor","x":370,"y":339.0090212848961,"origin":null},{"uuid":"P8-PYFlem3ido3RjFD9Wv","type":"control","x":370,"y":339.0090212848961,"origin":"w4r0JHmFRZAv261OLU6Vd"},{"uuid":"HDF5h1vo6uyJysfsHtzjG","type":"control","x":350,"y":339.0090212848961,"origin":"LH4N4g9ivDFKop71c69h4"},{"uuid":"LH4N4g9ivDFKop71c69h4","type":"anchor","x":350,"y":339.0090212848961,"origin":null},{"uuid":"6-KJwXVDSeKdvRIuWkXJ4","type":"control","x":350,"y":339.0090212848961,"origin":"LH4N4g9ivDFKop71c69h4"},{"uuid":"cP0YuOoDUc0sLcEuRQK_G","type":"control","x":350,"y":260.4312101163556,"origin":"vJD53Hksn4n60DDZDsmr0"},{"uuid":"vJD53Hksn4n60DDZDsmr0","type":"anchor","x":350,"y":260.4312101163556,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":350,"y":539.5687898836444},"end":{"x":370,"y":539.5687898836444},"control1":{"x":350,"y":539.5687898836444},"control2":{"x":370,"y":539.5687898836444},"fill":false},{"type":2,"start":{"x":370,"y":539.5687898836444},"end":{"x":390,"y":527.0687898836444},"control1":{"x":370,"y":531.235456550311},"control2":{"x":376.6666666666667,"y":527.0687898836444},"fill":false},{"type":2,"start":{"x":390,"y":527.0687898836444},"end":{"x":659.9578914735777,"y":527.0687898836444},"control1":{"x":390,"y":527.0687898836444},"control2":{"x":659.9578914735777,"y":527.0687898836444},"fill":false},{"type":2,"start":{"x":659.9578914735777,"y":527.0687898836444},"end":{"x":659.9578914735777,"y":477.0687898836444},"control1":{"x":659.9578914735777,"y":527.0687898836444},"control2":{"x":659.9578914735777,"y":477.0687898836444},"fill":false},{"type":2,"start":{"x":659.9578914735777,"y":477.0687898836444},"end":{"x":406.37795974181984,"y":225.11621740216265},"control1":{"x":546.6291340152143,"y":426.729515678436},"control2":{"x":455.1890543447447,"y":339.83722660644435},"fill":false},{"type":2,"start":{"x":406.37795974181984,"y":225.11621740216265},"end":{"x":460.8501639148592,"y":146.2645640800256},"control1":{"x":383.6529140332813,"y":171.70540580072088},"control2":{"x":401.8103154242944,"y":145.42152136000857},"fill":false},{"type":2,"start":{"x":460.8501639148592,"y":146.2645640800256},"end":{"x":689.6446609406726,"y":145},"control1":{"x":460.8501639148592,"y":146.2645640800256},"control2":{"x":689.6446609406726,"y":145},"fill":false},{"type":2,"start":{"x":689.6446609406726,"y":145},"end":{"x":740.8578643762689,"y":166.21320343559637},"control1":{"x":709.6446609406726,"y":145},"control2":{"x":726.715728752538,"y":152.07106781186542},"fill":false},{"type":2,"start":{"x":740.8578643762689,"y":166.21320343559637},"end":{"x":772.3223304703363,"y":197.67766952966372},"control1":{"x":740.8578643762689,"y":166.21320343559637},"control2":{"x":772.3223304703363,"y":197.67766952966372},"fill":false},{"type":2,"start":{"x":772.3223304703363,"y":197.67766952966372},"end":{"x":807.6776695296637,"y":162.32233047033628},"control1":{"x":772.3223304703363,"y":197.67766952966372},"control2":{"x":807.6776695296637,"y":162.32233047033628},"fill":false},{"type":2,"start":{"x":807.6776695296637,"y":162.32233047033628},"end":{"x":768.8908729652601,"y":123.53553390593265},"control1":{"x":807.6776695296637,"y":162.32233047033628},"control2":{"x":768.8908729652601,"y":123.53553390593265},"fill":false},{"type":2,"start":{"x":768.8908729652601,"y":123.53553390593265},"end":{"x":700,"y":95},"control1":{"x":749.8671836946384,"y":104.51184463531092},"control2":{"x":726.903559372885,"y":95},"fill":false},{"type":2,"start":{"x":700,"y":95},"end":{"x":430,"y":95},"control1":{"x":700,"y":95},"control2":{"x":430,"y":95},"fill":false},{"type":2,"start":{"x":430,"y":95},"end":{"x":345.4316514545767,"y":203.87965722915328},"control1":{"x":349.55625300638894,"y":95},"control2":{"x":321.3668034912478,"y":131.2932190763844},"fill":false},{"type":2,"start":{"x":345.4316514545767,"y":203.87965722915328},"end":{"x":547.8701831027175,"y":473.4909787151039},"control1":{"x":381.89918103846964,"y":313.8761169931712},"control2":{"x":451.32609270076875,"y":408.8191476181944},"fill":false},{"type":2,"start":{"x":547.8701831027175,"y":473.4909787151039},"end":{"x":390,"y":473.4909787151039},"control1":{"x":547.8701831027175,"y":473.4909787151039},"control2":{"x":390,"y":473.4909787151039},"fill":false},{"type":2,"start":{"x":390,"y":473.4909787151039},"end":{"x":370,"y":460.9909787151039},"control1":{"x":376.6666666666667,"y":473.4909787151039},"control2":{"x":370,"y":469.32431204843715},"fill":false},{"type":2,"start":{"x":370,"y":460.9909787151039},"end":{"x":350,"y":460.9909787151039},"control1":{"x":370,"y":460.9909787151039},"control2":{"x":350,"y":460.9909787151039},"fill":false},{"type":2,"start":{"x":350,"y":460.9909787151039},"end":{"x":350,"y":539.5687898836444},"control1":{"x":350,"y":460.9909787151039},"control2":{"x":350,"y":539.5687898836444},"fill":false}],"preview":[{"type":2,"start":{"x":35,"y":26.043121011635563},"end":{"x":37,"y":26.043121011635563},"control1":{"x":35,"y":26.043121011635563},"control2":{"x":37,"y":26.043121011635563},"fill":false},{"type":2,"start":{"x":37,"y":26.043121011635563},"end":{"x":39,"y":27.293121011635563},"control1":{"x":37,"y":26.87645434496889},"control2":{"x":37.66666666666667,"y":27.293121011635563},"fill":false},{"type":2,"start":{"x":39,"y":27.293121011635563},"end":{"x":65.99578914735777,"y":27.293121011635563},"control1":{"x":39,"y":27.293121011635563},"control2":{"x":65.99578914735777,"y":27.293121011635563},"fill":false},{"type":2,"start":{"x":65.99578914735777,"y":27.293121011635563},"end":{"x":65.99578914735777,"y":32.29312101163556},"control1":{"x":65.99578914735777,"y":27.293121011635563},"control2":{"x":65.99578914735777,"y":32.29312101163556},"fill":false},{"type":2,"start":{"x":65.99578914735777,"y":32.29312101163556},"end":{"x":40.637795974181984,"y":57.48837825978374},"control1":{"x":54.66291340152143,"y":37.32704843215641},"control2":{"x":45.518905434474476,"y":46.01627733935557},"fill":false},{"type":2,"start":{"x":40.637795974181984,"y":57.48837825978374},"end":{"x":46.08501639148592,"y":65.37354359199745},"control1":{"x":38.365291403328136,"y":62.829459419927915},"control2":{"x":40.181031542429444,"y":65.45784786399915},"fill":false},{"type":2,"start":{"x":46.08501639148592,"y":65.37354359199745},"end":{"x":68.96446609406726,"y":65.5},"control1":{"x":46.08501639148592,"y":65.37354359199745},"control2":{"x":68.96446609406726,"y":65.5},"fill":false},{"type":2,"start":{"x":68.96446609406726,"y":65.5},"end":{"x":74.0857864376269,"y":63.37867965644037},"control1":{"x":70.96446609406726,"y":65.5},"control2":{"x":72.6715728752538,"y":64.79289321881346},"fill":false},{"type":2,"start":{"x":74.0857864376269,"y":63.37867965644037},"end":{"x":77.23223304703363,"y":60.23223304703363},"control1":{"x":74.0857864376269,"y":63.37867965644037},"control2":{"x":77.23223304703363,"y":60.23223304703363},"fill":false},{"type":2,"start":{"x":77.23223304703363,"y":60.23223304703363},"end":{"x":80.76776695296638,"y":63.767766952966376},"control1":{"x":77.23223304703363,"y":60.23223304703363},"control2":{"x":80.76776695296638,"y":63.767766952966376},"fill":false},{"type":2,"start":{"x":80.76776695296638,"y":63.767766952966376},"end":{"x":76.88908729652601,"y":67.64644660940674},"control1":{"x":80.76776695296638,"y":63.767766952966376},"control2":{"x":76.88908729652601,"y":67.64644660940674},"fill":false},{"type":2,"start":{"x":76.88908729652601,"y":67.64644660940674},"end":{"x":70,"y":70.5},"control1":{"x":74.98671836946384,"y":69.54881553646891},"control2":{"x":72.6903559372885,"y":70.5},"fill":false},{"type":2,"start":{"x":70,"y":70.5},"end":{"x":43,"y":70.5},"control1":{"x":70,"y":70.5},"control2":{"x":43,"y":70.5},"fill":false},{"type":2,"start":{"x":43,"y":70.5},"end":{"x":34.54316514545767,"y":59.612034277084675},"control1":{"x":34.95562530063889,"y":70.5},"control2":{"x":32.13668034912478,"y":66.87067809236156},"fill":false},{"type":2,"start":{"x":34.54316514545767,"y":59.612034277084675},"end":{"x":54.787018310271755,"y":32.65090212848961},"control1":{"x":38.18991810384696,"y":48.61238830068288},"control2":{"x":45.13260927007688,"y":39.118085238180555},"fill":false},{"type":2,"start":{"x":54.787018310271755,"y":32.65090212848961},"end":{"x":39,"y":32.65090212848961},"control1":{"x":54.787018310271755,"y":32.65090212848961},"control2":{"x":39,"y":32.65090212848961},"fill":false},{"type":2,"start":{"x":39,"y":32.65090212848961},"end":{"x":37,"y":33.90090212848961},"control1":{"x":37.66666666666667,"y":32.65090212848961},"control2":{"x":37,"y":33.067568795156284},"fill":false},{"type":2,"start":{"x":37,"y":33.90090212848961},"end":{"x":35,"y":33.90090212848961},"control1":{"x":37,"y":33.90090212848961},"control2":{"x":35,"y":33.90090212848961},"fill":false},{"type":2,"start":{"x":35,"y":33.90090212848961},"end":{"x":35,"y":26.043121011635563},"control1":{"x":35,"y":33.90090212848961},"control2":{"x":35,"y":26.043121011635563},"fill":false}]}]}},{"uuid":"ZlFZCcHlumIbeE4wIxlE2","type":"system","name":"横撇弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"LT4DvZe6CiRGTvHOpxTA0","name":"横-长度","type":0,"value":260,"min":0,"max":1000},{"uuid":"HGFEXrYNMJ6aSIxi-GcLC","name":"撇-水平延伸","type":0,"value":120,"min":0,"max":1000},{"uuid":"R-yLyKAj3cYKMp7Lm0BM6","name":"撇-竖直延伸","type":0,"value":200,"min":0,"max":1000},{"uuid":"qWRw0SBj3k33xDHYUYdDc","name":"弯钩-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"RaL__1ftCIGElESrrdCdh","name":"弯钩-弯曲游标","type":0,"value":0.5,"min":0,"max":1},{"uuid":"XWIPwsuGftoIllwAGf9MT","name":"弯钩-弯曲度","type":0,"value":150,"min":0,"max":500},{"uuid":"u5CJOsXJqc9XIiHp_HbvD","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"q0Keb6etHOY00zBR_ujpW","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"tMERYWZPy7iSRqC41hbXh","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"GhS2ljVK8914YaGxc5gyB","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"ZN3tEJRGyFJICrO5pVMe7","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"vu5Qf7efGy_14JdFvyPiE","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"Os__1gZ3y75gNwIxdCvD6","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"bmDO1Y2IAK58y_yGm431_","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_ZlFZCcHlumIbeE4wIxlE2 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 370\nconst y0 = 245\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  pie_horizonalSpan: glyph.getParam('撇-水平延伸'),\n  pie_verticalSpan: glyph.getParam('撇-竖直延伸'),\n  wangou_verticalSpan: glyph.getParam('弯钩-竖直延伸'),\n  wangou_bendCursor: glyph.getParam('弯钩-弯曲游标'),\n  wangou_bendDegree: glyph.getParam('弯钩-弯曲度') + 30 * global_params.bending_degree,\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      jointsMap['wangou_start'] = {\n        x: glyph.tempData['wangou_start'].x + deltaX,\n        y: glyph.tempData['wangou_start'].y,\n      }\n      jointsMap['wangou_bend'] = {\n        x: glyph.tempData['wangou_bend'].x + deltaX,\n        y: glyph.tempData['wangou_bend'].y,\n      }\n      jointsMap['wangou_end'] = {\n        x: glyph.tempData['wangou_end'].x + deltaX,\n        y: glyph.tempData['wangou_end'].y,\n      }\n      break\n    }\n    case 'pie_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['pie_start'] = {\n        x: glyph.tempData['pie_start'].x + deltaX,\n        y: glyph.tempData['pie_start'].y,\n      }\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y,\n      }\n      jointsMap['wangou_start'] = {\n        x: glyph.tempData['wangou_start'].x + deltaX,\n        y: glyph.tempData['wangou_start'].y,\n      }\n      jointsMap['wangou_bend'] = {\n        x: glyph.tempData['wangou_bend'].x + deltaX,\n        y: glyph.tempData['wangou_bend'].y,\n      }\n      jointsMap['wangou_end'] = {\n        x: glyph.tempData['wangou_end'].x + deltaX,\n        y: glyph.tempData['wangou_end'].y,\n      }\n      break\n    }\n    case 'pie_end': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      jointsMap['wangou_start'] = {\n        x: glyph.tempData['wangou_start'].x + deltaX,\n        y: glyph.tempData['wangou_start'].y + deltaY,\n      }\n      jointsMap['wangou_bend'] = {\n        x: glyph.tempData['wangou_bend'].x + deltaX,\n        y: glyph.tempData['wangou_bend'].y + deltaY,\n      }\n      jointsMap['wangou_end'] = {\n        x: glyph.tempData['wangou_end'].x + deltaX,\n        y: glyph.tempData['wangou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wangou_start': {\n      jointsMap['pie_end'] = {\n        x: glyph.tempData['pie_end'].x + deltaX,\n        y: glyph.tempData['pie_end'].y + deltaY,\n      }\n      jointsMap['wangou_start'] = {\n        x: glyph.tempData['wangou_start'].x + deltaX,\n        y: glyph.tempData['wangou_start'].y + deltaY,\n      }\n      jointsMap['wangou_bend'] = {\n        x: glyph.tempData['wangou_bend'].x + deltaX,\n        y: glyph.tempData['wangou_bend'].y + deltaY,\n      }\n      jointsMap['wangou_end'] = {\n        x: glyph.tempData['wangou_end'].x + deltaX,\n        y: glyph.tempData['wangou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wangou_bend': {\n      jointsMap['wangou_bend'] = {\n        x: glyph.tempData['wangou_bend'].x + deltaX,\n        y: glyph.tempData['wangou_bend'].y + deltaY,\n      }\n      break\n    }\n    case 'wangou_end': {\n      jointsMap['wangou_end'] = {\n        x: glyph.tempData['wangou_end'].x,\n        y: glyph.tempData['wangou_end'].y + deltaY,\n      }\n      const newBend = getBend(jointsMap['wangou_start'], jointsMap['wangou_end'])\n      jointsMap['wangou_bend'] = {\n        x: newBend.x,\n        y: newBend.y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nconst getBend = (start, end) => {\n  // 改变end的情况下，不会改变弯曲度和弯曲游标，所以依据现有参数计算新的bend\n  const { wangou_bendCursor: bendCursor, wangou_bendDegree: bendDegree } = params\n  const verticalSpan = end.y - start.y\n  const wangou_cursor_x = start.x\n  const wangou_cursor_y = start.y + bendCursor * verticalSpan\n\n  const bend = {\n    x: wangou_cursor_x + bendDegree,\n    y: wangou_cursor_y,\n  }\n\n  return bend\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('撇-水平延伸', _params.pie_horizonalSpan)\n  glyph.setParam('撇-竖直延伸', _params.pie_verticalSpan)\n  glyph.setParam('弯钩-竖直延伸', _params.wangou_verticalSpan)\n  glyph.setParam('弯钩-弯曲游标', _params.wangou_bendCursor)\n  glyph.setParam('弯钩-弯曲度', _params.wangou_bendDegree - 30 * global_params.bending_degree)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, pie_start, pie_end, wangou_start, wangou_bend, wangou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const pie_horizonal_span_range = glyph.getParamRange('撇-水平延伸')\n  const pie_vertical_span_range = glyph.getParamRange('撇-竖直延伸')\n  const wangou_vertical_span_range = glyph.getParamRange('弯钩-竖直延伸')\n  const wangou_bend_cursor_range = glyph.getParamRange('弯钩-弯曲游标')\n  const wangou_bend_degree_range = glyph.getParamRange('弯钩-弯曲度')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const pie_horizonalSpan = range(pie_start.x - pie_end.x, pie_horizonal_span_range)\n  const pie_verticalSpan = range(pie_end.y - pie_start.y, pie_vertical_span_range)\n  const wangou_verticalSpan = range(wangou_end.y - wangou_start.y, wangou_vertical_span_range)\n  const wangou_bendCursor = range((wangou_bend.y - wangou_start.y) / wangou_verticalSpan, wangou_bend_cursor_range)\n  const wangou_bendDegree = range(wangou_bend.x - wangou_start.x, wangou_bend_degree_range)\n  return {\n    heng_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    wangou_verticalSpan,\n    wangou_bendCursor,\n    wangou_bendDegree,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    pie_horizonalSpan,\n    pie_verticalSpan,\n    wangou_verticalSpan,\n    wangou_bendCursor,\n    wangou_bendDegree,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 撇\n  const pie_start = new FP.Joint(\n    'pie_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const pie_end = new FP.Joint(\n    'pie_end',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n\n  // 弯钩\n  const wangou_start = new FP.Joint(\n    'wangou_start',\n    {\n      x: pie_start.x - pie_horizonalSpan,\n      y: pie_start.y + pie_verticalSpan,\n    },\n  )\n  const wangou_end = new FP.Joint(\n    'wangou_end',\n    {\n      x: wangou_start.x,\n      y: wangou_start.y + wangou_verticalSpan,\n    },\n  )\n\n  const wangou_length = distance(wangou_start, wangou_end)\n  const wangou_cursor_x = wangou_start.x\n  const wangou_cursor_y = wangou_start.y + wangou_bendCursor * wangou_verticalSpan\n\n  const wangou_bend = new FP.Joint(\n    'wangou_bend',\n    {\n      x: wangou_cursor_x + wangou_bendDegree,\n      y: wangou_cursor_y,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(pie_start)\n  glyph.addJoint(pie_end)\n  glyph.addJoint(wangou_start)\n  glyph.addJoint(wangou_bend)\n  glyph.addJoint(wangou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    pie_start,\n    pie_end,\n    wangou_start,\n    wangou_bend,\n    wangou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(pie_start, pie_end))\n  glyph.addRefLine(refline(wangou_start, wangou_bend))\n  glyph.addRefLine(refline(wangou_bend, wangou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    pie_start,\n    pie_end,\n    wangou_start,\n    wangou_bend,\n    wangou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_pie_start, out_pie_end, in_pie_start, in_pie_end } = FP.getLineContours('pie', { pie_start, pie_end }, weight)\n  const { out_wangou_curves, out_wangou_points, in_wangou_curves, in_wangou_points } = FP.getCurveContours('wangou', { wangou_start, wangou_bend, wangou_end }, weight)\n  const { corner: in_corner_heng_pie } = FP.getIntersection(\n    { type: 'line', start: in_pie_start, end: in_pie_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const { corner: out_corner_heng_pie } = FP.getIntersection(\n    { type: 'line', start: out_pie_start, end: in_pie_end },\n    { type: 'line', start: out_heng_start, end: out_heng_end }\n  )\n  const { corner: in_corner_pie_wangou } = FP.getIntersection(\n    { type: 'line', start: in_pie_start, end: in_pie_end },\n    { type: 'line', start: in_wangou_curves[0].start, end: in_wangou_curves[0].control1 }\n  )\n  const { corner: out_corner_pie_wangou, corner_index: out_corner_index_pie_wangou } = FP.getIntersection(\n    { type: 'line', start: out_pie_start, end: out_pie_end },\n    { type: 'curve', points: out_wangou_points }\n  )\n  const { curves: out_wangou_curves_final } = FP.fitCurvesByPoints(out_wangou_points.slice(out_corner_index_pie_wangou))\n  const { corner: out_corner_heng_pie_down } = FP.getIntersection(\n    { type: 'line', start: out_pie_start, end: in_pie_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_pie_up = {\n    x: out_corner_heng_pie_down.x,\n    y: out_corner_heng_pie_down.y - weight,\n  }\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_pie, out_pie_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_pie.x - corner_radius,\n      y: out_corner_heng_pie.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_heng_pie,\n      end: out_corner_pie_wangou,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_corner_pie_wangou,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    pen.lineTo(out_corner_heng_pie_up.x, out_corner_heng_pie_up.y)\n    pen.lineTo(out_corner_heng_pie_down.x, out_corner_heng_pie_down.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  pen.lineTo(out_corner_pie_wangou.x, out_corner_pie_wangou.y)\n  for (let i = 0; i < out_wangou_curves_final.length; i++) {\n    const curve = out_wangou_curves_final[i]\n    pen.bezierTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_wangou_curves[in_wangou_curves.length - 1].end.x, in_wangou_curves[in_wangou_curves.length - 1].end.y)\n\n  // 绘制左侧（内侧）轮廓\n  for (let i = in_wangou_curves.length - 1; i >= 0; i--) {\n    const curve = in_wangou_curves[i]\n    pen.bezierTo(curve.control2.x, curve.control2.y, curve.control1.x, curve.control1.y, curve.start.x, curve.start.y)\n  }\n  pen.lineTo(in_corner_pie_wangou.x, in_corner_pie_wangou.y)\n  pen.lineTo(in_corner_heng_pie.x, in_corner_heng_pie.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":370,"_y":245,"uuid":"5YPbjr03xlletCHIOpcER","name":"heng_start_ref"},{"_x":630,"_y":245,"uuid":"KIqolHVB6yx5q2DD9L6j5","name":"heng_end_ref"},{"_x":370,"_y":245,"uuid":"f59dSevs-CFYc-CsR22VV","name":"start"},{"_x":630,"_y":245,"uuid":"y1fVvPZEKF9S2KXJDrqgV","name":"end"},{"_x":630,"_y":245,"uuid":"jn0K2UczRi9rK9QXKUwwc","name":"pie_start"},{"_x":510,"_y":445,"uuid":"FX8BbsaKFf6gElVLGtymk","name":"pie_end"},{"_x":510,"_y":445,"uuid":"jzBwiiEngnger6lrgbS7e","name":"wangou_start"},{"_x":690,"_y":595,"uuid":"gZ750cDhuq-OFUoztYd8Z","name":"wangou_bend"},{"_x":510,"_y":745,"uuid":"cS9Lnv8t1pqoDPcrYRYRl","name":"wangou_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"start-end","start":"start","end":"end"},{"name":"pie_start-pie_end","start":"pie_start","end":"pie_end"},{"name":"wangou_start-wangou_bend","start":"wangou_start","end":"wangou_bend"},{"name":"wangou_bend-wangou_end","start":"wangou_bend","end":"wangou_end"}],"_components":[{"points":[{"uuid":"kamFqiqV-VxYs636SinzX","type":"anchor","x":370,"y":207.5,"origin":null},{"uuid":"n0Ty7j2Dite-33yYNZFn9","type":"control","x":370,"y":207.5,"origin":"kamFqiqV-VxYs636SinzX"},{"uuid":"ZzQ0RGIbbX9o1pjD2lX3L","type":"control","x":390,"y":207.5,"origin":"ye3bJ8-702PH6E-dakNbN"},{"uuid":"ye3bJ8-702PH6E-dakNbN","type":"anchor","x":390,"y":207.5,"origin":null},{"uuid":"NCxDUmzZXA59rLa0Cdru1","type":"control","x":390,"y":215.83333333333334,"origin":"ye3bJ8-702PH6E-dakNbN"},{"uuid":"2Aq_LklOS5PLhl9irMywf","type":"control","x":396.6666666666667,"y":220,"origin":"u-OthqwK1VSD826nK85es"},{"uuid":"u-OthqwK1VSD826nK85es","type":"anchor","x":410,"y":220,"origin":null},{"uuid":"-7BDKcbRtBV4nvlqxZ5Hx","type":"control","x":410,"y":220,"origin":"u-OthqwK1VSD826nK85es"},{"uuid":"Xi2PihBYPc4_O4MRKAuEd","type":"control","x":581.7743091273193,"y":220,"origin":"3XCTNqrxdvIqhFnhmFFlx"},{"uuid":"3XCTNqrxdvIqhFnhmFFlx","type":"anchor","x":581.7743091273193,"y":220,"origin":null},{"uuid":"fYVfhqMsUhh0OUh0yKTAG","type":"control","x":616.7904967032434,"y":220,"origin":"3XCTNqrxdvIqhFnhmFFlx"},{"uuid":"G0qqV4y7fWkRNdSH4wVgh","type":"control","x":640.1616660455542,"y":216.8268644074917,"origin":"KlsedP1nN3t7mUb1OglvY"},{"uuid":"KlsedP1nN3t7mUb1OglvY","type":"anchor","x":651.8878171542516,"y":210.48059322247516,"origin":null},{"uuid":"nUy_eXqocGo-GeQpM9Fkx","type":"control","x":651.8878171542516,"y":210.48059322247516,"origin":"KlsedP1nN3t7mUb1OglvY"},{"uuid":"h1imHziLkwplEy8UllofZ","type":"control","x":675.5532589758711,"y":254.3664396090539,"origin":"2DcNTOsKB06qYbgiSRiy-"},{"uuid":"2DcNTOsKB06qYbgiSRiy-","type":"anchor","x":675.5532589758711,"y":254.3664396090539,"origin":null},{"uuid":"Uw7ZWNlbXkk14Vd8t9Pbf","type":"control","x":663.8271078671737,"y":260.71271079407046,"origin":"2DcNTOsKB06qYbgiSRiy-"},{"uuid":"7nxEXfRftnGwKu8_cuRqH","type":"control","x":648.3444191320694,"y":278.51446184877165,"origin":"GxJo6fFxoHMRRxdCMfqeG"},{"uuid":"GxJo6fFxoHMRRxdCMfqeG","type":"anchor","x":629.1051927705583,"y":307.7716927731575,"origin":null},{"uuid":"T1UHRPMZBcP7sBm0b34_U","type":"control","x":629.1051927705583,"y":307.7716927731575,"origin":"GxJo6fFxoHMRRxdCMfqeG"},{"uuid":"AYMdF52WHv2sj1JboK7Cj","type":"control","x":542.1695123415566,"y":439.97541188778325,"origin":"7YveflcdE9YVpF8lPlb26"},{"uuid":"7YveflcdE9YVpF8lPlb26","type":"anchor","x":542.1695123415566,"y":439.97541188778325,"origin":null},{"uuid":"x0lw3EbEQt8PHavvt33UL","type":"control","x":661.9908670716164,"y":552.0549928777281,"origin":"7YveflcdE9YVpF8lPlb26"},{"uuid":"1cmHS_ParpZmAUZtCAv4L","type":"control","x":645.2062530749993,"y":663.8671447594876,"origin":"yOm4E07xl2ZIV0J7DS-ga"},{"uuid":"yOm4E07xl2ZIV0J7DS-ga","type":"anchor","x":526.004609991612,"y":764.2055319899343,"origin":null},{"uuid":"oJG0ZXRMrytVuz30SS-08","type":"control","x":526.004609991612,"y":764.2055319899343,"origin":"yOm4E07xl2ZIV0J7DS-ga"},{"uuid":"aorVquiwvJQa3keKRGgLp","type":"control","x":493.99539000838803,"y":725.7944680100657,"origin":"5BQzv9ATzB8SvrBuU-Pjo"},{"uuid":"5BQzv9ATzB8SvrBuU-Pjo","type":"anchor","x":493.99539000838803,"y":725.7944680100657,"origin":null},{"uuid":"ngDOX5T2DLy6A9MtRUKeM","type":"control","x":601.0063271764095,"y":635.7182251079107,"origin":"5BQzv9ATzB8SvrBuU-Pjo"},{"uuid":"YpV0y9ZHSaVqYy5Xu0jfj","type":"control","x":601.0063271764103,"y":554.2817748920885,"origin":"3-6oU9vEN42dR3lpWBhd4"},{"uuid":"3-6oU9vEN42dR3lpWBhd4","type":"anchor","x":493.995390008388,"y":464.2055319899344,"origin":null},{"uuid":"xCgJ0PJzWNWyxiDh44vd9","type":"control","x":493.995390008388,"y":464.2055319899344,"origin":"3-6oU9vEN42dR3lpWBhd4"},{"uuid":"n5q82FgeHvb4CSv-GBIfk","type":"control","x":477.6015902692438,"y":450.4060837608828,"origin":"vwSHo_9Kp7NbuWBQ-Wl9W"},{"uuid":"vwSHo_9Kp7NbuWBQ-Wl9W","type":"anchor","x":477.6015902692438,"y":450.4060837608828,"origin":null},{"uuid":"mJmwRHR6cab6q7SIGgCjo","type":"control","x":477.6015902692438,"y":450.4060837608828,"origin":"vwSHo_9Kp7NbuWBQ-Wl9W"},{"uuid":"QYd1IJ0WIX8-1KdACvuXI","type":"control","x":585.8452405257735,"y":270,"origin":"imoJT0PHOCYjMpM5qv1d6"},{"uuid":"imoJT0PHOCYjMpM5qv1d6","type":"anchor","x":585.8452405257735,"y":270,"origin":null},{"uuid":"bBkdNDNC3Hj9_9i6YU2H_","type":"control","x":585.8452405257735,"y":270,"origin":"imoJT0PHOCYjMpM5qv1d6"},{"uuid":"sE-TmyRqsd2ftIP5f8KKV","type":"control","x":410,"y":270,"origin":"d2_o-RJKi3RTROognGf2V"},{"uuid":"d2_o-RJKi3RTROognGf2V","type":"anchor","x":410,"y":270,"origin":null},{"uuid":"swwCr8-QcOKV9eG3_8PI7","type":"control","x":396.6666666666667,"y":270,"origin":"d2_o-RJKi3RTROognGf2V"},{"uuid":"Afic11xdpCUvPgJmTX-67","type":"control","x":390,"y":274.1666666666667,"origin":"88oCVtxcZCzuHIVgovvIE"},{"uuid":"88oCVtxcZCzuHIVgovvIE","type":"anchor","x":390,"y":282.5,"origin":null},{"uuid":"9wjscPidU87XpYyMYqZIW","type":"control","x":390,"y":282.5,"origin":"88oCVtxcZCzuHIVgovvIE"},{"uuid":"yLhh_cwc6WKh789CFpc8n","type":"control","x":370,"y":282.5,"origin":"6XtWVshzU8_ptK-NG9jd4"},{"uuid":"6XtWVshzU8_ptK-NG9jd4","type":"anchor","x":370,"y":282.5,"origin":null},{"uuid":"8OG1Ie4kUS93Peb9-bLMM","type":"control","x":370,"y":282.5,"origin":"6XtWVshzU8_ptK-NG9jd4"},{"uuid":"yFNGtB5x6a-WT1-53iNON","type":"control","x":370,"y":207.5,"origin":"xZ9aHQeuKlbcrP16dE8m3"},{"uuid":"xZ9aHQeuKlbcrP16dE8m3","type":"anchor","x":370,"y":207.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":370,"y":592.5},"end":{"x":390,"y":592.5},"control1":{"x":370,"y":592.5},"control2":{"x":390,"y":592.5},"fill":false},{"type":2,"start":{"x":390,"y":592.5},"end":{"x":410,"y":580},"control1":{"x":390,"y":584.1666666666666},"control2":{"x":396.6666666666667,"y":580},"fill":false},{"type":2,"start":{"x":410,"y":580},"end":{"x":581.7743091273193,"y":580},"control1":{"x":410,"y":580},"control2":{"x":581.7743091273193,"y":580},"fill":false},{"type":2,"start":{"x":581.7743091273193,"y":580},"end":{"x":651.8878171542516,"y":589.5194067775249},"control1":{"x":616.7904967032434,"y":580},"control2":{"x":640.1616660455542,"y":583.1731355925083},"fill":false},{"type":2,"start":{"x":651.8878171542516,"y":589.5194067775249},"end":{"x":675.5532589758711,"y":545.6335603909461},"control1":{"x":651.8878171542516,"y":589.5194067775249},"control2":{"x":675.5532589758711,"y":545.6335603909461},"fill":false},{"type":2,"start":{"x":675.5532589758711,"y":545.6335603909461},"end":{"x":629.1051927705583,"y":492.2283072268425},"control1":{"x":663.8271078671737,"y":539.2872892059295},"control2":{"x":648.3444191320694,"y":521.4855381512284},"fill":false},{"type":2,"start":{"x":629.1051927705583,"y":492.2283072268425},"end":{"x":542.1695123415566,"y":360.02458811221675},"control1":{"x":629.1051927705583,"y":492.2283072268425},"control2":{"x":542.1695123415566,"y":360.02458811221675},"fill":false},{"type":2,"start":{"x":542.1695123415566,"y":360.02458811221675},"end":{"x":526.004609991612,"y":35.79446801006566},"control1":{"x":661.9908670716164,"y":247.94500712227193},"control2":{"x":645.2062530749993,"y":136.1328552405124},"fill":false},{"type":2,"start":{"x":526.004609991612,"y":35.79446801006566},"end":{"x":493.99539000838803,"y":74.20553198993434},"control1":{"x":526.004609991612,"y":35.79446801006566},"control2":{"x":493.99539000838803,"y":74.20553198993434},"fill":false},{"type":2,"start":{"x":493.99539000838803,"y":74.20553198993434},"end":{"x":493.995390008388,"y":335.79446801006566},"control1":{"x":601.0063271764095,"y":164.2817748920893},"control2":{"x":601.0063271764103,"y":245.7182251079115},"fill":false},{"type":2,"start":{"x":493.995390008388,"y":335.79446801006566},"end":{"x":477.6015902692438,"y":349.5939162391172},"control1":{"x":493.995390008388,"y":335.79446801006566},"control2":{"x":477.6015902692438,"y":349.5939162391172},"fill":false},{"type":2,"start":{"x":477.6015902692438,"y":349.5939162391172},"end":{"x":585.8452405257735,"y":530},"control1":{"x":477.6015902692438,"y":349.5939162391172},"control2":{"x":585.8452405257735,"y":530},"fill":false},{"type":2,"start":{"x":585.8452405257735,"y":530},"end":{"x":410,"y":530},"control1":{"x":585.8452405257735,"y":530},"control2":{"x":410,"y":530},"fill":false},{"type":2,"start":{"x":410,"y":530},"end":{"x":390,"y":517.5},"control1":{"x":396.6666666666667,"y":530},"control2":{"x":390,"y":525.8333333333333},"fill":false},{"type":2,"start":{"x":390,"y":517.5},"end":{"x":370,"y":517.5},"control1":{"x":390,"y":517.5},"control2":{"x":370,"y":517.5},"fill":false},{"type":2,"start":{"x":370,"y":517.5},"end":{"x":370,"y":592.5},"control1":{"x":370,"y":517.5},"control2":{"x":370,"y":592.5},"fill":false}],"preview":[{"type":2,"start":{"x":37,"y":20.75},"end":{"x":39,"y":20.75},"control1":{"x":37,"y":20.75},"control2":{"x":39,"y":20.75},"fill":false},{"type":2,"start":{"x":39,"y":20.75},"end":{"x":41,"y":22},"control1":{"x":39,"y":21.583333333333336},"control2":{"x":39.66666666666667,"y":22},"fill":false},{"type":2,"start":{"x":41,"y":22},"end":{"x":58.17743091273193,"y":22},"control1":{"x":41,"y":22},"control2":{"x":58.17743091273193,"y":22},"fill":false},{"type":2,"start":{"x":58.17743091273193,"y":22},"end":{"x":65.18878171542516,"y":21.048059322247518},"control1":{"x":61.679049670324346,"y":22},"control2":{"x":64.01616660455542,"y":21.682686440749173},"fill":false},{"type":2,"start":{"x":65.18878171542516,"y":21.048059322247518},"end":{"x":67.55532589758711,"y":25.436643960905393},"control1":{"x":65.18878171542516,"y":21.048059322247518},"control2":{"x":67.55532589758711,"y":25.436643960905393},"fill":false},{"type":2,"start":{"x":67.55532589758711,"y":25.436643960905393},"end":{"x":62.91051927705584,"y":30.77716927731575},"control1":{"x":66.38271078671737,"y":26.071271079407047},"control2":{"x":64.83444191320694,"y":27.851446184877165},"fill":false},{"type":2,"start":{"x":62.91051927705584,"y":30.77716927731575},"end":{"x":54.21695123415566,"y":43.99754118877833},"control1":{"x":62.91051927705584,"y":30.77716927731575},"control2":{"x":54.21695123415566,"y":43.99754118877833},"fill":false},{"type":2,"start":{"x":54.21695123415566,"y":43.99754118877833},"end":{"x":52.60046099916121,"y":76.42055319899343},"control1":{"x":66.19908670716164,"y":55.20549928777281},"control2":{"x":64.52062530749993,"y":66.38671447594876},"fill":false},{"type":2,"start":{"x":52.60046099916121,"y":76.42055319899343},"end":{"x":49.39953900083881,"y":72.57944680100657},"control1":{"x":52.60046099916121,"y":76.42055319899343},"control2":{"x":49.39953900083881,"y":72.57944680100657},"fill":false},{"type":2,"start":{"x":49.39953900083881,"y":72.57944680100657},"end":{"x":49.3995390008388,"y":46.420553198993446},"control1":{"x":60.100632717640956,"y":63.57182251079107},"control2":{"x":60.100632717641034,"y":55.42817748920885},"fill":false},{"type":2,"start":{"x":49.3995390008388,"y":46.420553198993446},"end":{"x":47.760159026924384,"y":45.04060837608828},"control1":{"x":49.3995390008388,"y":46.420553198993446},"control2":{"x":47.760159026924384,"y":45.04060837608828},"fill":false},{"type":2,"start":{"x":47.760159026924384,"y":45.04060837608828},"end":{"x":58.58452405257736,"y":27},"control1":{"x":47.760159026924384,"y":45.04060837608828},"control2":{"x":58.58452405257736,"y":27},"fill":false},{"type":2,"start":{"x":58.58452405257736,"y":27},"end":{"x":41,"y":27},"control1":{"x":58.58452405257736,"y":27},"control2":{"x":41,"y":27},"fill":false},{"type":2,"start":{"x":41,"y":27},"end":{"x":39,"y":28.25},"control1":{"x":39.66666666666667,"y":27},"control2":{"x":39,"y":27.41666666666667},"fill":false},{"type":2,"start":{"x":39,"y":28.25},"end":{"x":37,"y":28.25},"control1":{"x":39,"y":28.25},"control2":{"x":37,"y":28.25},"fill":false},{"type":2,"start":{"x":37,"y":28.25},"end":{"x":37,"y":20.75},"control1":{"x":37,"y":28.25},"control2":{"x":37,"y":20.75},"fill":false}]}]}},{"uuid":"4DIfb4p6IJqz1KYUt0oeN","type":"system","name":"横折折弯钩","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"_ZD4dLZU20Pqr5NSBfL4J","name":"横-长度","type":0,"value":350,"min":0,"max":1000},{"uuid":"c5wNrXDl_00gOLpxMXbdZ","name":"折1-水平延伸","type":0,"value":120,"min":0,"max":1000},{"uuid":"F83AxBmlQH4_3G7-iZ0zC","name":"折1-竖直延伸","type":0,"value":180,"min":0,"max":1000},{"uuid":"npqYPW7mCDYTeVh61ST4P","name":"折2-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"-QBQ0bz1bpDKJWFn6cRj4","name":"弯-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"BLIwUbzELwopnXp22vM_R","name":"弯-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"aJHaw8YYcPJFaENKPi6h-","name":"钩-水平延伸","type":0,"value":80,"min":0,"max":300},{"uuid":"KPWFYdrX_DmTKkwBy18FI","name":"钩-竖直延伸","type":0,"value":-60,"min":-300,"max":300},{"uuid":"d6tOxuQhcG7KaYqq0PWiY","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"WH_LgpZSwuioZ6Jy3or6i","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"5vjc6hBgnqsLsbXNFJSgV","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"BMWEVaLm2VUhlDDuaNYZY","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"2nPqAOqPauMGh1pvswWlh","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"sZTY2hwgzfL6PtngYyukn","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"oq7F752ZbGOHbTnDxSdOV","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"c-gvAPWygHukmPVrEGK7M","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_4DIfb4p6IJqz1KYUt0oeN (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 325\nconst y0 = 255\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe1_horizonalSpan: glyph.getParam('折1-水平延伸'),\n  zhe1_verticalSpan: glyph.getParam('折1-竖直延伸'),\n  zhe2_length: glyph.getParam('折2-长度'),\n  wan_horizonalSpan: glyph.getParam('弯-水平延伸'),\n  wan_verticalSpan: glyph.getParam('弯-竖直延伸'),\n  gou_horizonalSpan: glyph.getParam('钩-水平延伸'),\n  gou_verticalSpan: glyph.getParam('钩-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe1_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'zhe1_end': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y  + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe2_start': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y  + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe2_end': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_start': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      jointsMap['gou_start'] = {\n        x: glyph.tempData['gou_start'].x + deltaX,\n        y: glyph.tempData['gou_start'].y + deltaY,\n      }\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n    case 'gou_end': {\n      jointsMap['gou_end'] = {\n        x: glyph.tempData['gou_end'].x + deltaX,\n        y: glyph.tempData['gou_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折1-水平延伸', _params.zhe1_horizonalSpan)\n  glyph.setParam('折1-竖直延伸', _params.zhe1_verticalSpan)\n  glyph.setParam('折2-长度', _params.zhe2_length)\n  glyph.setParam('弯-水平延伸', _params.wan_horizonalSpan)\n  glyph.setParam('弯-竖直延伸', _params.wan_verticalSpan)\n  glyph.setParam('钩-水平延伸', _params.gou_horizonalSpan)\n  glyph.setParam('钩-竖直延伸', _params.gou_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe1_start, zhe1_end, zhe2_start, zhe2_end, wan_start, wan_end, gou_start, gou_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe1_horizonal_span_range = glyph.getParamRange('折1-水平延伸')\n  const zhe1_vertical_span_range = glyph.getParamRange('折1-竖直延伸')\n  const zhe2_length_range = glyph.getParamRange('折2-长度')\n  const wan_horizonal_span_range = glyph.getParamRange('弯-水平延伸')\n  const wan_vertical_span_range = glyph.getParamRange('弯-竖直延伸')\n  const gou_horizonal_span_range = glyph.getParamRange('钩-水平延伸')\n  const gou_vertical_span_range = glyph.getParamRange('钩-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe1_horizonalSpan = range(zhe1_start.x - zhe1_end.x, zhe1_horizonal_span_range)\n  const zhe1_verticalSpan = range(zhe1_end.y - zhe1_start.y, zhe1_vertical_span_range)\n  const zhe2_length = range(zhe2_end.x - zhe2_start.x, zhe2_length_range)\n  const wan_horizonalSpan = range(wan_start.x - wan_end.x, wan_horizonal_span_range)\n  const wan_verticalSpan = range(wan_end.y - wan_start.y, wan_vertical_span_range)\n  const gou_horizonalSpan = range(gou_start.x - gou_end.x, gou_horizonal_span_range)\n  const gou_verticalSpan = range(gou_end.y - gou_start.y, gou_vertical_span_range)\n  return {\n    heng_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    zhe2_length,\n    wan_horizonalSpan,\n    wan_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    zhe2_length,\n    wan_horizonalSpan,\n    wan_verticalSpan,\n    gou_horizonalSpan,\n    gou_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折1\n  const zhe1_start = new FP.Joint(\n    'zhe1_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe1_end = new FP.Joint(\n    'zhe1_end',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n\n  // 折2\n  const zhe2_start = new FP.Joint(\n    'zhe2_start',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n  const zhe2_end = new FP.Joint(\n    'zhe2_end',\n    {\n      x: zhe2_start.x + zhe2_length,\n      y: zhe2_start.y,\n    },\n  )\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: zhe2_start.x + zhe2_length,\n      y: zhe2_start.y,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x - wan_horizonalSpan,\n      y: wan_start.y + wan_verticalSpan,\n    },\n  )\n\n  // 钩\n  const gou_start = new FP.Joint(\n    'gou_start',\n    {\n      x: wan_start.x - wan_horizonalSpan,\n      y: wan_start.y + wan_verticalSpan,\n    },\n  )\n  const gou_end = new FP.Joint(\n    'gou_end',\n    {\n      x: gou_start.x - gou_horizonalSpan,\n      y: gou_start.y + gou_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe1_start)\n  glyph.addJoint(zhe1_end)\n  glyph.addJoint(zhe2_start)\n  glyph.addJoint(zhe2_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_end)\n  glyph.addJoint(gou_start)\n  glyph.addJoint(gou_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe1_start, zhe1_end))\n  glyph.addRefLine(refline(zhe2_start, zhe2_end))\n  glyph.addRefLine(refline(wan_start, wan_end))\n  glyph.addRefLine(refline(gou_start, gou_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n\n  const start_style = getStartStyle(start_style_type, start_style_value)\n\n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n\n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe1_start,\n    zhe1_end,\n    zhe2_start,\n    zhe2_end,\n    wan_start,\n    wan_end,\n    gou_start,\n    gou_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe1_start, out_zhe1_end, in_zhe1_start, in_zhe1_end } = FP.getLineContours('zhe1', { zhe1_start, zhe1_end }, weight)\n  const { out_zhe2_start, out_zhe2_end, in_zhe2_start, in_zhe2_end } = FP.getLineContours('zhe2', { zhe2_start, zhe2_end }, weight)\n  const { out_wan_start, out_wan_end, in_wan_start, in_wan_end } = FP.getLineContours('wan', { wan_start, wan_end }, weight)\n  const { out_gou_start, out_gou_end, in_gou_start, in_gou_end } = FP.getLineContours('gou', { gou_start, gou_end }, weight)\n  const { corner: in_corner_heng_zhe1 } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n  )\n  const { corner: out_corner_heng_zhe1 } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n  )\n  const { corner: in_corner_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n  )\n  const { corner: out_corner_zhe1_zhe2 } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n  )\n  const { corner: in_corner_zhe2_wan } = FP.getIntersection(\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  )\n  const { corner: out_corner_zhe2_wan } = FP.getIntersection(\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  )\n  const { corner: in_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n    { type: 'line', start: in_gou_start, end: in_gou_end },\n  )\n  const { corner: out_corner_wan_gou } = FP.getIntersection(\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n    { type: 'line', start: out_gou_start, end: out_gou_end },\n  )\n  const { corner: out_corner_heng_zhe1_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_zhe1_up = {\n    x: out_corner_heng_zhe1_down.x,\n    y: out_corner_heng_zhe1_down.y - weight,\n  }\n\n  // 计算横折1拐角处内外圆角相关的点与数据\n  let in_radius_heng_zhe1 = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng_zhe1 = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横或折1长度，取横或折1的最小长度\n  const in_radius_min_length_heng_zhe1 = Math.min(\n    getDistance(in_corner_heng_zhe1, in_heng_start),\n    getDistance(in_corner_heng_zhe1, in_zhe1_end),\n  )\n  const out_radius_min_length_heng_zhe1 = Math.min(\n    getDistance(out_zhe1_end, out_heng_start),\n    getDistance(out_zhe1_start, out_corner_zhe1_zhe2),\n  )\n  if (in_radius_heng_zhe1 >= in_radius_min_length_heng_zhe1) {\n    in_radius_heng_zhe1 = in_radius_min_length_heng_zhe1\n  }\n  if (out_radius_heng_zhe1 >= out_radius_min_length_heng_zhe1) {\n    out_radius_heng_zhe1 = out_radius_min_length_heng_zhe1\n  }\n  const in_radius_start_heng_zhe1 = {\n    x: in_corner_heng_zhe1.x - in_radius_heng_zhe1,\n    y: in_corner_heng_zhe1.y,\n  }\n  const in_radius_end_heng_zhe1 = getRadiusPoint({\n    start: in_corner_heng_zhe1,\n    end: in_corner_zhe1_zhe2,\n    radius: in_radius_heng_zhe1,\n  })\n  const out_radius_start_heng_zhe1 = {\n    x: out_corner_heng_zhe1.x - out_radius_heng_zhe1,\n    y: out_corner_heng_zhe1.y,\n  }\n  const out_radius_end_heng_zhe1 = getRadiusPoint({\n    start: out_corner_heng_zhe1,\n    end: out_corner_zhe1_zhe2,\n    radius: out_radius_heng_zhe1,\n  })\n\n  // 计算折2弯拐角处内外圆角相关的点与数据\n  let in_radius_zhe2_wan = 60 * bending_degree\n  let out_radius_zhe2_wan = 80 * bending_degree\n  // 如果in_radius超出折2或弯长度，取折2或弯的最小长度\n  const in_radius_min_length_zhe2_wan = Math.min(\n    getDistance(in_corner_zhe2_wan, in_zhe2_start),\n    getDistance(in_corner_zhe2_wan, in_corner_wan_gou),\n  )\n  const out_radius_min_length_zhe2_wan = Math.min(\n    getDistance(out_zhe2_end, out_corner_zhe1_zhe2),\n    getDistance(out_corner_zhe2_wan, out_wan_end),\n  )\n  if (in_radius_zhe2_wan >= in_radius_min_length_zhe2_wan) {\n    in_radius_zhe2_wan = in_radius_min_length_zhe2_wan\n  }\n  if (out_radius_zhe2_wan >= out_radius_min_length_zhe2_wan) {\n    out_radius_zhe2_wan = out_radius_min_length_zhe2_wan\n  }\n  const in_radius_start_zhe2_wan = {\n    x: in_corner_zhe2_wan.x - in_radius_zhe2_wan,\n    y: in_corner_zhe2_wan.y,\n  }\n  const in_radius_end_zhe2_wan = getRadiusPoint({\n    start: in_corner_zhe2_wan,\n    end: in_corner_wan_gou,\n    radius: in_radius_zhe2_wan,\n  })\n  const out_radius_start_zhe2_wan = {\n    x: out_corner_zhe2_wan.x - out_radius_zhe2_wan,\n    y: out_corner_zhe2_wan.y,\n  }\n  const out_radius_end_zhe2_wan = getRadiusPoint({\n    start: out_corner_zhe2_wan,\n    end: out_corner_wan_gou,\n    radius: out_radius_zhe2_wan,\n  })\n\n  // 计算弯钩拐角处内外圆角相关的点与数据\n  let in_radius_wan_gou = 30 * bending_degree\n  let out_radius_wan_gou = 30 * bending_degree\n  // 如果in_radius超出弯或钩的长度，取弯或钩的最小长度\n  const in_radius_min_length_wan_gou = Math.min(\n    getDistance(in_corner_wan_gou, in_gou_end),\n    getDistance(in_corner_wan_gou, in_radius_end_zhe2_wan),\n  )\n  const out_radius_min_length_wan_gou = Math.min(\n    getDistance(gou_start, gou_end),\n    getDistance(out_zhe2_end, out_radius_end_zhe2_wan),\n  )\n  if (in_radius_wan_gou >= in_radius_min_length_wan_gou) {\n    in_radius_wan_gou = in_radius_min_length_wan_gou\n  }\n  if (out_radius_wan_gou >= out_radius_min_length_wan_gou) {\n    out_radius_wan_gou = out_radius_min_length_wan_gou\n  }\n  const in_radius_start_wan_gou = getRadiusPoint({\n    start: in_corner_wan_gou,\n    end: in_corner_zhe2_wan,\n    radius: in_radius_wan_gou,\n  })\n  const in_radius_end_wan_gou = getRadiusPoint({\n    start: in_corner_wan_gou,\n    end: in_gou_end,\n    radius: in_radius_wan_gou,\n  })\n  const out_radius_start_wan_gou = getRadiusPoint({\n    start: out_wan_end,\n    end: out_radius_end_zhe2_wan,\n    radius: out_radius_wan_gou,\n  })\n  const out_radius_end_wan_gou = getRadiusPoint({\n    start: out_gou_start,\n    end: out_gou_end,\n    radius: out_radius_wan_gou,\n  })\n\n  let turn_data_heng_zhe1 = {}\n  let turn_data_zhe2_wan = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    {\n      const turn_length = 20 * turn_style_value\n      const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe1, out_zhe1_end)\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_heng_zhe1.x - corner_radius,\n        y: out_corner_heng_zhe1.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2 = getRadiusPoint({\n        start: out_corner_heng_zhe1,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_start_2 = getRadiusPoint({\n        start: turn_control_2,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      turn_data_heng_zhe1 = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n    {\n      const turn_length = 20 * turn_style_value\n      const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_zhe2_start, out_corner_zhe2_wan, out_wan_end)\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_zhe2_wan.x - corner_radius,\n        y: out_corner_zhe2_wan.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2 = getRadiusPoint({\n        start: out_corner_zhe2_wan,\n        end: out_wan_end,\n        radius: corner_radius,\n      })\n      const turn_start_2 = getRadiusPoint({\n        start: turn_control_2,\n        end: out_wan_end,\n        radius: corner_radius,\n      })\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      turn_data_zhe2_wan = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (bending_degree > 1 && turn_style_type === 0) {\n    // 绘制外侧横折1圆角\n    pen.lineTo(out_radius_start_heng_zhe1.x, out_radius_start_heng_zhe1.y)\n    pen.quadraticBezierTo(out_corner_heng_zhe1.x, out_corner_heng_zhe1.y, out_radius_end_heng_zhe1.x, out_radius_end_heng_zhe1.y)\n  } else if (turn_style_type === 0) {\n    // 默认转角样式\n    pen.lineTo(out_corner_heng_zhe1_up.x, out_corner_heng_zhe1_up.y)\n    pen.lineTo(out_corner_heng_zhe1_down.x, out_corner_heng_zhe1_down.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    // 绘制外侧横折1转角\n    pen.lineTo(turn_data_heng_zhe1.turn_start_1.x, turn_data_heng_zhe1.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_heng_zhe1.turn_control_1.x, turn_data_heng_zhe1.turn_control_1.y, turn_data_heng_zhe1.turn_end_1.x, turn_data_heng_zhe1.turn_end_1.y)\n    pen.lineTo(turn_data_heng_zhe1.turn_end_2.x, turn_data_heng_zhe1.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_heng_zhe1.turn_control_2.x, turn_data_heng_zhe1.turn_control_2.y, turn_data_heng_zhe1.turn_start_2.x, turn_data_heng_zhe1.turn_start_2.y)\n  }\n  // 绘制外侧折1\n  pen.lineTo(out_corner_zhe1_zhe2.x, out_corner_zhe1_zhe2.y)\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    // 绘制外侧折2弯圆角\n    pen.lineTo(out_radius_start_zhe2_wan.x, out_radius_start_zhe2_wan.y)\n    pen.quadraticBezierTo(out_corner_zhe2_wan.x, out_corner_zhe2_wan.y, out_radius_end_zhe2_wan.x, out_radius_end_zhe2_wan.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    // 绘制外侧折2弯转角\n    pen.lineTo(turn_data_zhe2_wan.turn_start_1.x, turn_data_zhe2_wan.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_zhe2_wan.turn_control_1.x, turn_data_zhe2_wan.turn_control_1.y, turn_data_zhe2_wan.turn_end_1.x, turn_data_zhe2_wan.turn_end_1.y)\n    pen.lineTo(turn_data_zhe2_wan.turn_end_2.x, turn_data_zhe2_wan.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_zhe2_wan.turn_control_2.x, turn_data_zhe2_wan.turn_control_2.y, turn_data_zhe2_wan.turn_start_2.x, turn_data_zhe2_wan.turn_start_2.y)\n  }\n  // 绘制外侧弯钩圆角\n  pen.lineTo(out_radius_start_wan_gou.x, out_radius_start_wan_gou.y)\n  pen.quadraticBezierTo(out_corner_wan_gou.x, out_corner_wan_gou.y, out_radius_end_wan_gou.x, out_radius_end_wan_gou.y)\n  pen.lineTo(out_gou_end.x, out_gou_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_gou_end.x, in_gou_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // pen.lineTo(in_corner_wan_gou.x, in_corner_wan_gou.y)\n  // pen.lineTo(in_corner_zhe2_wan.x, in_corner_zhe2_wan.y)\n  // pen.lineTo(in_corner_zhe1_zhe2.x, in_corner_zhe1_zhe2.y)\n  // pen.lineTo(in_corner_heng_zhe1.x, in_corner_heng_zhe1.y)\n  // 绘制内侧弯钩圆角\n  pen.lineTo(in_radius_end_wan_gou.x, in_radius_end_wan_gou.y)\n  pen.quadraticBezierTo(in_corner_wan_gou.x, in_corner_wan_gou.y, in_radius_start_wan_gou.x, in_radius_start_wan_gou.y)\n  // 绘制内侧折2弯圆角\n  pen.lineTo(in_radius_end_zhe2_wan.x, in_radius_end_zhe2_wan.y)\n  pen.quadraticBezierTo(in_corner_zhe2_wan.x, in_corner_zhe2_wan.y, in_radius_start_zhe2_wan.x, in_radius_start_zhe2_wan.y)\n  // 绘制内侧折2\n  pen.lineTo(in_corner_zhe1_zhe2.x, in_corner_zhe1_zhe2.y)\n  // 绘制内侧横折1弯圆角\n  pen.lineTo(in_radius_end_heng_zhe1.x, in_radius_end_heng_zhe1.y)\n  pen.quadraticBezierTo(in_corner_heng_zhe1.x, in_corner_heng_zhe1.y, in_radius_start_heng_zhe1.x, in_radius_start_heng_zhe1.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":325,"_y":255,"uuid":"_yMVajWEWsV_990nW94QB","name":"heng_start_ref"},{"_x":675,"_y":255,"uuid":"q9uM2xJaseXPKdPBGaD8W","name":"heng_end_ref"},{"_x":325,"_y":255,"uuid":"OFvLVv2fI2SGZ2u8ivdVU","name":"heng_start"},{"_x":675,"_y":255,"uuid":"_oRPMtxk4OLGjpiPnCXgH","name":"heng_end"},{"_x":675,"_y":255,"uuid":"qJuN1sFHR9E6Y2Ek9wREN","name":"zhe1_start"},{"_x":555,"_y":435,"uuid":"fR6QQynkzh2_wPPXpRKq_","name":"zhe1_end"},{"_x":555,"_y":435,"uuid":"c-1O0vxTx0brr_Zndi4y4","name":"zhe2_start"},{"_x":755,"_y":435,"uuid":"XD3eM-8-ywnvzs1srn3da","name":"zhe2_end"},{"_x":755,"_y":435,"uuid":"CCsRiR4F91rnreSa9Gtpn","name":"wan_start"},{"_x":655,"_y":735,"uuid":"qhrYsHp1wbjtmOzl1cbRE","name":"wan_end"},{"_x":655,"_y":735,"uuid":"N3mcyL85tbKcJh463NCJB","name":"gou_start"},{"_x":575,"_y":675,"uuid":"UmmVgwCLl-70xtzcD_jOC","name":"gou_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe1_start-zhe1_end","start":"zhe1_start","end":"zhe1_end"},{"name":"zhe2_start-zhe2_end","start":"zhe2_start","end":"zhe2_end"},{"name":"wan_start-wan_end","start":"wan_start","end":"wan_end"},{"name":"gou_start-gou_end","start":"gou_start","end":"gou_end"}],"_components":[{"points":[{"uuid":"mL1cW-v40VXdEm9lDRLi3","type":"anchor","x":325,"y":217.5,"origin":null},{"uuid":"Dosm49tAMtQpa0TVcwPcE","type":"control","x":325,"y":217.5,"origin":"mL1cW-v40VXdEm9lDRLi3"},{"uuid":"iWJIgkVaO4uwXAReCGfPv","type":"control","x":345,"y":217.5,"origin":"mMNMXL6oIbFWLMpAB3ZJJ"},{"uuid":"mMNMXL6oIbFWLMpAB3ZJJ","type":"anchor","x":345,"y":217.5,"origin":null},{"uuid":"ahFFMV7hmn9a-qib9qMi4","type":"control","x":345,"y":225.83333333333334,"origin":"mMNMXL6oIbFWLMpAB3ZJJ"},{"uuid":"XPbKEH_4L73dcUNDOF3tk","type":"control","x":351.6666666666667,"y":230,"origin":"YBHWDT9koBvvlctxVUYQe"},{"uuid":"YBHWDT9koBvvlctxVUYQe","type":"anchor","x":365,"y":230,"origin":null},{"uuid":"By0VjhZYxkGa8bUebLH-m","type":"control","x":365,"y":230,"origin":"YBHWDT9koBvvlctxVUYQe"},{"uuid":"7twyk6c8KE6vP__8jmrjt","type":"control","x":615.7488281578011,"y":230,"origin":"2EsbpWXOOH8GZk35TrG_W"},{"uuid":"2EsbpWXOOH8GZk35TrG_W","type":"anchor","x":615.7488281578011,"y":230,"origin":null},{"uuid":"L-icRT4DTiSeSnLUhCete","type":"control","x":651.0701945370452,"y":230,"origin":"2EsbpWXOOH8GZk35TrG_W"},{"uuid":"E4BcYxoNdBVOTcbY4G4pI","type":"control","x":674.60870838512,"y":226.85428049645319,"origin":"CnhKADOUqkh-KfTomN4Ie"},{"uuid":"CnhKADOUqkh-KfTomN4Ie","type":"anchor","x":686.364369702026,"y":220.56284148935953,"origin":null},{"uuid":"q9H09GK4cVWAGUi_h-Bnw","type":"control","x":686.364369702026,"y":220.56284148935953,"origin":"CnhKADOUqkh-KfTomN4Ie"},{"uuid":"nt43zWcg-oJA5XyuYldx3","type":"control","x":709.9572659786272,"y":264.6465714277567,"origin":"ysIGJlxdf9dfjRPBzRAyO"},{"uuid":"ysIGJlxdf9dfjRPBzRAyO","type":"anchor","x":709.9572659786272,"y":264.6465714277567,"origin":null},{"uuid":"QaLqy-VPGDLIOuz_gn4WW","type":"control","x":698.2016046617213,"y":270.93801043485036,"origin":"ysIGJlxdf9dfjRPBzRAyO"},{"uuid":"TjxnC8YufRKi2P6t-pItk","type":"control","x":682.5273895725135,"y":288.7783065845296,"origin":"N7iBKEnR3nXeTcTBuzsYU"},{"uuid":"N7iBKEnR3nXeTcTBuzsYU","type":"anchor","x":662.9346207110036,"y":318.1674598767944,"origin":null},{"uuid":"5wUJMQDynD79SH7YhYHzY","type":"control","x":662.9346207110036,"y":318.1674598767944,"origin":"N7iBKEnR3nXeTcTBuzsYU"},{"uuid":"cWyNJfwu3-Iayj7Yd9VyR","type":"control","x":601.7129272955332,"y":410,"origin":"htzYWwGDrjkjB0bk7sSAx"},{"uuid":"htzYWwGDrjkjB0bk7sSAx","type":"anchor","x":601.7129272955332,"y":410,"origin":null},{"uuid":"xMy2B_4vkdzzGAhOrsOvk","type":"control","x":601.7129272955332,"y":410,"origin":"htzYWwGDrjkjB0bk7sSAx"},{"uuid":"HdVpuguGkz654oZ6XgGLT","type":"control","x":704.1732125291746,"y":410,"origin":"o4u0LeN8yQXFEn70cjONI"},{"uuid":"o4u0LeN8yQXFEn70cjONI","type":"anchor","x":704.1732125291746,"y":410,"origin":null},{"uuid":"8YtWDlN6NlPhuE-wYU6xG","type":"control","x":732.6773574088064,"y":410,"origin":"o4u0LeN8yQXFEn70cjONI"},{"uuid":"QpcMKICm_3ffRui0KTYG3","type":"control","x":752.337711083126,"y":406.1019314355749,"origin":"c-sLWBiH4oL725hqu-sQh"},{"uuid":"c-sLWBiH4oL725hqu-sQh","type":"anchor","x":763.1542735521334,"y":398.3057943067247,"origin":null},{"uuid":"m4Clpl5T_83wXR1caTql9","type":"control","x":763.1542735521334,"y":398.3057943067247,"origin":"c-sLWBiH4oL725hqu-sQh"},{"uuid":"ilq3dRP6YsKo2q5ipb420","type":"control","x":792.3897877853217,"y":438.86790356550273,"origin":"fkp7RWEi3kbGw3aVSMLG6"},{"uuid":"fkp7RWEi3kbGw3aVSMLG6","type":"anchor","x":792.3897877853217,"y":438.86790356550273,"origin":null},{"uuid":"-J_zfhDCAbqff68s0W6qB","type":"control","x":781.5732253163143,"y":446.66404069435293,"origin":"fkp7RWEi3kbGw3aVSMLG6"},{"uuid":"1py0UAdAz167-HhM7WxrE","type":"control","x":771.6580430530574,"y":464.0828123450374,"origin":"WxGSOxi3PE7bdoGoTGfHT"},{"uuid":"WxGSOxi3PE7bdoGoTGfHT","type":"anchor","x":762.6442409955512,"y":491.1242185175561,"origin":null},{"uuid":"Zduxg_D5AwvhxcXr5itsR","type":"control","x":762.6442409955512,"y":491.1242185175561,"origin":"WxGSOxi3PE7bdoGoTGfHT"},{"uuid":"G3i7-TQUhXGJuRqZcm_8z","type":"control","x":688.203915431768,"y":714.4451952089055,"origin":"CFjH0Ze5pyYTkpRYC65Np"},{"uuid":"CFjH0Ze5pyYTkpRYC65Np","type":"anchor","x":688.203915431768,"y":714.4451952089055,"origin":null},{"uuid":"89Nj0gZYBIr6n6t-rzYjT","type":"control","x":674.5669836335599,"y":755.3559906035298,"origin":"CFjH0Ze5pyYTkpRYC65Np"},{"uuid":"9-7zXSXL4bxVTr7rqchWo","type":"control","x":650.4990118229706,"y":762.8742588672279,"origin":"2ZrKJnz_kZPWjliGv9Dit"},{"uuid":"2ZrKJnz_kZPWjliGv9Dit","type":"anchor","x":616,"y":737,"origin":null},{"uuid":"Adhm9eqMmhtMJzD6iuxXH","type":"control","x":616,"y":737,"origin":"2ZrKJnz_kZPWjliGv9Dit"},{"uuid":"qlsBJD7iivUNnB9amelGi","type":"control","x":560,"y":695,"origin":"xeLm6QJwuWXCcxxnXCiyI"},{"uuid":"xeLm6QJwuWXCcxxnXCiyI","type":"anchor","x":560,"y":695,"origin":null},{"uuid":"YI1sO3OpBXpsDDxIiwO3J","type":"control","x":560,"y":695,"origin":"xeLm6QJwuWXCcxxnXCiyI"},{"uuid":"zkm2-deoMDi2S5IRu3V4l","type":"control","x":590,"y":655,"origin":"v6mzwyTQHFhp7xuUQhg1E"},{"uuid":"v6mzwyTQHFhp7xuUQhg1E","type":"anchor","x":590,"y":655,"origin":null},{"uuid":"c2xDEK6w-fuxR8Azc72Tg","type":"control","x":590,"y":655,"origin":"v6mzwyTQHFhp7xuUQhg1E"},{"uuid":"Ae4maa3kuBwFwwcEUyL1z","type":"control","x":618.2514822655442,"y":676.1886116991582,"origin":"jSFagvNwOnFuFJYGn6WUZ"},{"uuid":"jSFagvNwOnFuFJYGn6WUZ","type":"anchor","x":618.2514822655442,"y":676.1886116991582,"origin":null},{"uuid":"PBmmCrvu5Cv8IZxo-Sv-j","type":"control","x":634.2514822655442,"y":688.1886116991582,"origin":"jSFagvNwOnFuFJYGn6WUZ"},{"uuid":"LvxSXyF6pDMpSbFCeRcZB","type":"control","x":645.4137599257125,"y":684.701778718653,"origin":"Z4QRejeE1FxBdt5jdx9h3"},{"uuid":"Z4QRejeE1FxBdt5jdx9h3","type":"anchor","x":651.7383152460493,"y":665.7281127576427,"origin":null},{"uuid":"Kvj9-Mp_uqTMqFwLQGjTz","type":"control","x":651.7383152460493,"y":665.7281127576427,"origin":"Z4QRejeE1FxBdt5jdx9h3"},{"uuid":"JOSVXIDiaTlZfQSc92CTz","type":"control","x":701.3406868709199,"y":516.9209978830309,"origin":"zlnvZ-li7g19SxfcMHcS5"},{"uuid":"zlnvZ-li7g19SxfcMHcS5","type":"anchor","x":701.3406868709199,"y":516.9209978830309,"origin":null},{"uuid":"n812FKG5Xy8urZLayI7t0","type":"control","x":713.9897975115933,"y":478.9736659610103,"origin":"zlnvZ-li7g19SxfcMHcS5"},{"uuid":"xDIY6YxM0CswWHVR2Bse-","type":"control","x":700.3143528319301,"y":460,"origin":"hixGiFMdMR_Ivmsyupo_F"},{"uuid":"hixGiFMdMR_Ivmsyupo_F","type":"anchor","x":660.3143528319301,"y":460,"origin":null},{"uuid":"mgmQGnzVioqRxW-6mqo9_","type":"control","x":660.3143528319301,"y":460,"origin":"hixGiFMdMR_Ivmsyupo_F"},{"uuid":"7wcByRpwzsiC8wh_7uQ37","type":"control","x":508.2870727044668,"y":460,"origin":"smlLs_dUzxc19CgmnxwkG"},{"uuid":"smlLs_dUzxc19CgmnxwkG","type":"anchor","x":508.2870727044668,"y":460,"origin":null},{"uuid":"tIidVCFG-4IkNvhUrBiiR","type":"control","x":508.2870727044668,"y":460,"origin":"smlLs_dUzxc19CgmnxwkG"},{"uuid":"aAFmmo0D219L2hq7QOnuI","type":"control","x":628.2870727044668,"y":280,"origin":"SGuSZSiX-eiuXpzjhdpFf"},{"uuid":"SGuSZSiX-eiuXpzjhdpFf","type":"anchor","x":628.2870727044668,"y":280,"origin":null},{"uuid":"PicuTjFj5PQd8t6R6jnqQ","type":"control","x":628.2870727044668,"y":280,"origin":"SGuSZSiX-eiuXpzjhdpFf"},{"uuid":"KwyZsb6rEMbhVmYMrwf9l","type":"control","x":628.2870727044668,"y":280,"origin":"ojLB3iAZ-MPm1w9Cy6_q7"},{"uuid":"ojLB3iAZ-MPm1w9Cy6_q7","type":"anchor","x":628.2870727044668,"y":280,"origin":null},{"uuid":"Ud3RgT9vtOYff9L60ESWI","type":"control","x":628.2870727044668,"y":280,"origin":"ojLB3iAZ-MPm1w9Cy6_q7"},{"uuid":"phS2C89OMh9UPxJUfGoK3","type":"control","x":365,"y":280,"origin":"UV3XyO3TBTkSNa60UPpjC"},{"uuid":"UV3XyO3TBTkSNa60UPpjC","type":"anchor","x":365,"y":280,"origin":null},{"uuid":"lHTmwnKjRWkhSDC-ZPKaA","type":"control","x":351.6666666666667,"y":280,"origin":"UV3XyO3TBTkSNa60UPpjC"},{"uuid":"FZowYzhHo3HGKUzNW4z0w","type":"control","x":345,"y":284.1666666666667,"origin":"T6gC1FEf8Tlp_vh_4i6Pn"},{"uuid":"T6gC1FEf8Tlp_vh_4i6Pn","type":"anchor","x":345,"y":292.5,"origin":null},{"uuid":"Z_TKZ3POpD2BzH1Lhumf1","type":"control","x":345,"y":292.5,"origin":"T6gC1FEf8Tlp_vh_4i6Pn"},{"uuid":"VkCE1XeaTbJwB9cBOOueG","type":"control","x":325,"y":292.5,"origin":"6Jy5CDqTzjjq7rHytQmyZ"},{"uuid":"6Jy5CDqTzjjq7rHytQmyZ","type":"anchor","x":325,"y":292.5,"origin":null},{"uuid":"jZ8-ukBZg4yE8ifbd7QF4","type":"control","x":325,"y":292.5,"origin":"6Jy5CDqTzjjq7rHytQmyZ"},{"uuid":"j2hxxOlPP2JtB1bEeALIt","type":"control","x":325,"y":217.5,"origin":"gpqs_9_MqT1JUX2Ty9w32"},{"uuid":"gpqs_9_MqT1JUX2Ty9w32","type":"anchor","x":325,"y":217.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":325,"y":582.5},"end":{"x":345,"y":582.5},"control1":{"x":325,"y":582.5},"control2":{"x":345,"y":582.5},"fill":false},{"type":2,"start":{"x":345,"y":582.5},"end":{"x":365,"y":570},"control1":{"x":345,"y":574.1666666666666},"control2":{"x":351.6666666666667,"y":570},"fill":false},{"type":2,"start":{"x":365,"y":570},"end":{"x":615.7488281578011,"y":570},"control1":{"x":365,"y":570},"control2":{"x":615.7488281578011,"y":570},"fill":false},{"type":2,"start":{"x":615.7488281578011,"y":570},"end":{"x":686.364369702026,"y":579.4371585106405},"control1":{"x":651.0701945370452,"y":570},"control2":{"x":674.60870838512,"y":573.1457195035468},"fill":false},{"type":2,"start":{"x":686.364369702026,"y":579.4371585106405},"end":{"x":709.9572659786272,"y":535.3534285722433},"control1":{"x":686.364369702026,"y":579.4371585106405},"control2":{"x":709.9572659786272,"y":535.3534285722433},"fill":false},{"type":2,"start":{"x":709.9572659786272,"y":535.3534285722433},"end":{"x":662.9346207110036,"y":481.8325401232056},"control1":{"x":698.2016046617213,"y":529.0619895651496},"control2":{"x":682.5273895725135,"y":511.2216934154704},"fill":false},{"type":2,"start":{"x":662.9346207110036,"y":481.8325401232056},"end":{"x":601.7129272955332,"y":390},"control1":{"x":662.9346207110036,"y":481.8325401232056},"control2":{"x":601.7129272955332,"y":390},"fill":false},{"type":2,"start":{"x":601.7129272955332,"y":390},"end":{"x":704.1732125291746,"y":390},"control1":{"x":601.7129272955332,"y":390},"control2":{"x":704.1732125291746,"y":390},"fill":false},{"type":2,"start":{"x":704.1732125291746,"y":390},"end":{"x":763.1542735521334,"y":401.6942056932753},"control1":{"x":732.6773574088064,"y":390},"control2":{"x":752.337711083126,"y":393.8980685644251},"fill":false},{"type":2,"start":{"x":763.1542735521334,"y":401.6942056932753},"end":{"x":792.3897877853217,"y":361.13209643449727},"control1":{"x":763.1542735521334,"y":401.6942056932753},"control2":{"x":792.3897877853217,"y":361.13209643449727},"fill":false},{"type":2,"start":{"x":792.3897877853217,"y":361.13209643449727},"end":{"x":762.6442409955512,"y":308.8757814824439},"control1":{"x":781.5732253163143,"y":353.33595930564707},"control2":{"x":771.6580430530574,"y":335.9171876549626},"fill":false},{"type":2,"start":{"x":762.6442409955512,"y":308.8757814824439},"end":{"x":688.203915431768,"y":85.55480479109451},"control1":{"x":762.6442409955512,"y":308.8757814824439},"control2":{"x":688.203915431768,"y":85.55480479109451},"fill":false},{"type":2,"start":{"x":688.203915431768,"y":85.55480479109451},"end":{"x":616,"y":63},"control1":{"x":674.5669836335599,"y":44.64400939647021},"control2":{"x":650.4990118229706,"y":37.12574113277208},"fill":false},{"type":2,"start":{"x":616,"y":63},"end":{"x":560,"y":105},"control1":{"x":616,"y":63},"control2":{"x":560,"y":105},"fill":false},{"type":2,"start":{"x":560,"y":105},"end":{"x":590,"y":145},"control1":{"x":560,"y":105},"control2":{"x":590,"y":145},"fill":false},{"type":2,"start":{"x":590,"y":145},"end":{"x":618.2514822655442,"y":123.81138830084183},"control1":{"x":590,"y":145},"control2":{"x":618.2514822655442,"y":123.81138830084183},"fill":false},{"type":2,"start":{"x":618.2514822655442,"y":123.81138830084183},"end":{"x":651.7383152460493,"y":134.27188724235725},"control1":{"x":634.2514822655442,"y":111.81138830084183},"control2":{"x":645.4137599257125,"y":115.29822128134697},"fill":false},{"type":2,"start":{"x":651.7383152460493,"y":134.27188724235725},"end":{"x":701.3406868709199,"y":283.07900211696915},"control1":{"x":651.7383152460493,"y":134.27188724235725},"control2":{"x":701.3406868709199,"y":283.07900211696915},"fill":false},{"type":2,"start":{"x":701.3406868709199,"y":283.07900211696915},"end":{"x":660.3143528319301,"y":340},"control1":{"x":713.9897975115933,"y":321.0263340389897},"control2":{"x":700.3143528319301,"y":340},"fill":false},{"type":2,"start":{"x":660.3143528319301,"y":340},"end":{"x":508.2870727044668,"y":340},"control1":{"x":660.3143528319301,"y":340},"control2":{"x":508.2870727044668,"y":340},"fill":false},{"type":2,"start":{"x":508.2870727044668,"y":340},"end":{"x":628.2870727044668,"y":520},"control1":{"x":508.2870727044668,"y":340},"control2":{"x":628.2870727044668,"y":520},"fill":false},{"type":2,"start":{"x":628.2870727044668,"y":520},"end":{"x":628.2870727044668,"y":520},"control1":{"x":628.2870727044668,"y":520},"control2":{"x":628.2870727044668,"y":520},"fill":false},{"type":2,"start":{"x":628.2870727044668,"y":520},"end":{"x":365,"y":520},"control1":{"x":628.2870727044668,"y":520},"control2":{"x":365,"y":520},"fill":false},{"type":2,"start":{"x":365,"y":520},"end":{"x":345,"y":507.5},"control1":{"x":351.6666666666667,"y":520},"control2":{"x":345,"y":515.8333333333333},"fill":false},{"type":2,"start":{"x":345,"y":507.5},"end":{"x":325,"y":507.5},"control1":{"x":345,"y":507.5},"control2":{"x":325,"y":507.5},"fill":false},{"type":2,"start":{"x":325,"y":507.5},"end":{"x":325,"y":582.5},"control1":{"x":325,"y":507.5},"control2":{"x":325,"y":582.5},"fill":false}],"preview":[{"type":2,"start":{"x":32.5,"y":21.75},"end":{"x":34.5,"y":21.75},"control1":{"x":32.5,"y":21.75},"control2":{"x":34.5,"y":21.75},"fill":false},{"type":2,"start":{"x":34.5,"y":21.75},"end":{"x":36.5,"y":23},"control1":{"x":34.5,"y":22.583333333333336},"control2":{"x":35.16666666666667,"y":23},"fill":false},{"type":2,"start":{"x":36.5,"y":23},"end":{"x":61.574882815780114,"y":23},"control1":{"x":36.5,"y":23},"control2":{"x":61.574882815780114,"y":23},"fill":false},{"type":2,"start":{"x":61.574882815780114,"y":23},"end":{"x":68.63643697020261,"y":22.056284148935955},"control1":{"x":65.10701945370452,"y":23},"control2":{"x":67.46087083851201,"y":22.68542804964532},"fill":false},{"type":2,"start":{"x":68.63643697020261,"y":22.056284148935955},"end":{"x":70.99572659786273,"y":26.464657142775675},"control1":{"x":68.63643697020261,"y":22.056284148935955},"control2":{"x":70.99572659786273,"y":26.464657142775675},"fill":false},{"type":2,"start":{"x":70.99572659786273,"y":26.464657142775675},"end":{"x":66.29346207110036,"y":31.81674598767944},"control1":{"x":69.82016046617213,"y":27.093801043485037},"control2":{"x":68.25273895725135,"y":28.877830658452964},"fill":false},{"type":2,"start":{"x":66.29346207110036,"y":31.81674598767944},"end":{"x":60.17129272955332,"y":41},"control1":{"x":66.29346207110036,"y":31.81674598767944},"control2":{"x":60.17129272955332,"y":41},"fill":false},{"type":2,"start":{"x":60.17129272955332,"y":41},"end":{"x":70.41732125291746,"y":41},"control1":{"x":60.17129272955332,"y":41},"control2":{"x":70.41732125291746,"y":41},"fill":false},{"type":2,"start":{"x":70.41732125291746,"y":41},"end":{"x":76.31542735521334,"y":39.83057943067247},"control1":{"x":73.26773574088064,"y":41},"control2":{"x":75.23377110831261,"y":40.610193143557495},"fill":false},{"type":2,"start":{"x":76.31542735521334,"y":39.83057943067247},"end":{"x":79.23897877853217,"y":43.88679035655028},"control1":{"x":76.31542735521334,"y":39.83057943067247},"control2":{"x":79.23897877853217,"y":43.88679035655028},"fill":false},{"type":2,"start":{"x":79.23897877853217,"y":43.88679035655028},"end":{"x":76.26442409955511,"y":49.11242185175561},"control1":{"x":78.15732253163144,"y":44.666404069435295},"control2":{"x":77.16580430530576,"y":46.40828123450374},"fill":false},{"type":2,"start":{"x":76.26442409955511,"y":49.11242185175561},"end":{"x":68.8203915431768,"y":71.44451952089055},"control1":{"x":76.26442409955511,"y":49.11242185175561},"control2":{"x":68.8203915431768,"y":71.44451952089055},"fill":false},{"type":2,"start":{"x":68.8203915431768,"y":71.44451952089055},"end":{"x":61.6,"y":73.7},"control1":{"x":67.45669836335598,"y":75.53559906035298},"control2":{"x":65.04990118229706,"y":76.2874258867228},"fill":false},{"type":2,"start":{"x":61.6,"y":73.7},"end":{"x":56,"y":69.5},"control1":{"x":61.6,"y":73.7},"control2":{"x":56,"y":69.5},"fill":false},{"type":2,"start":{"x":56,"y":69.5},"end":{"x":59,"y":65.5},"control1":{"x":56,"y":69.5},"control2":{"x":59,"y":65.5},"fill":false},{"type":2,"start":{"x":59,"y":65.5},"end":{"x":61.82514822655442,"y":67.61886116991582},"control1":{"x":59,"y":65.5},"control2":{"x":61.82514822655442,"y":67.61886116991582},"fill":false},{"type":2,"start":{"x":61.82514822655442,"y":67.61886116991582},"end":{"x":65.17383152460494,"y":66.57281127576428},"control1":{"x":63.42514822655442,"y":68.81886116991582},"control2":{"x":64.54137599257125,"y":68.4701778718653},"fill":false},{"type":2,"start":{"x":65.17383152460494,"y":66.57281127576428},"end":{"x":70.13406868709198,"y":51.69209978830309},"control1":{"x":65.17383152460494,"y":66.57281127576428},"control2":{"x":70.13406868709198,"y":51.69209978830309},"fill":false},{"type":2,"start":{"x":70.13406868709198,"y":51.69209978830309},"end":{"x":66.03143528319302,"y":46},"control1":{"x":71.39897975115933,"y":47.89736659610103},"control2":{"x":70.03143528319302,"y":46},"fill":false},{"type":2,"start":{"x":66.03143528319302,"y":46},"end":{"x":50.828707270446685,"y":46},"control1":{"x":66.03143528319302,"y":46},"control2":{"x":50.828707270446685,"y":46},"fill":false},{"type":2,"start":{"x":50.828707270446685,"y":46},"end":{"x":62.828707270446685,"y":28},"control1":{"x":50.828707270446685,"y":46},"control2":{"x":62.828707270446685,"y":28},"fill":false},{"type":2,"start":{"x":62.828707270446685,"y":28},"end":{"x":62.828707270446685,"y":28},"control1":{"x":62.828707270446685,"y":28},"control2":{"x":62.828707270446685,"y":28},"fill":false},{"type":2,"start":{"x":62.828707270446685,"y":28},"end":{"x":36.5,"y":28},"control1":{"x":62.828707270446685,"y":28},"control2":{"x":36.5,"y":28},"fill":false},{"type":2,"start":{"x":36.5,"y":28},"end":{"x":34.5,"y":29.25},"control1":{"x":35.16666666666667,"y":28},"control2":{"x":34.5,"y":28.41666666666667},"fill":false},{"type":2,"start":{"x":34.5,"y":29.25},"end":{"x":32.5,"y":29.25},"control1":{"x":34.5,"y":29.25},"control2":{"x":32.5,"y":29.25},"fill":false},{"type":2,"start":{"x":32.5,"y":29.25},"end":{"x":32.5,"y":21.75},"control1":{"x":32.5,"y":29.25},"control2":{"x":32.5,"y":21.75},"fill":false}]}]}},{"uuid":"QQRWn_dE61aPHXx56zp47","type":"system","name":"横折","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"Bsd1Yp3_dbK9DclTyUJ6K","name":"横-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"be0CBxNXrF54py3rnZxlf","name":"折-水平延伸","type":0,"value":100,"min":0,"max":1000},{"uuid":"Y0BtZoKxVZr34G0niPHE-","name":"折-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"xUE-vnt17F50zYwaR7BGb","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"Ycuqzfs3DwQ7l7G9t5K4k","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"WICkKvb0JCjyly3t__IJ6","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"K_FZFVVJ9qLS3L3tsaTSG","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"Zi7BWtVoEZOY2qhzuaaL4","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"W7pGDNFPT5MfYq8xvZA0F","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"OHSQhSTAFwIWSfog4J7LT","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"kOf483cqkpH-O9EF5qxy9","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_QQRWn_dE61aPHXx56zp47 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 345\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_horizonalSpan: glyph.getParam('折-水平延伸'),\n  zhe_verticalSpan: glyph.getParam('折-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-水平延伸', _params.zhe_horizonalSpan)\n  glyph.setParam('折-竖直延伸', _params.zhe_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_horizonal_span_range = glyph.getParamRange('折-水平延伸')\n  const zhe_vertical_span_range = glyph.getParamRange('折-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_horizonalSpan = range(zhe_start.x - zhe_end.x, zhe_horizonal_span_range)\n  const zhe_verticalSpan = range(zhe_end.y - zhe_start.y, zhe_vertical_span_range)\n  return {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折\n  const zhe_start = new FP.Joint(\n    'zhe_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe_end = new FP.Joint(\n    'zhe_end',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight)\n  const { corner: in_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_zhe_up = {\n    x: out_corner_heng_zhe_down.x,\n    y: out_corner_heng_zhe_down.y - weight,\n  }\n\n  // 计算横折拐角处内外圆角相关的点与数据\n  let in_radius_heng_zhe = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng_zhe = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横或折长度，取横或折的最小长度\n  const in_radius_min_length_heng_zhe = Math.min(\n    getDistance(in_corner_heng_zhe, in_heng_start),\n    getDistance(in_corner_heng_zhe, in_zhe_end),\n  )\n  const out_radius_min_length_heng_zhe = Math.min(\n    getDistance(out_zhe_end, out_heng_start),\n    getDistance(out_zhe_start, out_zhe_end),\n  )\n  if (in_radius_heng_zhe >= in_radius_min_length_heng_zhe) {\n    in_radius_heng_zhe = in_radius_min_length_heng_zhe\n  }\n  if (out_radius_heng_zhe >= out_radius_min_length_heng_zhe) {\n    out_radius_heng_zhe = out_radius_min_length_heng_zhe\n  }\n  const in_radius_start_heng_zhe = {\n    x: in_corner_heng_zhe.x - in_radius_heng_zhe,\n    y: in_corner_heng_zhe.y,\n  }\n  const in_radius_end_heng_zhe = getRadiusPoint({\n    start: in_corner_heng_zhe,\n    end: in_zhe_end,\n    radius: in_radius_heng_zhe,\n  })\n  const out_radius_start_heng_zhe = {\n    x: out_corner_heng_zhe.x - out_radius_heng_zhe,\n    y: out_corner_heng_zhe.y,\n  }\n  const out_radius_end_heng_zhe = getRadiusPoint({\n    start: out_corner_heng_zhe,\n    end: out_zhe_end,\n    radius: out_radius_heng_zhe,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe, out_zhe_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_zhe.x - corner_radius,\n      y: out_corner_heng_zhe.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_heng_zhe,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (bending_degree > 1 && turn_style_type === 0) {\n    // 绘制外侧横折圆角\n    pen.lineTo(out_radius_start_heng_zhe.x, out_radius_start_heng_zhe.y)\n    pen.quadraticBezierTo(out_corner_heng_zhe.x, out_corner_heng_zhe.y, out_radius_end_heng_zhe.x, out_radius_end_heng_zhe.y)\n  } else if (turn_style_type === 0) {\n    pen.lineTo(out_corner_heng_zhe_up.x, out_corner_heng_zhe_up.y)\n    pen.lineTo(out_corner_heng_zhe_down.x, out_corner_heng_zhe_down.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折\n  pen.lineTo(out_zhe_end.x, out_zhe_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_zhe_end.x, in_zhe_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧横折圆角\n  if (bending_degree > 1 && turn_style_type === 0) {\n    pen.lineTo(in_radius_end_heng_zhe.x, in_radius_end_heng_zhe.y)\n    pen.quadraticBezierTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y, in_radius_start_heng_zhe.x, in_radius_start_heng_zhe.y)\n  } else {\n    pen.lineTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_heng_start.x, out_heng_start.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":345,"uuid":"TQOVr5HmzVMVSvN1IL5mH","name":"heng_start_ref"},{"_x":750,"_y":345,"uuid":"orcUwfiEJsZbsWwEMGmLS","name":"heng_end_ref"},{"_x":250,"_y":345,"uuid":"EoRrYXZfsWlR6KRZUcl5o","name":"heng_start"},{"_x":750,"_y":345,"uuid":"aD9XZXLihmz5Z4fP1YrK3","name":"heng_end"},{"_x":750,"_y":345,"uuid":"AJ7pkhHtyksyowIXh85xP","name":"zhe_start"},{"_x":650,"_y":645,"uuid":"ifU1GJ8xb5qB4yTEYFlcU","name":"zhe_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"}],"_components":[{"points":[{"uuid":"3SvWGywxhYzhyCnIBS4cZ","type":"anchor","x":250,"y":307.5,"origin":null},{"uuid":"O0GQeErmCAb3t0Pp7zTTt","type":"control","x":250,"y":307.5,"origin":"3SvWGywxhYzhyCnIBS4cZ"},{"uuid":"LroAs-WQPBm9OZVpHYs86","type":"control","x":270,"y":307.5,"origin":"uhGEP1vaFhOsyeSrBnbsM"},{"uuid":"uhGEP1vaFhOsyeSrBnbsM","type":"anchor","x":270,"y":307.5,"origin":null},{"uuid":"XYwHQv4DWTjweH_6W9sUU","type":"control","x":270,"y":315.8333333333333,"origin":"uhGEP1vaFhOsyeSrBnbsM"},{"uuid":"VukBBWM4GvwzZWgHOH4G6","type":"control","x":276.6666666666667,"y":320,"origin":"xcLGQOlwSEagjMVcGzpG5"},{"uuid":"xcLGQOlwSEagjMVcGzpG5","type":"anchor","x":290,"y":320,"origin":null},{"uuid":"A0wJTkm4WkeZ6GetC4_uW","type":"control","x":290,"y":320,"origin":"xcLGQOlwSEagjMVcGzpG5"},{"uuid":"lDJgw1awntGN3l_0Bq2Ql","type":"control","x":699.1732125291746,"y":320,"origin":"4_QywD_-gjrmHpPgvgbEk"},{"uuid":"4_QywD_-gjrmHpPgvgbEk","type":"anchor","x":699.1732125291746,"y":320,"origin":null},{"uuid":"-khi2hf3bdDT73pztOU7-","type":"control","x":727.6773574088064,"y":320,"origin":"4_QywD_-gjrmHpPgvgbEk"},{"uuid":"LpHgb1cwNKmRYL339EWSn","type":"control","x":747.337711083126,"y":316.1019314355749,"origin":"TAIJSxd687wvRz0mc9oPv"},{"uuid":"TAIJSxd687wvRz0mc9oPv","type":"anchor","x":758.1542735521334,"y":308.3057943067247,"origin":null},{"uuid":"9GhGQkmmkuXTHMikF6owl","type":"control","x":758.1542735521334,"y":308.3057943067247,"origin":"TAIJSxd687wvRz0mc9oPv"},{"uuid":"Zn5FdsXW4-90Eeack2HDi","type":"control","x":787.3897877853217,"y":348.86790356550273,"origin":"Eyei7Sni13dLVU1rzNAxC"},{"uuid":"Eyei7Sni13dLVU1rzNAxC","type":"anchor","x":787.3897877853217,"y":348.86790356550273,"origin":null},{"uuid":"RASuL3Q050V4aMwMZTiZ8","type":"control","x":776.5732253163143,"y":356.66404069435293,"origin":"Eyei7Sni13dLVU1rzNAxC"},{"uuid":"0Qsi_V8mm6eDLN9xygkSc","type":"control","x":766.6580430530574,"y":374.0828123450374,"origin":"KRfPxyk2JAEADBSm5DYur"},{"uuid":"KRfPxyk2JAEADBSm5DYur","type":"anchor","x":757.6442409955512,"y":401.1242185175561,"origin":null},{"uuid":"kV61X8t98ggw3GBkJbxFX","type":"control","x":757.6442409955512,"y":401.1242185175561,"origin":"KRfPxyk2JAEADBSm5DYur"},{"uuid":"1hMgceNQPrnLCPZ5dWxK7","type":"control","x":673.7170824512629,"y":652.9056941504209,"origin":"dru-Dywm7srknNZVOit_H"},{"uuid":"dru-Dywm7srknNZVOit_H","type":"anchor","x":673.7170824512629,"y":652.9056941504209,"origin":null},{"uuid":"6fgs6nDSyPKehc3blW9p3","type":"control","x":673.7170824512629,"y":652.9056941504209,"origin":"dru-Dywm7srknNZVOit_H"},{"uuid":"wCNBNj2cDS9N4j0w4Y_6H","type":"control","x":626.2829175487371,"y":637.0943058495791,"origin":"GVjfExfDKSa_Pj7ue97rz"},{"uuid":"GVjfExfDKSa_Pj7ue97rz","type":"anchor","x":626.2829175487371,"y":637.0943058495791,"origin":null},{"uuid":"lhZ3gmTDRbnRef4YZm3vw","type":"control","x":626.2829175487371,"y":637.0943058495791,"origin":"GVjfExfDKSa_Pj7ue97rz"},{"uuid":"cDjo6Uwn9BLa81vhDgE-j","type":"control","x":715.3143528319301,"y":370,"origin":"uFf4-vTywoxPeVDCoiK89"},{"uuid":"uFf4-vTywoxPeVDCoiK89","type":"anchor","x":715.3143528319301,"y":370,"origin":null},{"uuid":"2qOscB00qLhjFZ74Iie_z","type":"control","x":715.3143528319301,"y":370,"origin":"uFf4-vTywoxPeVDCoiK89"},{"uuid":"ThhcCrLhwco9JV4vOtp5U","type":"control","x":290,"y":370,"origin":"iu5JSeHiiz8AS3P7kmRtZ"},{"uuid":"iu5JSeHiiz8AS3P7kmRtZ","type":"anchor","x":290,"y":370,"origin":null},{"uuid":"qT8N-A6UpLe1rS7-ilFXh","type":"control","x":276.6666666666667,"y":370,"origin":"iu5JSeHiiz8AS3P7kmRtZ"},{"uuid":"xlGUCo5c-iJLo2miNyFar","type":"control","x":270,"y":374.1666666666667,"origin":"d2zIpDYUGX3eb9Lsfccd2"},{"uuid":"d2zIpDYUGX3eb9Lsfccd2","type":"anchor","x":270,"y":382.5,"origin":null},{"uuid":"Jr4WrD0BVHfkH5VYowftl","type":"control","x":270,"y":382.5,"origin":"d2zIpDYUGX3eb9Lsfccd2"},{"uuid":"JCDI-nmOj8xGTjvSTuNu5","type":"control","x":250,"y":382.5,"origin":"gxedHWriW7A92OYzDBsQf"},{"uuid":"gxedHWriW7A92OYzDBsQf","type":"anchor","x":250,"y":382.5,"origin":null},{"uuid":"LkujE91VP0QYZtUVRV-ON","type":"control","x":250,"y":382.5,"origin":"gxedHWriW7A92OYzDBsQf"},{"uuid":"Uvu48jWAAYJkopDjZ9YNE","type":"control","x":250,"y":320,"origin":"P5HwxmDnxqn7hGZvsk_nC"},{"uuid":"P5HwxmDnxqn7hGZvsk_nC","type":"anchor","x":250,"y":320,"origin":null},{"uuid":"h5evcn7jME31YTZJXYw6H","type":"control","x":250,"y":320,"origin":"P5HwxmDnxqn7hGZvsk_nC"},{"uuid":"fhj9DqmoHMGOB7NVbZ6Pv","type":"control","x":250,"y":307.5,"origin":"xYViNB6l-HF2nc-MxDspJ"},{"uuid":"xYViNB6l-HF2nc-MxDspJ","type":"anchor","x":250,"y":307.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":492.5},"end":{"x":270,"y":492.5},"control1":{"x":250,"y":492.5},"control2":{"x":270,"y":492.5},"fill":false},{"type":2,"start":{"x":270,"y":492.5},"end":{"x":290,"y":480},"control1":{"x":270,"y":484.16666666666674},"control2":{"x":276.6666666666667,"y":480},"fill":false},{"type":2,"start":{"x":290,"y":480},"end":{"x":699.1732125291746,"y":480},"control1":{"x":290,"y":480},"control2":{"x":699.1732125291746,"y":480},"fill":false},{"type":2,"start":{"x":699.1732125291746,"y":480},"end":{"x":758.1542735521334,"y":491.6942056932753},"control1":{"x":727.6773574088064,"y":480},"control2":{"x":747.337711083126,"y":483.8980685644251},"fill":false},{"type":2,"start":{"x":758.1542735521334,"y":491.6942056932753},"end":{"x":787.3897877853217,"y":451.13209643449727},"control1":{"x":758.1542735521334,"y":491.6942056932753},"control2":{"x":787.3897877853217,"y":451.13209643449727},"fill":false},{"type":2,"start":{"x":787.3897877853217,"y":451.13209643449727},"end":{"x":757.6442409955512,"y":398.8757814824439},"control1":{"x":776.5732253163143,"y":443.33595930564707},"control2":{"x":766.6580430530574,"y":425.9171876549626},"fill":false},{"type":2,"start":{"x":757.6442409955512,"y":398.8757814824439},"end":{"x":673.7170824512629,"y":147.0943058495791},"control1":{"x":757.6442409955512,"y":398.8757814824439},"control2":{"x":673.7170824512629,"y":147.0943058495791},"fill":false},{"type":2,"start":{"x":673.7170824512629,"y":147.0943058495791},"end":{"x":626.2829175487371,"y":162.9056941504209},"control1":{"x":673.7170824512629,"y":147.0943058495791},"control2":{"x":626.2829175487371,"y":162.9056941504209},"fill":false},{"type":2,"start":{"x":626.2829175487371,"y":162.9056941504209},"end":{"x":715.3143528319301,"y":430},"control1":{"x":626.2829175487371,"y":162.9056941504209},"control2":{"x":715.3143528319301,"y":430},"fill":false},{"type":2,"start":{"x":715.3143528319301,"y":430},"end":{"x":290,"y":430},"control1":{"x":715.3143528319301,"y":430},"control2":{"x":290,"y":430},"fill":false},{"type":2,"start":{"x":290,"y":430},"end":{"x":270,"y":417.5},"control1":{"x":276.6666666666667,"y":430},"control2":{"x":270,"y":425.83333333333326},"fill":false},{"type":2,"start":{"x":270,"y":417.5},"end":{"x":250,"y":417.5},"control1":{"x":270,"y":417.5},"control2":{"x":250,"y":417.5},"fill":false},{"type":2,"start":{"x":250,"y":417.5},"end":{"x":250,"y":480},"control1":{"x":250,"y":417.5},"control2":{"x":250,"y":480},"fill":false},{"type":2,"start":{"x":250,"y":480},"end":{"x":250,"y":492.5},"control1":{"x":250,"y":480},"control2":{"x":250,"y":492.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":30.75},"end":{"x":27,"y":30.75},"control1":{"x":25,"y":30.75},"control2":{"x":27,"y":30.75},"fill":false},{"type":2,"start":{"x":27,"y":30.75},"end":{"x":29,"y":32},"control1":{"x":27,"y":31.583333333333332},"control2":{"x":27.66666666666667,"y":32},"fill":false},{"type":2,"start":{"x":29,"y":32},"end":{"x":69.91732125291746,"y":32},"control1":{"x":29,"y":32},"control2":{"x":69.91732125291746,"y":32},"fill":false},{"type":2,"start":{"x":69.91732125291746,"y":32},"end":{"x":75.81542735521334,"y":30.830579430672472},"control1":{"x":72.76773574088064,"y":32},"control2":{"x":74.73377110831261,"y":31.610193143557492},"fill":false},{"type":2,"start":{"x":75.81542735521334,"y":30.830579430672472},"end":{"x":78.73897877853217,"y":34.88679035655027},"control1":{"x":75.81542735521334,"y":30.830579430672472},"control2":{"x":78.73897877853217,"y":34.88679035655027},"fill":false},{"type":2,"start":{"x":78.73897877853217,"y":34.88679035655027},"end":{"x":75.76442409955511,"y":40.11242185175561},"control1":{"x":77.65732253163144,"y":35.666404069435295},"control2":{"x":76.66580430530574,"y":37.40828123450374},"fill":false},{"type":2,"start":{"x":75.76442409955511,"y":40.11242185175561},"end":{"x":67.37170824512629,"y":65.2905694150421},"control1":{"x":75.76442409955511,"y":40.11242185175561},"control2":{"x":67.37170824512629,"y":65.2905694150421},"fill":false},{"type":2,"start":{"x":67.37170824512629,"y":65.2905694150421},"end":{"x":62.628291754873715,"y":63.709430584957914},"control1":{"x":67.37170824512629,"y":65.2905694150421},"control2":{"x":62.628291754873715,"y":63.709430584957914},"fill":false},{"type":2,"start":{"x":62.628291754873715,"y":63.709430584957914},"end":{"x":71.53143528319302,"y":37},"control1":{"x":62.628291754873715,"y":63.709430584957914},"control2":{"x":71.53143528319302,"y":37},"fill":false},{"type":2,"start":{"x":71.53143528319302,"y":37},"end":{"x":29,"y":37},"control1":{"x":71.53143528319302,"y":37},"control2":{"x":29,"y":37},"fill":false},{"type":2,"start":{"x":29,"y":37},"end":{"x":27,"y":38.25},"control1":{"x":27.66666666666667,"y":37},"control2":{"x":27,"y":37.41666666666667},"fill":false},{"type":2,"start":{"x":27,"y":38.25},"end":{"x":25,"y":38.25},"control1":{"x":27,"y":38.25},"control2":{"x":25,"y":38.25},"fill":false},{"type":2,"start":{"x":25,"y":38.25},"end":{"x":25,"y":32},"control1":{"x":25,"y":38.25},"control2":{"x":25,"y":32},"fill":false},{"type":2,"start":{"x":25,"y":32},"end":{"x":25,"y":30.75},"control1":{"x":25,"y":32},"control2":{"x":25,"y":30.75},"fill":false}]}]}},{"uuid":"W_9fP5qsAXt0JoJO0jnBx","type":"system","name":"横折2","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"CKalrNmu9P9wEotKfBsYV","name":"横-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"xByW4ped79_csrbnAbniv","name":"折-长度","type":0,"value":300,"min":0,"max":1000},{"uuid":"-loFgPSeTk6MDXnTVVV29","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"WIee3tIioPYDenRNvU2pa","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"H9d0ljB_FE8HCW-BeuEol","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"oM3XVJrcjHiHM7BTN8zjf","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"Q7MVg0lyFSR5Fr5UcF4Bo","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"gNimISyPL3T64e1F8QaE0","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"fwRgq_NpXbPtf9li2lwHI","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"2_tX8Vsk6i8k3lIdgprro","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_W_9fP5qsAXt0JoJO0jnBx (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 345\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_length: glyph.getParam('折-长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-水平延伸', _params.zhe_horizonalSpan)\n  glyph.setParam('折-竖直延伸', _params.zhe_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_horizonal_span_range = glyph.getParamRange('折-水平延伸')\n  const zhe_vertical_span_range = glyph.getParamRange('折-竖直延伸')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_horizonalSpan = range(zhe_start.x - zhe_end.x, zhe_horizonal_span_range)\n  const zhe_verticalSpan = range(zhe_end.y - zhe_start.y, zhe_vertical_span_range)\n  return {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_length,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折\n  let zhe_start, zhe_end\n  const zhe_start_ref = new FP.Joint(\n    'zhe_start_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  const zhe_end_ref = new FP.Joint(\n    'zhe_end_ref',\n    {\n      x: zhe_start_ref.x,\n      y: zhe_start_ref.y + zhe_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x - weight / 2,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x - weight / 2,\n        y: zhe_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x + weight / 2,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x + weight / 2,\n        y: zhe_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x,\n        y: zhe_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(zhe_start_ref)\n  glyph.addJoint(zhe_end_ref)\n  glyph.addRefLine(refline(zhe_start_ref, zhe_end_ref, 'ref'))\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight)\n  const { corner: in_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_zhe_up = {\n    x: out_corner_heng_zhe_down.x,\n    y: out_corner_heng_zhe_down.y - weight,\n  }\n\n  // 计算横折拐角处内外圆角相关的点与数据\n  let in_radius_heng_zhe = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng_zhe = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横或折长度，取横或折的最小长度\n  const in_radius_min_length_heng_zhe = Math.min(\n    getDistance(in_corner_heng_zhe, in_heng_start),\n    getDistance(in_corner_heng_zhe, in_zhe_end),\n  )\n  const out_radius_min_length_heng_zhe = Math.min(\n    getDistance(out_zhe_end, out_heng_start),\n    getDistance(out_zhe_start, out_zhe_end),\n  )\n  if (in_radius_heng_zhe >= in_radius_min_length_heng_zhe) {\n    in_radius_heng_zhe = in_radius_min_length_heng_zhe\n  }\n  if (out_radius_heng_zhe >= out_radius_min_length_heng_zhe) {\n    out_radius_heng_zhe = out_radius_min_length_heng_zhe\n  }\n  const in_radius_start_heng_zhe = {\n    x: in_corner_heng_zhe.x - in_radius_heng_zhe,\n    y: in_corner_heng_zhe.y,\n  }\n  const in_radius_end_heng_zhe = getRadiusPoint({\n    start: in_corner_heng_zhe,\n    end: in_zhe_end,\n    radius: in_radius_heng_zhe,\n  })\n  const out_radius_start_heng_zhe = {\n    x: out_corner_heng_zhe.x - out_radius_heng_zhe,\n    y: out_corner_heng_zhe.y,\n  }\n  const out_radius_end_heng_zhe = getRadiusPoint({\n    start: out_corner_heng_zhe,\n    end: out_zhe_end,\n    radius: out_radius_heng_zhe,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe, out_zhe_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_zhe.x - corner_radius,\n      y: out_corner_heng_zhe.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_heng_zhe,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (bending_degree > 1 && turn_style_type === 0) {\n    // 绘制外侧横折圆角\n    pen.lineTo(out_radius_start_heng_zhe.x, out_radius_start_heng_zhe.y)\n    pen.quadraticBezierTo(out_corner_heng_zhe.x, out_corner_heng_zhe.y, out_radius_end_heng_zhe.x, out_radius_end_heng_zhe.y)\n  } else if (turn_style_type === 0) {\n    pen.lineTo(out_corner_heng_zhe_up.x, out_corner_heng_zhe_up.y)\n    pen.lineTo(out_corner_heng_zhe_down.x, out_corner_heng_zhe_down.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折\n  pen.lineTo(out_zhe_end.x, out_zhe_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_zhe_end.x, in_zhe_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧横折圆角\n  if (bending_degree > 1 && turn_style_type === 0) {\n    pen.lineTo(in_radius_end_heng_zhe.x, in_radius_end_heng_zhe.y)\n    pen.quadraticBezierTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y, in_radius_start_heng_zhe.x, in_radius_start_heng_zhe.y)\n  } else {\n    pen.lineTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(out_heng_start.x, out_heng_start.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":345,"uuid":"EDTyDuCsH4HSD7b-ImSxx","name":"heng_start_ref"},{"_x":750,"_y":345,"uuid":"lk0p2HN0RVwSIQAGxtfhr","name":"heng_end_ref"},{"_x":750,"_y":345,"uuid":"9vA_MMH-oAotetcxzMNeZ","name":"zhe_start_ref"},{"_x":750,"_y":645,"uuid":"YZWFu7YHLsy8ggjy9U4VU","name":"zhe_end_ref"},{"_x":250,"_y":345,"uuid":"3GVdO6Y5QmF7exzGFWUpa","name":"heng_start"},{"_x":750,"_y":345,"uuid":"yDPffLz93PBHWDyifCfOj","name":"heng_end"},{"_x":750,"_y":345,"uuid":"bQ7wfVh2hvDV9EQauSDgz","name":"zhe_start"},{"_x":750,"_y":645,"uuid":"6nO2N8Fzjq4R-N1zl8_NF","name":"zhe_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"zhe_start_ref-zhe_end_ref","start":"zhe_start_ref","end":"zhe_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"}],"_components":[{"points":[{"uuid":"RMwQ9BdJX2aBZGziz1l57","type":"anchor","x":250,"y":307.5,"origin":null},{"uuid":"M_yitq1jq5UEF6G7015dH","type":"control","x":250,"y":307.5,"origin":"RMwQ9BdJX2aBZGziz1l57"},{"uuid":"sWSJAINrLHOazJm2ErZSD","type":"control","x":270,"y":307.5,"origin":"mmOhoCAH2Vc9xIhX0YoHB"},{"uuid":"mmOhoCAH2Vc9xIhX0YoHB","type":"anchor","x":270,"y":307.5,"origin":null},{"uuid":"dYoxqb3FVydeke82yDnSj","type":"control","x":270,"y":315.8333333333333,"origin":"mmOhoCAH2Vc9xIhX0YoHB"},{"uuid":"NYDwlR86BSNr_Id0KGATu","type":"control","x":276.6666666666667,"y":320,"origin":"lFroLb-Iv_JqDuinAKm7X"},{"uuid":"lFroLb-Iv_JqDuinAKm7X","type":"anchor","x":290,"y":320,"origin":null},{"uuid":"7lvhXMtLNc6SiJNcI6m99","type":"control","x":290,"y":320,"origin":"lFroLb-Iv_JqDuinAKm7X"},{"uuid":"QGmvbqOPGFpBdcjgxXyTr","type":"control","x":704.2893218813451,"y":320,"origin":"KwAfz8zzCOowUey7xnPR5"},{"uuid":"KwAfz8zzCOowUey7xnPR5","type":"anchor","x":704.2893218813451,"y":320,"origin":null},{"uuid":"Vu56s-fFY4MaE9cJDhOZa","type":"control","x":727.8595479208967,"y":320,"origin":"KwAfz8zzCOowUey7xnPR5"},{"uuid":"nRkUvhiaOqRNE-Z7kyELj","type":"control","x":744.3587061485829,"y":315.2859547920897,"origin":"deE4Os8sjCiQhv2IEIZL2"},{"uuid":"deE4Os8sjCiQhv2IEIZL2","type":"anchor","x":753.7867965644035,"y":305.85786437626905,"origin":null},{"uuid":"zVSN2lFFRWhTwRrQSpgMs","type":"control","x":753.7867965644035,"y":305.85786437626905,"origin":"deE4Os8sjCiQhv2IEIZL2"},{"uuid":"4yLYV9L96H3GTIBp6xv_H","type":"control","x":789.142135623731,"y":341.2132034355964,"origin":"YLKYATNi20oZNgiafRdkr"},{"uuid":"YLKYATNi20oZNgiafRdkr","type":"anchor","x":789.142135623731,"y":341.2132034355964,"origin":null},{"uuid":"y3QYtWPQ1LFbarfHUmvEs","type":"control","x":779.7140452079103,"y":350.64129385141706,"origin":"YLKYATNi20oZNgiafRdkr"},{"uuid":"u3KwI_OcljX2U28f4_aX1","type":"control","x":775,"y":367.14045207910317,"origin":"4R-MP_zbO6vEhrcyuuq91"},{"uuid":"4R-MP_zbO6vEhrcyuuq91","type":"anchor","x":775,"y":390.71067811865476,"origin":null},{"uuid":"VDz9ev_8Ec8_k6z5DafFx","type":"control","x":775,"y":390.71067811865476,"origin":"4R-MP_zbO6vEhrcyuuq91"},{"uuid":"TIaFK32yn1qJlRTu89Hix","type":"control","x":775,"y":645,"origin":"uESXtFfqcCbPXUJjOdw5x"},{"uuid":"uESXtFfqcCbPXUJjOdw5x","type":"anchor","x":775,"y":645,"origin":null},{"uuid":"jLrap7cVQvKder44WcfXt","type":"control","x":775,"y":645,"origin":"uESXtFfqcCbPXUJjOdw5x"},{"uuid":"516TuAAwVTHESWQNDYfY7","type":"control","x":725,"y":645,"origin":"3rMRDugH-49-tdyLVU4eV"},{"uuid":"3rMRDugH-49-tdyLVU4eV","type":"anchor","x":725,"y":645,"origin":null},{"uuid":"3eLIdNgv2P9SHYdqRZhaJ","type":"control","x":725,"y":645,"origin":"3rMRDugH-49-tdyLVU4eV"},{"uuid":"IpGzdG6VM_wR6btf0pgJu","type":"control","x":725,"y":370,"origin":"ofSbefF_lDE6rH-uF9gpY"},{"uuid":"ofSbefF_lDE6rH-uF9gpY","type":"anchor","x":725,"y":370,"origin":null},{"uuid":"o4XyMlfln7OEKNIAAnzd9","type":"control","x":725,"y":370,"origin":"ofSbefF_lDE6rH-uF9gpY"},{"uuid":"1w4Ogw4nE435ibj1OKcdD","type":"control","x":290,"y":370,"origin":"6WMhCofluFBnOKq6GKlnz"},{"uuid":"6WMhCofluFBnOKq6GKlnz","type":"anchor","x":290,"y":370,"origin":null},{"uuid":"gwXD3mjcBEqhwJIuSr1zQ","type":"control","x":276.6666666666667,"y":370,"origin":"6WMhCofluFBnOKq6GKlnz"},{"uuid":"EkVX5T7c_MkWr0ZwtiNNr","type":"control","x":270,"y":374.1666666666667,"origin":"8IBAj0gzMz8amw5OtoHV4"},{"uuid":"8IBAj0gzMz8amw5OtoHV4","type":"anchor","x":270,"y":382.5,"origin":null},{"uuid":"DvSAvUWGJfeqocmjTviPq","type":"control","x":270,"y":382.5,"origin":"8IBAj0gzMz8amw5OtoHV4"},{"uuid":"a7YZArgzqoR-mhTNr2OYr","type":"control","x":250,"y":382.5,"origin":"MolHUfUPyuKncZkXwdLNn"},{"uuid":"MolHUfUPyuKncZkXwdLNn","type":"anchor","x":250,"y":382.5,"origin":null},{"uuid":"tsIH11OYkpqW-m4UPiN9j","type":"control","x":250,"y":382.5,"origin":"MolHUfUPyuKncZkXwdLNn"},{"uuid":"2Sbl_qCruFKN5p3ZNubE-","type":"control","x":250,"y":320,"origin":"0G-V6MdhVml5TMgG8QJK8"},{"uuid":"0G-V6MdhVml5TMgG8QJK8","type":"anchor","x":250,"y":320,"origin":null},{"uuid":"NUiVSr3tMGS18v6Ip2lh4","type":"control","x":250,"y":320,"origin":"0G-V6MdhVml5TMgG8QJK8"},{"uuid":"7t3VHMnTQXz5A55YVi_Ez","type":"control","x":250,"y":307.5,"origin":"32M98IeCZZwTa_JMTGGWe"},{"uuid":"32M98IeCZZwTa_JMTGGWe","type":"anchor","x":250,"y":307.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":492.5},"end":{"x":270,"y":492.5},"control1":{"x":250,"y":492.5},"control2":{"x":270,"y":492.5},"fill":false},{"type":2,"start":{"x":270,"y":492.5},"end":{"x":290,"y":480},"control1":{"x":270,"y":484.16666666666674},"control2":{"x":276.6666666666667,"y":480},"fill":false},{"type":2,"start":{"x":290,"y":480},"end":{"x":704.2893218813451,"y":480},"control1":{"x":290,"y":480},"control2":{"x":704.2893218813451,"y":480},"fill":false},{"type":2,"start":{"x":704.2893218813451,"y":480},"end":{"x":753.7867965644035,"y":494.14213562373095},"control1":{"x":727.8595479208967,"y":480},"control2":{"x":744.3587061485829,"y":484.7140452079103},"fill":false},{"type":2,"start":{"x":753.7867965644035,"y":494.14213562373095},"end":{"x":789.142135623731,"y":458.78679656440363},"control1":{"x":753.7867965644035,"y":494.14213562373095},"control2":{"x":789.142135623731,"y":458.78679656440363},"fill":false},{"type":2,"start":{"x":789.142135623731,"y":458.78679656440363},"end":{"x":775,"y":409.28932188134524},"control1":{"x":779.7140452079103,"y":449.358706148583},"control2":{"x":775,"y":432.85954792089683},"fill":false},{"type":2,"start":{"x":775,"y":409.28932188134524},"end":{"x":775,"y":155},"control1":{"x":775,"y":409.28932188134524},"control2":{"x":775,"y":155},"fill":false},{"type":2,"start":{"x":775,"y":155},"end":{"x":725,"y":155},"control1":{"x":775,"y":155},"control2":{"x":725,"y":155},"fill":false},{"type":2,"start":{"x":725,"y":155},"end":{"x":725,"y":430},"control1":{"x":725,"y":155},"control2":{"x":725,"y":430},"fill":false},{"type":2,"start":{"x":725,"y":430},"end":{"x":290,"y":430},"control1":{"x":725,"y":430},"control2":{"x":290,"y":430},"fill":false},{"type":2,"start":{"x":290,"y":430},"end":{"x":270,"y":417.5},"control1":{"x":276.6666666666667,"y":430},"control2":{"x":270,"y":425.83333333333326},"fill":false},{"type":2,"start":{"x":270,"y":417.5},"end":{"x":250,"y":417.5},"control1":{"x":270,"y":417.5},"control2":{"x":250,"y":417.5},"fill":false},{"type":2,"start":{"x":250,"y":417.5},"end":{"x":250,"y":480},"control1":{"x":250,"y":417.5},"control2":{"x":250,"y":480},"fill":false},{"type":2,"start":{"x":250,"y":480},"end":{"x":250,"y":492.5},"control1":{"x":250,"y":480},"control2":{"x":250,"y":492.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":30.75},"end":{"x":27,"y":30.75},"control1":{"x":25,"y":30.75},"control2":{"x":27,"y":30.75},"fill":false},{"type":2,"start":{"x":27,"y":30.75},"end":{"x":29,"y":32},"control1":{"x":27,"y":31.583333333333332},"control2":{"x":27.66666666666667,"y":32},"fill":false},{"type":2,"start":{"x":29,"y":32},"end":{"x":70.42893218813451,"y":32},"control1":{"x":29,"y":32},"control2":{"x":70.42893218813451,"y":32},"fill":false},{"type":2,"start":{"x":70.42893218813451,"y":32},"end":{"x":75.37867965644035,"y":30.585786437626908},"control1":{"x":72.78595479208967,"y":32},"control2":{"x":74.43587061485829,"y":31.52859547920897},"fill":false},{"type":2,"start":{"x":75.37867965644035,"y":30.585786437626908},"end":{"x":78.9142135623731,"y":34.121320343559645},"control1":{"x":75.37867965644035,"y":30.585786437626908},"control2":{"x":78.9142135623731,"y":34.121320343559645},"fill":false},{"type":2,"start":{"x":78.9142135623731,"y":34.121320343559645},"end":{"x":77.5,"y":39.071067811865476},"control1":{"x":77.97140452079104,"y":35.064129385141705},"control2":{"x":77.5,"y":36.71404520791032},"fill":false},{"type":2,"start":{"x":77.5,"y":39.071067811865476},"end":{"x":77.5,"y":64.5},"control1":{"x":77.5,"y":39.071067811865476},"control2":{"x":77.5,"y":64.5},"fill":false},{"type":2,"start":{"x":77.5,"y":64.5},"end":{"x":72.5,"y":64.5},"control1":{"x":77.5,"y":64.5},"control2":{"x":72.5,"y":64.5},"fill":false},{"type":2,"start":{"x":72.5,"y":64.5},"end":{"x":72.5,"y":37},"control1":{"x":72.5,"y":64.5},"control2":{"x":72.5,"y":37},"fill":false},{"type":2,"start":{"x":72.5,"y":37},"end":{"x":29,"y":37},"control1":{"x":72.5,"y":37},"control2":{"x":29,"y":37},"fill":false},{"type":2,"start":{"x":29,"y":37},"end":{"x":27,"y":38.25},"control1":{"x":27.66666666666667,"y":37},"control2":{"x":27,"y":37.41666666666667},"fill":false},{"type":2,"start":{"x":27,"y":38.25},"end":{"x":25,"y":38.25},"control1":{"x":27,"y":38.25},"control2":{"x":25,"y":38.25},"fill":false},{"type":2,"start":{"x":25,"y":38.25},"end":{"x":25,"y":32},"control1":{"x":25,"y":38.25},"control2":{"x":25,"y":32},"fill":false},{"type":2,"start":{"x":25,"y":32},"end":{"x":25,"y":30.75},"control1":{"x":25,"y":32},"control2":{"x":25,"y":30.75},"fill":false}]}]}},{"uuid":"vUHKTp3BOCdx_vTwXPuim","type":"system","name":"二横折","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"7r8OgF-ahTgJ01TJK0o2t","name":"横1-长度","type":0,"value":300,"min":0,"max":1000},{"uuid":"h3YiJJju35dEL5UivuEkL","name":"折1-水平延伸","type":0,"value":50,"min":0,"max":1000},{"uuid":"sKgVr8trEAQEvQihttDdj","name":"折1-竖直延伸","type":0,"value":200,"min":0,"max":1000},{"uuid":"5_9LmWCBP1MvaT5MGU50i","name":"横2-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"V0IX6eR-wxfWXdAPh5Pxo","name":"折2-水平延伸","type":0,"value":50,"min":0,"max":1000},{"uuid":"rUDLv5h3CQCRN-s-AGYeR","name":"折2-竖直延伸","type":0,"value":200,"min":0,"max":1000},{"uuid":"rgBj8n04JvSKv2up-Qz7V","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"mTcQYurt6cxe6wX8X60zV","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"XHzs696ZMs7gLO4xaaMTP","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"KQ0iU5kP7BeNAPsvNigrX","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"1_0owCPF6Vl9jd1T5Qf0y","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"zuiVrvVKEZGO36PfemPlI","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"7mlX-_cjteQKsq_n3ZLWb","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"WCKaWjk4P7L6AXhTeq_pZ","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_vUHKTp3BOCdx_vTwXPuim (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 295\nconst params = {\n  heng1_length: glyph.getParam('横1-长度'),\n  zhe1_horizonalSpan: glyph.getParam('折1-水平延伸'),\n  zhe1_verticalSpan: glyph.getParam('折1-竖直延伸'),\n  heng2_length: glyph.getParam('横2-长度'),\n  zhe2_horizonalSpan: glyph.getParam('折2-水平延伸'),\n  zhe2_verticalSpan: glyph.getParam('折2-竖直延伸'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng1_end': {\n      jointsMap['heng1_end'] = {\n        x: glyph.tempData['heng1_end'].x + deltaX,\n        y: glyph.tempData['heng1_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['heng2_start'] = {\n        x: glyph.tempData['heng2_start'].x + deltaX,\n        y: glyph.tempData['heng2_start'].y,\n      }\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      break\n    }\n    case 'zhe1_start': {\n      jointsMap['heng1_end'] = {\n        x: glyph.tempData['heng1_end'].x + deltaX,\n        y: glyph.tempData['heng1_end'].y,\n      }\n      jointsMap['zhe1_start'] = {\n        x: glyph.tempData['zhe1_start'].x + deltaX,\n        y: glyph.tempData['zhe1_start'].y,\n      }\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y,\n      }\n      jointsMap['heng2_start'] = {\n        x: glyph.tempData['heng2_start'].x + deltaX,\n        y: glyph.tempData['heng2_start'].y,\n      }\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      break\n    }\n    case 'zhe1_end': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['heng2_start'] = {\n        x: glyph.tempData['heng2_start'].x + deltaX,\n        y: glyph.tempData['heng2_start'].y + deltaY,\n      }\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      break\n    }\n    case 'heng2_start': {\n      jointsMap['zhe1_end'] = {\n        x: glyph.tempData['zhe1_end'].x + deltaX,\n        y: glyph.tempData['zhe1_end'].y + deltaY,\n      }\n      jointsMap['heng2_start'] = {\n        x: glyph.tempData['heng2_start'].x + deltaX,\n        y: glyph.tempData['heng2_start'].y + deltaY,\n      }\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y + deltaY,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y + deltaY,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      break\n    }\n    case 'heng2_end': {\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      break\n    }\n    case 'zhe2_start': {\n      jointsMap['heng2_end'] = {\n        x: glyph.tempData['heng2_end'].x + deltaX,\n        y: glyph.tempData['heng2_end'].y,\n      }\n      jointsMap['zhe2_start'] = {\n        x: glyph.tempData['zhe2_start'].x + deltaX,\n        y: glyph.tempData['zhe2_start'].y,\n      }\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y,\n      }\n      break\n    }\n    case 'zhe2_end': {\n      jointsMap['zhe2_end'] = {\n        x: glyph.tempData['zhe2_end'].x + deltaX,\n        y: glyph.tempData['zhe2_end'].y + deltaY,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横1-长度', _params.heng1_length)\n  glyph.setParam('折1-水平延伸', _params.zhe1_horizonalSpan)\n  glyph.setParam('折1-竖直延伸', _params.zhe1_verticalSpan)\n  glyph.setParam('横2-长度', _params.heng2_length)\n  glyph.setParam('折2-水平延伸', _params.zhe2_horizonalSpan)\n  glyph.setParam('折2-竖直延伸', _params.zhe2_verticalSpan)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng1_start, heng1_end, zhe1_start, zhe1_end, heng2_start, heng2_end, zhe2_start, zhe2_end, gou_start, gou_end } = jointsMap\n  const heng1_length_range = glyph.getParamRange('横1-长度')\n  const zhe1_horizonal_span_range = glyph.getParamRange('折1-水平延伸')\n  const zhe1_vertical_span_range = glyph.getParamRange('折1-竖直延伸')\n  const heng2_length_range = glyph.getParamRange('横2-长度')\n  const zhe2_horizonal_span_range = glyph.getParamRange('折2-水平延伸')\n  const zhe2_vertical_span_range = glyph.getParamRange('折2-竖直延伸')\n  const heng1_length = range(heng1_end.x - heng1_start.x, heng1_length_range)\n  const zhe1_horizonalSpan = range(zhe1_start.x - zhe1_end.x, zhe1_horizonal_span_range)\n  const zhe1_verticalSpan = range(zhe1_end.y - zhe1_start.y, zhe1_vertical_span_range)\n  const heng2_length = range(heng2_end.x - heng2_start.x, heng2_length_range)\n  const zhe2_horizonalSpan = range(zhe2_start.x - zhe2_end.x, zhe2_horizonal_span_range)\n  const zhe2_verticalSpan = range(zhe2_end.y - zhe2_start.y, zhe2_vertical_span_range)\n  return {\n    heng1_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    heng2_length,\n    zhe2_horizonalSpan,\n    zhe2_verticalSpan,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng1_length,\n    zhe1_horizonalSpan,\n    zhe1_verticalSpan,\n    heng2_length,\n    zhe2_horizonalSpan,\n    zhe2_verticalSpan,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横1\n  let heng1_start, heng1_end\n  const heng1_start_ref = new FP.Joint(\n    'heng1_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng1_end_ref = new FP.Joint(\n    'heng1_end_ref',\n    {\n      x: heng1_start_ref.x + heng1_length,\n      y: heng1_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng1_start = new FP.Joint(\n      'heng1_start',\n      {\n        x: heng1_start_ref.x,\n        y: heng1_start_ref.y + weight / 2,\n      },\n    )\n    heng1_end = new FP.Joint(\n      'heng1_end',\n      {\n        x: heng1_end_ref.x,\n        y: heng1_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng1_start = new FP.Joint(\n      'heng1_start',\n      {\n        x: heng1_start_ref.x,\n        y: heng1_start_ref.y - weight / 2,\n      },\n    )\n    heng1_end = new FP.Joint(\n      'heng1_end',\n      {\n        x: heng1_end_ref.x,\n        y: heng1_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng1_start = new FP.Joint(\n      'heng1_start',\n      {\n        x: heng1_start_ref.x,\n        y: heng1_start_ref.y,\n      },\n    )\n    heng1_end = new FP.Joint(\n      'heng1_end',\n      {\n        x: heng1_end_ref.x,\n        y: heng1_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng1_start_ref)\n  glyph.addJoint(heng1_end_ref)\n  glyph.addRefLine(refline(heng1_start_ref, heng1_end_ref, 'ref'))\n\n  // 折1\n  const zhe1_start = new FP.Joint(\n    'zhe1_start',\n    {\n      x: heng1_start.x + heng1_length,\n      y: heng1_start.y,\n    },\n  )\n  const zhe1_end = new FP.Joint(\n    'zhe1_end',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n\n  // 横2\n  const heng2_start = new FP.Joint(\n    'heng2_start',\n    {\n      x: zhe1_start.x - zhe1_horizonalSpan,\n      y: zhe1_start.y + zhe1_verticalSpan,\n    },\n  )\n  const heng2_end = new FP.Joint(\n    'heng2_end',\n    {\n      x: heng2_start.x + heng2_length,\n      y: heng2_start.y,\n    },\n  )\n\n  // 折2\n  const zhe2_start = new FP.Joint(\n    'zhe2_start',\n    {\n      x: heng2_start.x + heng2_length,\n      y: heng2_start.y,\n    },\n  )\n  const zhe2_end = new FP.Joint(\n    'zhe2_end',\n    {\n      x: zhe2_start.x - zhe2_horizonalSpan,\n      y: zhe2_start.y + zhe2_verticalSpan,\n    },\n  )\n\n  glyph.addJoint(heng1_start)\n  glyph.addJoint(heng1_end)\n  glyph.addJoint(zhe1_start)\n  glyph.addJoint(zhe1_end)\n  glyph.addJoint(heng2_start)\n  glyph.addJoint(heng2_end)\n  glyph.addJoint(zhe2_start)\n  glyph.addJoint(zhe2_end)\n\n  const skeleton = {\n    heng1_start,\n    heng1_end,\n    zhe1_start,\n    zhe1_end,\n    heng2_start,\n    heng2_end,\n    zhe2_start,\n    zhe2_end,\n  }\n\n  glyph.addRefLine(refline(heng1_start, heng1_end))\n  glyph.addRefLine(refline(zhe1_start, zhe1_end))\n  glyph.addRefLine(refline(heng2_start, heng2_end))\n  glyph.addRefLine(refline(zhe2_start, zhe2_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton, global_params) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng1_start,\n    heng1_end,\n    zhe1_start,\n    zhe1_end,\n    heng2_start,\n    heng2_end,\n    zhe2_start,\n    zhe2_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng1_start, out_heng1_end, in_heng1_start, in_heng1_end } = FP.getLineContours('heng1', { heng1_start, heng1_end }, weight)\n  const { out_zhe1_start, out_zhe1_end, in_zhe1_start, in_zhe1_end } = FP.getLineContours('zhe1', { zhe1_start, zhe1_end }, weight)\n  const { out_heng2_start, out_heng2_end, in_heng2_start, in_heng2_end } = FP.getLineContours('heng2', { heng2_start, heng2_end }, weight)\n  const { out_zhe2_start, out_zhe2_end, in_zhe2_start, in_zhe2_end } = FP.getLineContours('zhe2', { zhe2_start, zhe2_end }, weight)\n  const { corner: in_corner_heng1_zhe1 } = FP.getIntersection(\n    { type: 'line', start: in_heng1_start, end: in_heng1_end },\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n  )\n  const { corner: out_corner_heng1_zhe1 } = FP.getIntersection(\n    { type: 'line', start: out_heng1_start, end: out_heng1_end },\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n  )\n  const { corner: in_corner_zhe1_heng2 } = FP.getIntersection(\n    { type: 'line', start: in_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_heng2_start, end: in_heng2_end },\n  )\n  const { corner: out_corner_zhe1_heng2 } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: out_zhe1_end },\n    { type: 'line', start: out_heng2_start, end: out_heng2_end },\n  )\n  const { corner: in_corner_heng2_zhe2 } = FP.getIntersection(\n    { type: 'line', start: in_heng2_start, end: in_heng2_end },\n    { type: 'line', start: in_zhe2_start, end: in_zhe2_end },\n  )\n  const { corner: out_corner_heng2_zhe2 } = FP.getIntersection(\n    { type: 'line', start: out_heng2_start, end: out_heng2_end },\n    { type: 'line', start: out_zhe2_start, end: out_zhe2_end },\n  )\n  const { corner: out_corner_heng1_zhe1_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe1_start, end: in_zhe1_end },\n    { type: 'line', start: in_heng1_start, end: in_heng1_end }\n  )\n  const out_corner_heng1_zhe1_up = {\n    x: out_corner_heng1_zhe1_down.x,\n    y: out_corner_heng1_zhe1_down.y - weight,\n  }\n  const { corner: out_corner_heng2_zhe2_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe2_start, end: in_zhe2_end },\n    { type: 'line', start: in_heng2_start, end: in_heng2_end }\n  )\n  const out_corner_heng2_zhe2_up = {\n    x: out_corner_heng2_zhe2_down.x,\n    y: out_corner_heng2_zhe2_down.y - weight,\n  }\n\n  // 计算横1折1拐角处内外圆角相关的点与数据\n  let in_radius_heng1_zhe1 = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng1_zhe1 = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横1或折1长度，取横1或折1的最小长度\n  const in_radius_min_length_heng1_zhe1 = Math.min(\n    getDistance(in_corner_heng1_zhe1, in_heng1_start),\n    getDistance(in_corner_heng1_zhe1, in_zhe1_end),\n  )\n  const out_radius_min_length_heng1_zhe1 = Math.min(\n    getDistance(out_zhe1_end, out_heng1_start),\n    getDistance(out_zhe1_start, out_zhe1_end),\n  )\n  if (in_radius_heng1_zhe1 >= in_radius_min_length_heng1_zhe1) {\n    in_radius_heng1_zhe1 = in_radius_min_length_heng1_zhe1\n  }\n  if (out_radius_heng1_zhe1 >= out_radius_min_length_heng1_zhe1) {\n    out_radius_heng1_zhe1 = out_radius_min_length_heng1_zhe1\n  }\n  const in_radius_start_heng1_zhe1 = {\n    x: in_corner_heng1_zhe1.x - in_radius_heng1_zhe1,\n    y: in_corner_heng1_zhe1.y,\n  }\n  const in_radius_end_heng1_zhe1 = getRadiusPoint({\n    start: in_corner_heng1_zhe1,\n    end: in_zhe1_end,\n    radius: in_radius_heng1_zhe1,\n  })\n  const out_radius_start_heng1_zhe1 = {\n    x: out_corner_heng1_zhe1.x - out_radius_heng1_zhe1,\n    y: out_corner_heng1_zhe1.y,\n  }\n  const out_radius_end_heng1_zhe1 = getRadiusPoint({\n    start: out_corner_heng1_zhe1,\n    end: out_zhe1_end,\n    radius: out_radius_heng1_zhe1,\n  })\n\n  // 计算横2折2拐角处内外圆角相关的点与数据\n  let in_radius_heng2_zhe2 = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng2_zhe2 = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横1或折1长度，取横1或折1的最小长度\n  const in_radius_min_length_heng2_zhe2 = Math.min(\n    getDistance(in_corner_heng2_zhe2, in_heng2_start),\n    getDistance(in_corner_heng2_zhe2, in_zhe2_end),\n  )\n  const out_radius_min_length_heng2_zhe2 = Math.min(\n    getDistance(out_zhe2_end, out_heng2_start),\n    getDistance(out_zhe2_start, out_zhe2_end),\n  )\n  if (in_radius_heng2_zhe2 >= in_radius_min_length_heng2_zhe2) {\n    in_radius_heng2_zhe2 = in_radius_min_length_heng2_zhe2\n  }\n  if (out_radius_heng2_zhe2 >= out_radius_min_length_heng2_zhe2) {\n    out_radius_heng2_zhe2 = out_radius_min_length_heng2_zhe2\n  }\n  const in_radius_start_heng2_zhe2 = {\n    x: in_corner_heng2_zhe2.x - in_radius_heng2_zhe2,\n    y: in_corner_heng2_zhe2.y,\n  }\n  const in_radius_end_heng2_zhe2 = getRadiusPoint({\n    start: in_corner_heng2_zhe2,\n    end: in_zhe2_end,\n    radius: in_radius_heng2_zhe2,\n  })\n  const out_radius_start_heng2_zhe2 = {\n    x: out_corner_heng2_zhe2.x - out_radius_heng2_zhe2,\n    y: out_corner_heng2_zhe2.y,\n  }\n  const out_radius_end_heng2_zhe2 = getRadiusPoint({\n    start: out_corner_heng2_zhe2,\n    end: out_zhe2_end,\n    radius: out_radius_heng2_zhe2,\n  })\n\n  let turn_data_heng1_zhe1 = {}\n  let turn_data_heng2_zhe2\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    {\n      const turn_length = 20 * turn_style_value\n      const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng1_start, out_corner_heng1_zhe1, out_zhe1_end)\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_heng1_zhe1.x - corner_radius,\n        y: out_corner_heng1_zhe1.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2 = getRadiusPoint({\n        start: out_corner_heng1_zhe1,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_start_2 = getRadiusPoint({\n        start: turn_control_2,\n        end: out_zhe1_end,\n        radius: corner_radius,\n      })\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      turn_data_heng1_zhe1 = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n    {\n      const turn_length = 20 * turn_style_value\n      const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng2_start, out_corner_heng2_zhe2, out_zhe2_end)\n      const inner_corner_length = weight\n      const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n      const turn_control_1 = {\n        x: out_corner_heng2_zhe2.x - corner_radius,\n        y: out_corner_heng2_zhe2.y,\n      }\n      const turn_start_1 = {\n        x: turn_control_1.x - corner_radius,\n        y: turn_control_1.y,\n      }\n      const turn_end_1 = {\n        x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n      }\n      const turn_control_2 = getRadiusPoint({\n        start: out_corner_heng2_zhe2,\n        end: out_zhe2_end,\n        radius: corner_radius,\n      })\n      const turn_start_2 = getRadiusPoint({\n        start: turn_control_2,\n        end: out_zhe2_end,\n        radius: corner_radius,\n      })\n      const turn_end_2 = {\n        x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n        y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n      }\n      turn_data_heng2_zhe2 = {\n        turn_start_1,\n        turn_control_1,\n        turn_end_1,\n        turn_start_2,\n        turn_control_2,\n        turn_end_2,\n      }\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng1_start.x, out_heng1_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng1_start.x, out_heng1_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng1_start.x + start_style.start_style_decorator_width, out_heng1_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng1_start.x + start_style.start_style_decorator_width, out_heng1_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng1_start.x, out_heng1_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng1_start.x + start_style.start_style_decorator_width, out_heng1_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng1_start.x + start_style.start_style_decorator_width,\n      out_heng1_start.y,\n      out_heng1_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng1_start.y,\n    )\n  }\n  if (bending_degree > 1 && turn_style_type === 0) {\n    // 绘制外侧横1折1圆角\n    pen.lineTo(out_radius_start_heng1_zhe1.x, out_radius_start_heng1_zhe1.y)\n    pen.quadraticBezierTo(out_corner_heng1_zhe1.x, out_corner_heng1_zhe1.y, out_radius_end_heng1_zhe1.x, out_radius_end_heng1_zhe1.y)\n    // 绘制外侧折1\n    pen.lineTo(out_corner_zhe1_heng2.x, out_corner_zhe1_heng2.y)\n    // 绘制外侧横2折2圆角\n    pen.lineTo(out_radius_start_heng2_zhe2.x, out_radius_start_heng2_zhe2.y)\n    pen.quadraticBezierTo(out_corner_heng2_zhe2.x, out_corner_heng2_zhe2.y, out_radius_end_heng2_zhe2.x, out_radius_end_heng2_zhe2.y)\n    // 绘制外侧折2\n    pen.lineTo(out_zhe2_end.x, out_zhe2_end.y)\n  } else if (turn_style_type === 0) {\n    // 默认转角样式\n    // 绘制外侧横1折1转角\n    pen.lineTo(out_corner_heng1_zhe1_up.x, out_corner_heng1_zhe1_up.y)\n    pen.lineTo(out_corner_heng1_zhe1_down.x, out_corner_heng1_zhe1_down.y)\n    // 绘制外侧折1\n    pen.lineTo(out_corner_zhe1_heng2.x, out_corner_zhe1_heng2.y)\n    // 绘制外侧横2折2转角\n    pen.lineTo(out_corner_heng2_zhe2_up.x, out_corner_heng2_zhe2_up.y)\n    pen.lineTo(out_corner_heng2_zhe2_down.x, out_corner_heng2_zhe2_down.y)\n    // 绘制外侧折2\n    pen.lineTo(out_zhe2_end.x, out_zhe2_end.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    // 绘制外侧横1折1转角\n    pen.lineTo(turn_data_heng1_zhe1.turn_start_1.x, turn_data_heng1_zhe1.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_heng1_zhe1.turn_control_1.x, turn_data_heng1_zhe1.turn_control_1.y, turn_data_heng1_zhe1.turn_end_1.x, turn_data_heng1_zhe1.turn_end_1.y)\n    pen.lineTo(turn_data_heng1_zhe1.turn_end_2.x, turn_data_heng1_zhe1.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_heng1_zhe1.turn_control_2.x, turn_data_heng1_zhe1.turn_control_2.y, turn_data_heng1_zhe1.turn_start_2.x, turn_data_heng1_zhe1.turn_start_2.y)\n    // 绘制外侧折1\n    pen.lineTo(out_corner_zhe1_heng2.x, out_corner_zhe1_heng2.y)\n    // 绘制外侧横2折2转角\n    pen.lineTo(turn_data_heng2_zhe2.turn_start_1.x, turn_data_heng2_zhe2.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data_heng2_zhe2.turn_control_1.x, turn_data_heng2_zhe2.turn_control_1.y, turn_data_heng2_zhe2.turn_end_1.x, turn_data_heng2_zhe2.turn_end_1.y)\n    pen.lineTo(turn_data_heng2_zhe2.turn_end_2.x, turn_data_heng2_zhe2.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data_heng2_zhe2.turn_control_2.x, turn_data_heng2_zhe2.turn_control_2.y, turn_data_heng2_zhe2.turn_start_2.x, turn_data_heng2_zhe2.turn_start_2.y)\n    // 绘制外侧折2\n    pen.lineTo(out_zhe2_end.x, out_zhe2_end.y)\n  }\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_zhe2_end.x, in_zhe2_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧横2折2圆角\n  pen.lineTo(in_radius_end_heng2_zhe2.x, in_radius_end_heng2_zhe2.y)\n  pen.quadraticBezierTo(in_corner_heng2_zhe2.x, in_corner_heng2_zhe2.y, in_radius_start_heng2_zhe2.x, in_radius_start_heng2_zhe2.y)\n  // 绘制内侧折2\n  pen.lineTo(in_corner_zhe1_heng2.x, in_corner_zhe1_heng2.y)\n  // 绘制内侧横1折1圆角\n  pen.lineTo(in_radius_end_heng1_zhe1.x, in_radius_end_heng1_zhe1.y)\n  pen.quadraticBezierTo(in_corner_heng1_zhe1.x, in_corner_heng1_zhe1.y, in_radius_start_heng1_zhe1.x, in_radius_start_heng1_zhe1.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng1_start.x, in_heng1_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng1_start.x + start_style.start_style_decorator_width, in_heng1_start.y)\n    pen.lineTo(in_heng1_start.x + start_style.start_style_decorator_width, in_heng1_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng1_start.x, in_heng1_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng1_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng1_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng1_start.x + start_style.start_style_decorator_width,\n      in_heng1_start.y,\n      in_heng1_start.x + start_style.start_style_decorator_width,\n      in_heng1_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng1_start.x, in_heng1_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng1_start.x, out_heng1_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng1_start.x, out_heng1_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng1_start.x, out_heng1_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":295,"uuid":"CdwQyqK_t4wokXVeendZq","name":"heng1_start_ref"},{"_x":550,"_y":295,"uuid":"zLCyXJwMtWgTmMcmLTVCK","name":"heng1_end_ref"},{"_x":250,"_y":295,"uuid":"GirGFnNqCQvanPDnTgOAP","name":"heng1_start"},{"_x":550,"_y":295,"uuid":"I9BuKjnZeKyFQOknLHrBK","name":"heng1_end"},{"_x":550,"_y":295,"uuid":"AGraC-EMsuoDIzmQnDxvz","name":"zhe1_start"},{"_x":500,"_y":495,"uuid":"AfQKa5k3Tf3JMrKtQowKI","name":"zhe1_end"},{"_x":500,"_y":495,"uuid":"U-8SGbmNCN7CfX3b90jYa","name":"heng2_start"},{"_x":700,"_y":495,"uuid":"7hcc6vZ-1YNuIUnLJXoYd","name":"heng2_end"},{"_x":700,"_y":495,"uuid":"N1ZMKPZ4o5WYmS5P2Fg2S","name":"zhe2_start"},{"_x":650,"_y":695,"uuid":"VAKotnhFdcLMUYfyw46Yv","name":"zhe2_end"}],"_reflines":[{"name":"heng1_start_ref-heng1_end_ref","start":"heng1_start_ref","end":"heng1_end_ref","type":"ref"},{"name":"heng1_start-heng1_end","start":"heng1_start","end":"heng1_end"},{"name":"zhe1_start-zhe1_end","start":"zhe1_start","end":"zhe1_end"},{"name":"heng2_start-heng2_end","start":"heng2_start","end":"heng2_end"},{"name":"zhe2_start-zhe2_end","start":"zhe2_start","end":"zhe2_end"}],"_components":[{"points":[{"uuid":"opXtCte0gzfIH69v4m2Lq","type":"anchor","x":250,"y":257.5,"origin":null},{"uuid":"Iz1YW-3_bft4QZYzs_-jK","type":"control","x":250,"y":257.5,"origin":"opXtCte0gzfIH69v4m2Lq"},{"uuid":"aw39VpC-3rZI-uEf6R-19","type":"control","x":270,"y":257.5,"origin":"JGjE4zluqpnc_CHEls7Y8"},{"uuid":"JGjE4zluqpnc_CHEls7Y8","type":"anchor","x":270,"y":257.5,"origin":null},{"uuid":"B5Fv03lmkMSAe2WDperu3","type":"control","x":270,"y":265.8333333333333,"origin":"JGjE4zluqpnc_CHEls7Y8"},{"uuid":"rJ2P7S0m5wqoB8kHCeppe","type":"control","x":276.6666666666667,"y":270,"origin":"N8O5_3ew0LR83-Don-RAQ"},{"uuid":"N8O5_3ew0LR83-Don-RAQ","type":"anchor","x":290,"y":270,"origin":null},{"uuid":"yLoyLr6RTuJbCzaa8lsv4","type":"control","x":290,"y":270,"origin":"N8O5_3ew0LR83-Don-RAQ"},{"uuid":"o6dp6GLeLY6AHr6Apzx9K","type":"control","x":500.773053269444,"y":270,"origin":"itwBGi-Nfykd75q1WuQl1"},{"uuid":"itwBGi-Nfykd75q1WuQl1","type":"anchor","x":500.773053269444,"y":270,"origin":null},{"uuid":"O1rY0UuPSljA-jQcj_AGE","type":"control","x":527.8551722329994,"y":270,"origin":"itwBGi-Nfykd75q1WuQl1"},{"uuid":"labE9eSs2x-v-Js9gFBAC","type":"control","x":546.6509346348846,"y":265.8972519373158,"origin":"uAeZO5n-mlzs4OVF1pphO"},{"uuid":"uAeZO5n-mlzs4OVF1pphO","type":"anchor","x":557.1603404750994,"y":257.6917558119473,"origin":null},{"uuid":"f1FlH-0GOKqt9EUoFf8Ss","type":"control","x":557.1603404750994,"y":257.6917558119473,"origin":"uAeZO5n-mlzs4OVF1pphO"},{"uuid":"aqxlEm_MYKvQi1iCk0GNI","type":"control","x":587.9309509452311,"y":297.1020277127528,"origin":"zV-UnTIxa4FHlGtNbG-EB"},{"uuid":"zV-UnTIxa4FHlGtNbG-EB","type":"anchor","x":587.9309509452311,"y":297.1020277127528,"origin":null},{"uuid":"8trv8ays5qhZRPTLcUXiY","type":"control","x":577.4215451050163,"y":305.30752383812126,"origin":"zV-UnTIxa4FHlGtNbG-EB"},{"uuid":"7Evqh3zQsPoEEGE3EnK-9","type":"control","x":568.8826528598418,"y":322.54702920107394,"origin":"75TN9unxFcaeipy51fXnr"},{"uuid":"75TN9unxFcaeipy51fXnr","type":"anchor","x":562.3142742097075,"y":348.82054380161094,"origin":null},{"uuid":"EILu7U_2BYOtWUJUxvK5B","type":"control","x":562.3142742097075,"y":348.82054380161094,"origin":"75TN9unxFcaeipy51fXnr"},{"uuid":"--cyFGcnPgd4CNWNB1-uh","type":"control","x":532.0194101601103,"y":470,"origin":"kQ0Y2J_NjLxkszD7Pfa5P"},{"uuid":"kQ0Y2J_NjLxkszD7Pfa5P","type":"anchor","x":532.0194101601103,"y":470,"origin":null},{"uuid":"4aKzC-kIvTGzKiir6umLT","type":"control","x":532.0194101601103,"y":470,"origin":"kQ0Y2J_NjLxkszD7Pfa5P"},{"uuid":"Z6kTjI_sHS4BEj26rG04X","type":"control","x":650.7730532694441,"y":470,"origin":"RypA928spubB_OPGsJJi5"},{"uuid":"RypA928spubB_OPGsJJi5","type":"anchor","x":650.7730532694441,"y":470,"origin":null},{"uuid":"-zzPxcKVyH7BphuwAP3Yk","type":"control","x":677.8551722329995,"y":470,"origin":"RypA928spubB_OPGsJJi5"},{"uuid":"0-q1cbIqiMB1I9zf-0v2T","type":"control","x":696.6509346348846,"y":465.8972519373158,"origin":"b_4RasT8u9DLEPfXy1_oG"},{"uuid":"b_4RasT8u9DLEPfXy1_oG","type":"anchor","x":707.1603404750994,"y":457.6917558119473,"origin":null},{"uuid":"kv-rZtIficMKtMRfsCAY1","type":"control","x":707.1603404750994,"y":457.6917558119473,"origin":"b_4RasT8u9DLEPfXy1_oG"},{"uuid":"DOoRcKmMstk4bVr42-PS9","type":"control","x":737.9309509452311,"y":497.1020277127528,"origin":"qNuzfcX6KFcjxRP6vUyxF"},{"uuid":"qNuzfcX6KFcjxRP6vUyxF","type":"anchor","x":737.9309509452311,"y":497.1020277127528,"origin":null},{"uuid":"IcHh2kc0tZIRht_0r4g-e","type":"control","x":727.4215451050163,"y":505.30752383812126,"origin":"qNuzfcX6KFcjxRP6vUyxF"},{"uuid":"6tJCfMb3QDfQU9QbIFwzP","type":"control","x":718.8826528598418,"y":522.547029201074,"origin":"PJ80wF74SEsYOg8xASFwX"},{"uuid":"PJ80wF74SEsYOg8xASFwX","type":"anchor","x":712.3142742097075,"y":548.8205438016109,"origin":null},{"uuid":"XkdxkEi3rvvVSjVoauEtn","type":"control","x":712.3142742097075,"y":548.8205438016109,"origin":"PJ80wF74SEsYOg8xASFwX"},{"uuid":"zhp40zTgp6vNUO1A8Z92Q","type":"control","x":674.2535625036332,"y":701.0633906259084,"origin":"Nt6JnXhzvx07sd-lHvVVF"},{"uuid":"Nt6JnXhzvx07sd-lHvVVF","type":"anchor","x":674.2535625036332,"y":701.0633906259084,"origin":null},{"uuid":"adnUziNvqe68l15tXEc8j","type":"control","x":674.2535625036332,"y":701.0633906259084,"origin":"Nt6JnXhzvx07sd-lHvVVF"},{"uuid":"QLPwocuMirL7MR2aAyUze","type":"control","x":625.7464374963668,"y":688.9366093740916,"origin":"CNCLPhYe6KgpnwNDjqjqP"},{"uuid":"CNCLPhYe6KgpnwNDjqjqP","type":"anchor","x":625.7464374963668,"y":688.9366093740916,"origin":null},{"uuid":"KaTV2dSeeSQNONDas4bzY","type":"control","x":625.7464374963668,"y":688.9366093740916,"origin":"CNCLPhYe6KgpnwNDjqjqP"},{"uuid":"MDEMDTKde6Y-ux3H1bBri","type":"control","x":667.9805898398897,"y":520,"origin":"t-MDaBHk5Dfw-9kEBY4Mk"},{"uuid":"t-MDaBHk5Dfw-9kEBY4Mk","type":"anchor","x":667.9805898398897,"y":520,"origin":null},{"uuid":"H4ZrZ_B5wEBtJLEtFD6En","type":"control","x":667.9805898398897,"y":520,"origin":"t-MDaBHk5Dfw-9kEBY4Mk"},{"uuid":"G96amXb79hdrlvo3gK-3p","type":"control","x":667.9805898398897,"y":520,"origin":"NtnTZS-ML0y1OyV_IYQ58"},{"uuid":"NtnTZS-ML0y1OyV_IYQ58","type":"anchor","x":667.9805898398897,"y":520,"origin":null},{"uuid":"LP4B3zJyQB_uPqevjnAnA","type":"control","x":667.9805898398897,"y":520,"origin":"NtnTZS-ML0y1OyV_IYQ58"},{"uuid":"DK8DY6MO36miTPRIkw6PV","type":"control","x":467.9805898398896,"y":520,"origin":"jIB7Sls4wQpYV4MtipN1h"},{"uuid":"jIB7Sls4wQpYV4MtipN1h","type":"anchor","x":467.9805898398896,"y":520,"origin":null},{"uuid":"AdoUhHxpwOIr0Gc25wxyH","type":"control","x":467.9805898398896,"y":520,"origin":"jIB7Sls4wQpYV4MtipN1h"},{"uuid":"QoK-NuU58Y3eETor3weAb","type":"control","x":517.9805898398897,"y":320,"origin":"OcuSSNbsLB7SpPkQEP2Hg"},{"uuid":"OcuSSNbsLB7SpPkQEP2Hg","type":"anchor","x":517.9805898398897,"y":320,"origin":null},{"uuid":"bJtPvdtnCjjyPBZOKj4bk","type":"control","x":517.9805898398897,"y":320,"origin":"OcuSSNbsLB7SpPkQEP2Hg"},{"uuid":"PHpqZNUDHiCY5cYMxdsnr","type":"control","x":517.9805898398897,"y":320,"origin":"VWe7T1pRu9HIcAknHWrqq"},{"uuid":"VWe7T1pRu9HIcAknHWrqq","type":"anchor","x":517.9805898398897,"y":320,"origin":null},{"uuid":"k43cEVMhT9pggEF4zDKtr","type":"control","x":517.9805898398897,"y":320,"origin":"VWe7T1pRu9HIcAknHWrqq"},{"uuid":"tsLz93UxAwyHZ4rM73Dwt","type":"control","x":290,"y":320,"origin":"2k8WnZ9nl3obUpcHOApyg"},{"uuid":"2k8WnZ9nl3obUpcHOApyg","type":"anchor","x":290,"y":320,"origin":null},{"uuid":"fKRc1CEiSe27XbEnnCGSt","type":"control","x":276.6666666666667,"y":320,"origin":"2k8WnZ9nl3obUpcHOApyg"},{"uuid":"eGFe_Vcl39qTym6nrTVVk","type":"control","x":270,"y":324.1666666666667,"origin":"ip0qpGsa2VYV4QviQ0pMJ"},{"uuid":"ip0qpGsa2VYV4QviQ0pMJ","type":"anchor","x":270,"y":332.5,"origin":null},{"uuid":"9C4iDa0-2KAEmB5C1dCMw","type":"control","x":270,"y":332.5,"origin":"ip0qpGsa2VYV4QviQ0pMJ"},{"uuid":"oWQOUT7HepHefntxD_VEl","type":"control","x":250,"y":332.5,"origin":"jyxHmysk_NRJ2bRSy0O49"},{"uuid":"jyxHmysk_NRJ2bRSy0O49","type":"anchor","x":250,"y":332.5,"origin":null},{"uuid":"IH5Wj6F4txW-NnsnNR7Aw","type":"control","x":250,"y":332.5,"origin":"jyxHmysk_NRJ2bRSy0O49"},{"uuid":"cltdTb6ISlMZaALkY5gUk","type":"control","x":250,"y":257.5,"origin":"0M6GmwH3lcucp1hGrkMv6"},{"uuid":"0M6GmwH3lcucp1hGrkMv6","type":"anchor","x":250,"y":257.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":250,"y":542.5},"end":{"x":270,"y":542.5},"control1":{"x":250,"y":542.5},"control2":{"x":270,"y":542.5},"fill":false},{"type":2,"start":{"x":270,"y":542.5},"end":{"x":290,"y":530},"control1":{"x":270,"y":534.1666666666667},"control2":{"x":276.6666666666667,"y":530},"fill":false},{"type":2,"start":{"x":290,"y":530},"end":{"x":500.773053269444,"y":530},"control1":{"x":290,"y":530},"control2":{"x":500.773053269444,"y":530},"fill":false},{"type":2,"start":{"x":500.773053269444,"y":530},"end":{"x":557.1603404750994,"y":542.3082441880526},"control1":{"x":527.8551722329994,"y":530},"control2":{"x":546.6509346348846,"y":534.1027480626842},"fill":false},{"type":2,"start":{"x":557.1603404750994,"y":542.3082441880526},"end":{"x":587.9309509452311,"y":502.8979722872472},"control1":{"x":557.1603404750994,"y":542.3082441880526},"control2":{"x":587.9309509452311,"y":502.8979722872472},"fill":false},{"type":2,"start":{"x":587.9309509452311,"y":502.8979722872472},"end":{"x":562.3142742097075,"y":451.17945619838906},"control1":{"x":577.4215451050163,"y":494.69247616187874},"control2":{"x":568.8826528598418,"y":477.4529707989261},"fill":false},{"type":2,"start":{"x":562.3142742097075,"y":451.17945619838906},"end":{"x":532.0194101601103,"y":330},"control1":{"x":562.3142742097075,"y":451.17945619838906},"control2":{"x":532.0194101601103,"y":330},"fill":false},{"type":2,"start":{"x":532.0194101601103,"y":330},"end":{"x":650.7730532694441,"y":330},"control1":{"x":532.0194101601103,"y":330},"control2":{"x":650.7730532694441,"y":330},"fill":false},{"type":2,"start":{"x":650.7730532694441,"y":330},"end":{"x":707.1603404750994,"y":342.30824418805264},"control1":{"x":677.8551722329995,"y":330},"control2":{"x":696.6509346348846,"y":334.1027480626842},"fill":false},{"type":2,"start":{"x":707.1603404750994,"y":342.30824418805264},"end":{"x":737.9309509452311,"y":302.8979722872473},"control1":{"x":707.1603404750994,"y":342.30824418805264},"control2":{"x":737.9309509452311,"y":302.8979722872473},"fill":false},{"type":2,"start":{"x":737.9309509452311,"y":302.8979722872473},"end":{"x":712.3142742097075,"y":251.17945619838906},"control1":{"x":727.4215451050163,"y":294.69247616187874},"control2":{"x":718.8826528598418,"y":277.452970798926},"fill":false},{"type":2,"start":{"x":712.3142742097075,"y":251.17945619838906},"end":{"x":674.2535625036332,"y":98.93660937409163},"control1":{"x":712.3142742097075,"y":251.17945619838906},"control2":{"x":674.2535625036332,"y":98.93660937409163},"fill":false},{"type":2,"start":{"x":674.2535625036332,"y":98.93660937409163},"end":{"x":625.7464374963668,"y":111.06339062590837},"control1":{"x":674.2535625036332,"y":98.93660937409163},"control2":{"x":625.7464374963668,"y":111.06339062590837},"fill":false},{"type":2,"start":{"x":625.7464374963668,"y":111.06339062590837},"end":{"x":667.9805898398897,"y":280},"control1":{"x":625.7464374963668,"y":111.06339062590837},"control2":{"x":667.9805898398897,"y":280},"fill":false},{"type":2,"start":{"x":667.9805898398897,"y":280},"end":{"x":667.9805898398897,"y":280},"control1":{"x":667.9805898398897,"y":280},"control2":{"x":667.9805898398897,"y":280},"fill":false},{"type":2,"start":{"x":667.9805898398897,"y":280},"end":{"x":467.9805898398896,"y":280},"control1":{"x":667.9805898398897,"y":280},"control2":{"x":467.9805898398896,"y":280},"fill":false},{"type":2,"start":{"x":467.9805898398896,"y":280},"end":{"x":517.9805898398897,"y":480},"control1":{"x":467.9805898398896,"y":280},"control2":{"x":517.9805898398897,"y":480},"fill":false},{"type":2,"start":{"x":517.9805898398897,"y":480},"end":{"x":517.9805898398897,"y":480},"control1":{"x":517.9805898398897,"y":480},"control2":{"x":517.9805898398897,"y":480},"fill":false},{"type":2,"start":{"x":517.9805898398897,"y":480},"end":{"x":290,"y":480},"control1":{"x":517.9805898398897,"y":480},"control2":{"x":290,"y":480},"fill":false},{"type":2,"start":{"x":290,"y":480},"end":{"x":270,"y":467.5},"control1":{"x":276.6666666666667,"y":480},"control2":{"x":270,"y":475.83333333333326},"fill":false},{"type":2,"start":{"x":270,"y":467.5},"end":{"x":250,"y":467.5},"control1":{"x":270,"y":467.5},"control2":{"x":250,"y":467.5},"fill":false},{"type":2,"start":{"x":250,"y":467.5},"end":{"x":250,"y":542.5},"control1":{"x":250,"y":467.5},"control2":{"x":250,"y":542.5},"fill":false}],"preview":[{"type":2,"start":{"x":25,"y":25.75},"end":{"x":27,"y":25.75},"control1":{"x":25,"y":25.75},"control2":{"x":27,"y":25.75},"fill":false},{"type":2,"start":{"x":27,"y":25.75},"end":{"x":29,"y":27},"control1":{"x":27,"y":26.583333333333332},"control2":{"x":27.66666666666667,"y":27},"fill":false},{"type":2,"start":{"x":29,"y":27},"end":{"x":50.077305326944405,"y":27},"control1":{"x":29,"y":27},"control2":{"x":50.077305326944405,"y":27},"fill":false},{"type":2,"start":{"x":50.077305326944405,"y":27},"end":{"x":55.716034047509936,"y":25.76917558119473},"control1":{"x":52.78551722329994,"y":27},"control2":{"x":54.66509346348846,"y":26.58972519373158},"fill":false},{"type":2,"start":{"x":55.716034047509936,"y":25.76917558119473},"end":{"x":58.79309509452311,"y":29.710202771275277},"control1":{"x":55.716034047509936,"y":25.76917558119473},"control2":{"x":58.79309509452311,"y":29.710202771275277},"fill":false},{"type":2,"start":{"x":58.79309509452311,"y":29.710202771275277},"end":{"x":56.23142742097075,"y":34.882054380161094},"control1":{"x":57.742154510501635,"y":30.53075238381213},"control2":{"x":56.888265285984176,"y":32.2547029201074},"fill":false},{"type":2,"start":{"x":56.23142742097075,"y":34.882054380161094},"end":{"x":53.201941016011034,"y":47},"control1":{"x":56.23142742097075,"y":34.882054380161094},"control2":{"x":53.201941016011034,"y":47},"fill":false},{"type":2,"start":{"x":53.201941016011034,"y":47},"end":{"x":65.07730532694441,"y":47},"control1":{"x":53.201941016011034,"y":47},"control2":{"x":65.07730532694441,"y":47},"fill":false},{"type":2,"start":{"x":65.07730532694441,"y":47},"end":{"x":70.71603404750994,"y":45.76917558119473},"control1":{"x":67.78551722329995,"y":47},"control2":{"x":69.66509346348846,"y":46.58972519373158},"fill":false},{"type":2,"start":{"x":70.71603404750994,"y":45.76917558119473},"end":{"x":73.79309509452311,"y":49.71020277127528},"control1":{"x":70.71603404750994,"y":45.76917558119473},"control2":{"x":73.79309509452311,"y":49.71020277127528},"fill":false},{"type":2,"start":{"x":73.79309509452311,"y":49.71020277127528},"end":{"x":71.23142742097075,"y":54.882054380161094},"control1":{"x":72.74215451050163,"y":50.53075238381213},"control2":{"x":71.88826528598418,"y":52.254702920107405},"fill":false},{"type":2,"start":{"x":71.23142742097075,"y":54.882054380161094},"end":{"x":67.42535625036332,"y":70.10633906259083},"control1":{"x":71.23142742097075,"y":54.882054380161094},"control2":{"x":67.42535625036332,"y":70.10633906259083},"fill":false},{"type":2,"start":{"x":67.42535625036332,"y":70.10633906259083},"end":{"x":62.57464374963668,"y":68.89366093740917},"control1":{"x":67.42535625036332,"y":70.10633906259083},"control2":{"x":62.57464374963668,"y":68.89366093740917},"fill":false},{"type":2,"start":{"x":62.57464374963668,"y":68.89366093740917},"end":{"x":66.79805898398898,"y":52},"control1":{"x":62.57464374963668,"y":68.89366093740917},"control2":{"x":66.79805898398898,"y":52},"fill":false},{"type":2,"start":{"x":66.79805898398898,"y":52},"end":{"x":66.79805898398898,"y":52},"control1":{"x":66.79805898398898,"y":52},"control2":{"x":66.79805898398898,"y":52},"fill":false},{"type":2,"start":{"x":66.79805898398898,"y":52},"end":{"x":46.798058983988966,"y":52},"control1":{"x":66.79805898398898,"y":52},"control2":{"x":46.798058983988966,"y":52},"fill":false},{"type":2,"start":{"x":46.798058983988966,"y":52},"end":{"x":51.79805898398897,"y":32},"control1":{"x":46.798058983988966,"y":52},"control2":{"x":51.79805898398897,"y":32},"fill":false},{"type":2,"start":{"x":51.79805898398897,"y":32},"end":{"x":51.79805898398897,"y":32},"control1":{"x":51.79805898398897,"y":32},"control2":{"x":51.79805898398897,"y":32},"fill":false},{"type":2,"start":{"x":51.79805898398897,"y":32},"end":{"x":29,"y":32},"control1":{"x":51.79805898398897,"y":32},"control2":{"x":29,"y":32},"fill":false},{"type":2,"start":{"x":29,"y":32},"end":{"x":27,"y":33.25},"control1":{"x":27.66666666666667,"y":32},"control2":{"x":27,"y":32.41666666666667},"fill":false},{"type":2,"start":{"x":27,"y":33.25},"end":{"x":25,"y":33.25},"control1":{"x":27,"y":33.25},"control2":{"x":25,"y":33.25},"fill":false},{"type":2,"start":{"x":25,"y":33.25},"end":{"x":25,"y":25.75},"control1":{"x":25,"y":33.25},"control2":{"x":25,"y":25.75},"fill":false}]}]}},{"uuid":"LX-5geTJNQuoK6EuZO_-K","type":"system","name":"竖折","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"5UC0ggJP9WjIvlzbgfnOL","name":"竖-水平延伸","type":0,"value":0,"min":0,"max":200},{"uuid":"GUjqfsdUvADhqiCwUbeJ5","name":"竖-竖直延伸","type":0,"value":500,"min":0,"max":1000},{"uuid":"beFEC0M_p2XvxeR9Kxpuk","name":"折-长度","type":0,"value":500,"min":0,"max":1000},{"uuid":"LuMwxipTKQEBjgCvvcOgQ","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"nGWjZBM-BK9OEaNqJauJl","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"YZSqfdctxe9l_Z3UUmbEa","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"ftVK3TqLFf0yUj98OhGtf","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"wl24Kw67pc3RFMk7DIOGg","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"5u--CRDegpBYF3k39-sRm","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"HhJZIhPc34WuS5CZNW8bR","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"jB3IkVUEALhgF2iQnX6g3","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_LX_5geTJNQuoK6EuZO__K (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 250\nconst y0 = 250\nconst params = {\n  shu_horizonalSpan: glyph.getParam('竖-水平延伸'),\n  shu_verticalSpan: glyph.getParam('竖-竖直延伸'),\n  zhe_length: glyph.getParam('折-长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x + deltaX,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y + deltaY,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x + deltaX,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y + deltaY,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-水平延伸', _params.shu_horizonalSpan)\n  glyph.setParam('竖-竖直延伸', _params.shu_verticalSpan)\n  glyph.setParam('折-长度', _params.zhe_length)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, zhe_start, zhe_end } = jointsMap\n  const shu_horizonal_span_range = glyph.getParamRange('竖-水平延伸')\n  const shu_vertical_span_range = glyph.getParamRange('竖-竖直延伸')\n  const zhe_length_range = glyph.getParamRange('折-长度')\n  const shu_horizonalSpan = range(shu_end.x - shu_start.x, shu_horizonal_span_range)\n  const shu_verticalSpan = range(shu_end.y - shu_start.y, shu_vertical_span_range)\n  const zhe_length = range(zhe_end.x - zhe_start.x, zhe_length_range)\n  return {\n    shu_horizonalSpan,\n    shu_verticalSpan,\n    zhe_length,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_horizonalSpan,\n    shu_verticalSpan,\n    zhe_length,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  const shu_start = new FP.Joint(\n    'shu_start',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end = new FP.Joint(\n    'shu_end',\n    {\n      x: shu_start.x + shu_horizonalSpan,\n      y: shu_start.y + shu_verticalSpan,\n    },\n  )\n\n  // 折\n  let zhe_start, zhe_end\n  const zhe_start_ref = new FP.Joint(\n    'zhe_start_ref',\n    {\n      x: shu_start.x + shu_horizonalSpan,\n      y: shu_start.y + shu_verticalSpan,\n    },\n  )\n  const zhe_end_ref = new FP.Joint(\n    'zhe_end_ref',\n    {\n      x: zhe_start_ref.x + zhe_length,\n      y: zhe_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x,\n        y: zhe_start_ref.y + weight / 2,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x,\n        y: zhe_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x,\n        y: zhe_start_ref.y - weight / 2,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x,\n        y: zhe_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    zhe_start = new FP.Joint(\n      'zhe_start',\n      {\n        x: zhe_start_ref.x,\n        y: zhe_start_ref.y,\n      },\n    )\n    zhe_end = new FP.Joint(\n      'zhe_end',\n      {\n        x: zhe_end_ref.x,\n        y: zhe_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(zhe_start_ref)\n  glyph.addJoint(zhe_end_ref)\n  glyph.addRefLine(refline(zhe_start_ref, zhe_end_ref, 'ref'))\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    zhe_start,\n    zhe_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    zhe_start,\n    zhe_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: in_corner_shu_zhe } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_shu_zhe } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n\n  // 计算竖折拐角处内外圆角相关的点与数据\n  let in_radius_shu_zhe = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_shu_zhe = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出竖或折长度，取竖或折的最小长度\n  const in_radius_min_length_shu_zhe = Math.min(\n    getDistance(in_corner_shu_zhe, in_shu_start),\n    getDistance(in_corner_shu_zhe, in_zhe_end),\n  )\n  const out_radius_min_length_shu_zhe = Math.min(\n    getDistance(out_zhe_end, out_shu_start),\n    getDistance(out_zhe_start, out_zhe_end),\n  )\n  if (in_radius_shu_zhe >= in_radius_min_length_shu_zhe) {\n    in_radius_shu_zhe = in_radius_min_length_shu_zhe\n  }\n  if (out_radius_shu_zhe >= out_radius_min_length_shu_zhe) {\n    out_radius_shu_zhe = out_radius_min_length_shu_zhe\n  }\n  const in_radius_start_shu_zhe = {\n    x: in_corner_shu_zhe.x,\n    y: in_corner_shu_zhe.y - in_radius_shu_zhe,\n  }\n  const in_radius_end_shu_zhe = getRadiusPoint({\n    start: in_corner_shu_zhe,\n    end: in_zhe_end,\n    radius: in_radius_shu_zhe,\n  })\n  const out_radius_start_shu_zhe = {\n    x: out_corner_shu_zhe.x,\n    y: out_corner_shu_zhe.y - out_radius_shu_zhe,\n  }\n  const out_radius_end_shu_zhe = getRadiusPoint({\n    start: out_corner_shu_zhe,\n    end: out_zhe_end,\n    radius: out_radius_shu_zhe,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const inner_angle = Math.PI / 2\n    const mid_angle = Math.PI / 4\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = getRadiusPoint({\n      start: out_corner_shu_zhe,\n      end: out_shu_start,\n      radius: corner_radius,\n    })\n    const turn_start_1 = getRadiusPoint({\n      start: turn_control_1,\n      end: out_shu_start,\n      radius: corner_radius,\n    })\n    const turn_end_1 = {\n      x: turn_control_1.x - turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y + turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = {\n      x: out_corner_shu_zhe.x + corner_radius,\n      y: out_corner_shu_zhe.y,\n    }\n    const turn_start_2 = {\n      x: turn_control_2.x + corner_radius,\n      y: turn_control_2.y,\n    }\n    const turn_end_2 = {\n      x: turn_control_2.x - turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y + turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  let start_data = {}\n  if (start_style_type === 1 || start_style_type === 2) {\n    // 计算起笔样式1或2需要的数据\n    const angle = Math.atan2(shu_end.x - shu_start.x, shu_end.y - shu_start.x)\n    const left_up = {\n      x: out_shu_start.x - start_style.start_style_decorator_width * Math.cos(angle),\n      y: out_shu_start.y + start_style.start_style_decorator_width * Math.sin(angle),\n    }\n    const right_up = {\n      x: in_shu_start.x + start_style.start_style_decorator_width * Math.cos(angle),\n      y: in_shu_start.y - start_style.start_style_decorator_width * Math.sin(angle),\n    }\n    const left_down = {\n      x: left_up.x + start_style.start_style_decorator_height * Math.sin(angle),\n      y: left_up.y + start_style.start_style_decorator_height * Math.cos(angle),\n    }\n    const right_down = {\n      x: right_up.x + start_style.start_style_decorator_height * Math.sin(angle),\n      y: right_up.y + start_style.start_style_decorator_height * Math.cos(angle),\n    }\n    const left_control = getRadiusPoint({\n      start: out_shu_start,\n      end: out_shu_end,\n      radius: start_style.start_style_decorator_height,\n    })\n    const right_control = getRadiusPoint({\n      start: in_shu_start,\n      end: in_shu_end,\n      radius: start_style.start_style_decorator_height,\n    })\n    const left_end = getRadiusPoint({\n      start: out_shu_start,\n      end: out_shu_end,\n      radius: start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    })\n    const right_end = getRadiusPoint({\n      start: in_shu_start,\n      end: in_shu_end,\n      radius: start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    })\n    start_data = {\n      left_up,\n      left_down,\n      right_up,\n      right_down,\n      left_control,\n      right_control,\n      left_end,\n      right_end,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(start_data.left_up.x, start_data.left_up.y)\n    pen.lineTo(start_data.left_down.x, start_data.left_down.y)\n    pen.lineTo(start_data.left_control.x, start_data.left_control.y)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(start_data.left_up.x, start_data.left_up.y)\n    pen.lineTo(start_data.left_down.x, start_data.left_down.y)\n    pen.quadraticBezierTo(start_data.left_control.x, start_data.left_control.y, start_data.left_end.x, start_data.left_end.y)\n  }\n  if (turn_style_type === 0) {\n    // 默认转角样式\n    // 绘制外侧竖折圆角\n    pen.lineTo(out_radius_start_shu_zhe.x, out_radius_start_shu_zhe.y)\n    pen.quadraticBezierTo(out_corner_shu_zhe.x, out_corner_shu_zhe.y, out_radius_end_shu_zhe.x, out_radius_end_shu_zhe.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折\n  pen.lineTo(out_zhe_end.x, out_zhe_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_zhe_end.x, in_zhe_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  // 绘制内侧竖折圆角\n  pen.lineTo(in_radius_end_shu_zhe.x, in_radius_end_shu_zhe.y)\n  pen.quadraticBezierTo(in_corner_shu_zhe.x, in_corner_shu_zhe.y, in_radius_start_shu_zhe.x, in_radius_start_shu_zhe.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(start_data.right_control.x, start_data.right_control.y)\n    pen.lineTo(start_data.right_down.x, start_data.right_down.y)\n    pen.lineTo(start_data.right_up.x, start_data.right_up.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(start_data.right_end.x, start_data.right_end.y)\n    pen.quadraticBezierTo(start_data.right_control.x, start_data.right_control.y, start_data.right_down.x, start_data.right_down.y)\n    pen.lineTo(start_data.right_up.x, start_data.right_up.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(start_data.left_up.x, start_data.left_up.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(start_data.left_up.x, start_data.left_up.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":250,"_y":750,"uuid":"6Bq-Y3RODvSpvS5rUV8fr","name":"zhe_start_ref"},{"_x":750,"_y":750,"uuid":"zYzeAZ6I4uLKZHO2RjVDg","name":"zhe_end_ref"},{"_x":250,"_y":250,"uuid":"6baIuT3VL53hMxtSvt4H8","name":"shu_start"},{"_x":250,"_y":750,"uuid":"oURAm4Oqk3dv8oVCb0Ubs","name":"shu_end"},{"_x":250,"_y":750,"uuid":"UY2yg_VtubbN_xGpwu9E1","name":"zhe_start"},{"_x":750,"_y":750,"uuid":"zy_XnVRgqL4alPXeY3pj1","name":"zhe_end"}],"_reflines":[{"name":"zhe_start_ref-zhe_end_ref","start":"zhe_start_ref","end":"zhe_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"}],"_components":[{"points":[{"uuid":"qR77TOqSkBpkhtC5SJU7T","type":"anchor","x":212.5,"y":250,"origin":null},{"uuid":"l9otc17NhmkdHUjyGUF56","type":"control","x":212.5,"y":250,"origin":"qR77TOqSkBpkhtC5SJU7T"},{"uuid":"jt9Ke5Lx_bh37cIjUfi9I","type":"control","x":212.5,"y":270,"origin":"Rsb7j7JS_mp26WfrTax9S"},{"uuid":"Rsb7j7JS_mp26WfrTax9S","type":"anchor","x":212.5,"y":270,"origin":null},{"uuid":"wGlDFbKH_QdgGoI5KhKqC","type":"control","x":220.83333333333334,"y":270,"origin":"Rsb7j7JS_mp26WfrTax9S"},{"uuid":"Vu2YbNX2nU7UsFvT9l7VL","type":"control","x":225,"y":276.6666666666667,"origin":"Jl1k1RlJeEczkMwj18gJ1"},{"uuid":"Jl1k1RlJeEczkMwj18gJ1","type":"anchor","x":225,"y":290,"origin":null},{"uuid":"Frp0_BV6-ATA2waIi7o1z","type":"control","x":225,"y":290,"origin":"Jl1k1RlJeEczkMwj18gJ1"},{"uuid":"wBZQlZnnaIaApjEF2sLl8","type":"control","x":225,"y":704.2893218813451,"origin":"mBm_4l4meBoad-UhBUePz"},{"uuid":"mBm_4l4meBoad-UhBUePz","type":"anchor","x":225,"y":704.2893218813451,"origin":null},{"uuid":"KqMm3MQiMEgkqCNA2qIf4","type":"control","x":225,"y":727.8595479208967,"origin":"mBm_4l4meBoad-UhBUePz"},{"uuid":"X5XX4bB_U0UasRpFSdhyZ","type":"control","x":220.28595479208968,"y":744.3587061485829,"origin":"T08erKa6zxa4FyOAJF3qH"},{"uuid":"T08erKa6zxa4FyOAJF3qH","type":"anchor","x":210.85786437626905,"y":753.7867965644035,"origin":null},{"uuid":"fWE0N85BmGY4eUMMkdZkG","type":"control","x":210.85786437626905,"y":753.7867965644035,"origin":"T08erKa6zxa4FyOAJF3qH"},{"uuid":"t3k9hc2Rv1k_bN7FcndyV","type":"control","x":246.21320343559643,"y":789.142135623731,"origin":"auXYKSdkORvPIglEyraPQ"},{"uuid":"auXYKSdkORvPIglEyraPQ","type":"anchor","x":246.21320343559643,"y":789.142135623731,"origin":null},{"uuid":"6y8OZ_sgbW_124irxBU1J","type":"control","x":255.64129385141706,"y":779.7140452079103,"origin":"auXYKSdkORvPIglEyraPQ"},{"uuid":"UNRgh2Ln4tLu6Yh5uwnXr","type":"control","x":272.14045207910317,"y":775,"origin":"QniRKPFCSysCK7ySclhRw"},{"uuid":"QniRKPFCSysCK7ySclhRw","type":"anchor","x":295.71067811865476,"y":775,"origin":null},{"uuid":"Zi-_3c8ZT2I8ax_jO2Owk","type":"control","x":295.71067811865476,"y":775,"origin":"QniRKPFCSysCK7ySclhRw"},{"uuid":"Y--yDkrNlsO6aga3Lron6","type":"control","x":750,"y":775,"origin":"uXnZhMKiSt-u7Jil-UzBW"},{"uuid":"uXnZhMKiSt-u7Jil-UzBW","type":"anchor","x":750,"y":775,"origin":null},{"uuid":"1pRxeZa2WIvZ4LpTIUTaA","type":"control","x":750,"y":775,"origin":"uXnZhMKiSt-u7Jil-UzBW"},{"uuid":"XMcG2ruulqZ-gxeez1X3b","type":"control","x":750,"y":725,"origin":"W7sD2IicCFHr2zpo2GTcf"},{"uuid":"W7sD2IicCFHr2zpo2GTcf","type":"anchor","x":750,"y":725,"origin":null},{"uuid":"4zg2cnoffexrhlXWlCpZs","type":"control","x":750,"y":725,"origin":"W7sD2IicCFHr2zpo2GTcf"},{"uuid":"SsfvMM87QJhD8T-sO3ouv","type":"control","x":275,"y":725,"origin":"PmpSfy9auFSmNZLYeJ7FT"},{"uuid":"PmpSfy9auFSmNZLYeJ7FT","type":"anchor","x":275,"y":725,"origin":null},{"uuid":"jI2VMt78YYOfxVexRVKDD","type":"control","x":275,"y":725,"origin":"PmpSfy9auFSmNZLYeJ7FT"},{"uuid":"RVjhXU6iwcoSEis7_nWDI","type":"control","x":275,"y":725,"origin":"9PUY9FCgeQKsui52KyGUO"},{"uuid":"9PUY9FCgeQKsui52KyGUO","type":"anchor","x":275,"y":725,"origin":null},{"uuid":"TOwO7S-eQYIJ8JgLAh_5q","type":"control","x":275,"y":725,"origin":"9PUY9FCgeQKsui52KyGUO"},{"uuid":"vj2no84-aMVlzjVEyJQwL","type":"control","x":275,"y":290,"origin":"t11tZbq7RzdViFxYbUj6a"},{"uuid":"t11tZbq7RzdViFxYbUj6a","type":"anchor","x":275,"y":290,"origin":null},{"uuid":"yOf4bBHAW8rLLXznBApCl","type":"control","x":275,"y":276.6666666666667,"origin":"t11tZbq7RzdViFxYbUj6a"},{"uuid":"h_aRCgeHhmDuxPLR6oabv","type":"control","x":279.1666666666667,"y":270,"origin":"o57WYQs6PcqdUaIl_21Q7"},{"uuid":"o57WYQs6PcqdUaIl_21Q7","type":"anchor","x":287.5,"y":270,"origin":null},{"uuid":"RfGBa2-a6K3JQ7QdwrKl8","type":"control","x":287.5,"y":270,"origin":"o57WYQs6PcqdUaIl_21Q7"},{"uuid":"Zm57e_Op4sXh1iJeYebjL","type":"control","x":287.5,"y":250,"origin":"zrNZjQv-2uCxWuhECgrzT"},{"uuid":"zrNZjQv-2uCxWuhECgrzT","type":"anchor","x":287.5,"y":250,"origin":null},{"uuid":"h2nigfqL5nQWIOla9WKqe","type":"control","x":287.5,"y":250,"origin":"zrNZjQv-2uCxWuhECgrzT"},{"uuid":"YjLjLEMBwZb_iMWu5N_jR","type":"control","x":212.5,"y":250,"origin":"dPFM0ChJm0xUc2fKbng8h"},{"uuid":"dPFM0ChJm0xUc2fKbng8h","type":"anchor","x":212.5,"y":250,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":212.5,"y":550},"end":{"x":212.5,"y":530},"control1":{"x":212.5,"y":550},"control2":{"x":212.5,"y":530},"fill":false},{"type":2,"start":{"x":212.5,"y":530},"end":{"x":225,"y":510},"control1":{"x":220.83333333333334,"y":530},"control2":{"x":225,"y":523.3333333333333},"fill":false},{"type":2,"start":{"x":225,"y":510},"end":{"x":225,"y":95.71067811865487},"control1":{"x":225,"y":510},"control2":{"x":225,"y":95.71067811865487},"fill":false},{"type":2,"start":{"x":225,"y":95.71067811865487},"end":{"x":210.85786437626905,"y":46.21320343559648},"control1":{"x":225,"y":72.14045207910328},"control2":{"x":220.28595479208968,"y":55.64129385141712},"fill":false},{"type":2,"start":{"x":210.85786437626905,"y":46.21320343559648},"end":{"x":246.21320343559643,"y":10.857864376269049},"control1":{"x":210.85786437626905,"y":46.21320343559648},"control2":{"x":246.21320343559643,"y":10.857864376269049},"fill":false},{"type":2,"start":{"x":246.21320343559643,"y":10.857864376269049},"end":{"x":295.71067811865476,"y":25},"control1":{"x":255.64129385141706,"y":20.285954792089683},"control2":{"x":272.14045207910317,"y":25},"fill":false},{"type":2,"start":{"x":295.71067811865476,"y":25},"end":{"x":750,"y":25},"control1":{"x":295.71067811865476,"y":25},"control2":{"x":750,"y":25},"fill":false},{"type":2,"start":{"x":750,"y":25},"end":{"x":750,"y":75},"control1":{"x":750,"y":25},"control2":{"x":750,"y":75},"fill":false},{"type":2,"start":{"x":750,"y":75},"end":{"x":275,"y":75},"control1":{"x":750,"y":75},"control2":{"x":275,"y":75},"fill":false},{"type":2,"start":{"x":275,"y":75},"end":{"x":275,"y":75},"control1":{"x":275,"y":75},"control2":{"x":275,"y":75},"fill":false},{"type":2,"start":{"x":275,"y":75},"end":{"x":275,"y":510},"control1":{"x":275,"y":75},"control2":{"x":275,"y":510},"fill":false},{"type":2,"start":{"x":275,"y":510},"end":{"x":287.5,"y":530},"control1":{"x":275,"y":523.3333333333333},"control2":{"x":279.1666666666667,"y":530},"fill":false},{"type":2,"start":{"x":287.5,"y":530},"end":{"x":287.5,"y":550},"control1":{"x":287.5,"y":530},"control2":{"x":287.5,"y":550},"fill":false},{"type":2,"start":{"x":287.5,"y":550},"end":{"x":212.5,"y":550},"control1":{"x":287.5,"y":550},"control2":{"x":212.5,"y":550},"fill":false}],"preview":[{"type":2,"start":{"x":21.25,"y":25},"end":{"x":21.25,"y":27},"control1":{"x":21.25,"y":25},"control2":{"x":21.25,"y":27},"fill":false},{"type":2,"start":{"x":21.25,"y":27},"end":{"x":22.5,"y":29},"control1":{"x":22.083333333333336,"y":27},"control2":{"x":22.5,"y":27.66666666666667},"fill":false},{"type":2,"start":{"x":22.5,"y":29},"end":{"x":22.5,"y":70.42893218813451},"control1":{"x":22.5,"y":29},"control2":{"x":22.5,"y":70.42893218813451},"fill":false},{"type":2,"start":{"x":22.5,"y":70.42893218813451},"end":{"x":21.085786437626908,"y":75.37867965644035},"control1":{"x":22.5,"y":72.78595479208967},"control2":{"x":22.02859547920897,"y":74.43587061485829},"fill":false},{"type":2,"start":{"x":21.085786437626908,"y":75.37867965644035},"end":{"x":24.621320343559645,"y":78.9142135623731},"control1":{"x":21.085786437626908,"y":75.37867965644035},"control2":{"x":24.621320343559645,"y":78.9142135623731},"fill":false},{"type":2,"start":{"x":24.621320343559645,"y":78.9142135623731},"end":{"x":29.571067811865476,"y":77.5},"control1":{"x":25.564129385141708,"y":77.97140452079104},"control2":{"x":27.214045207910317,"y":77.5},"fill":false},{"type":2,"start":{"x":29.571067811865476,"y":77.5},"end":{"x":75,"y":77.5},"control1":{"x":29.571067811865476,"y":77.5},"control2":{"x":75,"y":77.5},"fill":false},{"type":2,"start":{"x":75,"y":77.5},"end":{"x":75,"y":72.5},"control1":{"x":75,"y":77.5},"control2":{"x":75,"y":72.5},"fill":false},{"type":2,"start":{"x":75,"y":72.5},"end":{"x":27.5,"y":72.5},"control1":{"x":75,"y":72.5},"control2":{"x":27.5,"y":72.5},"fill":false},{"type":2,"start":{"x":27.5,"y":72.5},"end":{"x":27.5,"y":72.5},"control1":{"x":27.5,"y":72.5},"control2":{"x":27.5,"y":72.5},"fill":false},{"type":2,"start":{"x":27.5,"y":72.5},"end":{"x":27.5,"y":29},"control1":{"x":27.5,"y":72.5},"control2":{"x":27.5,"y":29},"fill":false},{"type":2,"start":{"x":27.5,"y":29},"end":{"x":28.75,"y":27},"control1":{"x":27.5,"y":27.66666666666667},"control2":{"x":27.91666666666667,"y":27},"fill":false},{"type":2,"start":{"x":28.75,"y":27},"end":{"x":28.75,"y":25},"control1":{"x":28.75,"y":27},"control2":{"x":28.75,"y":25},"fill":false},{"type":2,"start":{"x":28.75,"y":25},"end":{"x":21.25,"y":25},"control1":{"x":28.75,"y":25},"control2":{"x":21.25,"y":25},"fill":false}]}]}},{"uuid":"fLTmdF3G66tU_SgiUkAF8","type":"system","name":"竖弯","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"E5bVPhOWe6hGLOTTvnf-q","name":"竖-长度","type":0,"value":300,"min":0,"max":1000},{"uuid":"RcRsNyRZdGMGx4bnc4fhx","name":"弯-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"WWbnAwL42RrGoSGTjn9AJ","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"LXNT_Elfhir-Y8b-q_CGA","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"A-T8lk8HmiFO8CLX_X9U2","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"_w-w1aVx3FoqugItYvzI7","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"_lG3TSJEunC7JnL_P5K72","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"mZV2ybAvHXUQH1r2WeNmH","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"FUsQpOjTmwNfRaosgkUdy","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"9ExZSkCq24DP_BlOVgPL2","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_fLTmdF3G66tU_SgiUkAF8 (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 400\nconst y0 = 350\nconst params = {\n  shu_length: glyph.getParam('竖-长度'),\n  wan_length: glyph.getParam('弯-长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'shu_end': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['shu_end'] = {\n        x: glyph.tempData['shu_end'].x,\n        y: glyph.tempData['shu_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('竖-长度', _params.shu_length)\n  glyph.setParam('弯-长度', _params.wan_length)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { shu_start, shu_end, wan_start, wan_end } = jointsMap\n  const shu_length_range = glyph.getParamRange('竖-长度')\n  const wan_length_range = glyph.getParamRange('弯-长度')\n  const shu_length = range(shu_end.y - shu_start.y, shu_length_range)\n  const wan_length = range(wan_end.x - wan_start.x, wan_length_range)\n  return {\n    shu_length,\n    wan_length,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    shu_length,\n    wan_length,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 竖\n  let shu_start, shu_end\n  const shu_start_ref = new FP.Joint(\n    'shu_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const shu_end_ref = new FP.Joint(\n    'shu_end_ref',\n    {\n      x: shu_start_ref.x,\n      y: shu_start_ref.y + shu_length,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x - weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x - weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x + weight / 2,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x + weight / 2,\n        y: shu_end_ref.y,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    shu_start = new FP.Joint(\n      'shu_start',\n      {\n        x: shu_start_ref.x,\n        y: shu_start_ref.y,\n      },\n    )\n    shu_end = new FP.Joint(\n      'shu_end',\n      {\n        x: shu_end_ref.x,\n        y: shu_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(shu_start_ref)\n  glyph.addJoint(shu_end_ref)\n  glyph.addRefLine(refline(shu_start_ref, shu_end_ref, 'ref'))\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: shu_start.x,\n      y: shu_start.y + shu_length,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n\n  glyph.addJoint(shu_start)\n  glyph.addJoint(shu_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_end)\n\n  const skeleton = {\n    shu_start,\n    shu_end,\n    wan_start,\n    wan_end,\n  }\n\n  glyph.addRefLine(refline(shu_start, shu_end))\n  glyph.addRefLine(refline(wan_start, wan_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_height: start_style_value * 20,\n        start_style_decorator_width: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    shu_start,\n    shu_end,\n    wan_start,\n    wan_end,\n  } = skeleton\n\n  // out指左侧（外侧）轮廓线\n  // in指右侧（内侧）轮廓线\n  const { out_shu_start, out_shu_end, in_shu_start, in_shu_end } = FP.getLineContours('shu', { shu_start, shu_end }, weight, {\n    unticlockwise: true,\n  })\n  const { out_wan_start, out_wan_end, in_wan_start, in_wan_end } = FP.getLineContours('wan', { wan_start, wan_end }, weight, {\n    unticlockwise: true,\n  })\n  const { corner: in_corner_shu_wan } = FP.getIntersection(\n    { type: 'line', start: in_shu_start, end: in_shu_end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  )\n  const { corner: out_corner_shu_wan } = FP.getIntersection(\n    { type: 'line', start: out_shu_start, end: out_shu_end },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  )\n\n  // 计算竖弯拐角处内外圆角相关的点与数据\n  let in_radius_shu_wan = 60 * bending_degree\n  let out_radius_shu_wan = 80 * bending_degree\n  // 如果in_radius超出竖或弯长度，取竖或弯的最小长度\n  const in_radius_min_length_shu_wan = Math.min(\n    getDistance(in_corner_shu_wan, in_shu_start),\n    getDistance(in_corner_shu_wan, in_wan_end),\n  )\n  const out_radius_min_length_shu_wan = Math.min(\n    getDistance(out_wan_end, out_shu_start),\n    getDistance(out_wan_start, out_wan_end),\n  )\n  if (in_radius_shu_wan >= in_radius_min_length_shu_wan) {\n    in_radius_shu_wan = in_radius_min_length_shu_wan\n  }\n  if (out_radius_shu_wan >= out_radius_min_length_shu_wan) {\n    out_radius_shu_wan = out_radius_min_length_shu_wan\n  }\n  const in_radius_start_shu_wan = {\n    x: in_corner_shu_wan.x,\n    y: in_corner_shu_wan.y - in_radius_shu_wan,\n  }\n  const in_radius_end_shu_wan = getRadiusPoint({\n    start: in_corner_shu_wan,\n    end: in_wan_end,\n    radius: in_radius_shu_wan,\n  })\n  const out_radius_start_shu_wan = {\n    x: out_corner_shu_wan.x,\n    y: out_corner_shu_wan.y - out_radius_shu_wan,\n  }\n  const out_radius_end_shu_wan = getRadiusPoint({\n    start: out_corner_shu_wan,\n    end: out_wan_end,\n    radius: out_radius_shu_wan,\n  })\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制左侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔左右凸起长方形\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(out_shu_start.x, out_shu_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔左右凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y + start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height,\n      out_shu_start.x,\n      out_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n  }\n  // 绘制外侧竖弯圆角\n  pen.lineTo(out_radius_start_shu_wan.x, out_radius_start_shu_wan.y)\n  pen.quadraticBezierTo(out_corner_shu_wan.x, out_corner_shu_wan.y, out_radius_end_shu_wan.x, out_radius_end_shu_wan.y)\n  // 绘制外侧弯\n  pen.lineTo(out_wan_end.x, out_wan_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_wan_end.x, in_wan_end.y)\n\n  // 绘制右侧（内侧）轮廓\n  // 绘制内侧竖弯圆角\n  pen.lineTo(in_radius_end_shu_wan.x, in_radius_end_shu_wan.y)\n  pen.quadraticBezierTo(in_corner_shu_wan.x, in_corner_shu_wan.y, in_radius_start_shu_wan.x, in_radius_start_shu_wan.y)\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_shu_start.x, in_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_shu_start.x, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height + start_style.start_style_decorator_radius,\n    )\n    pen.quadraticBezierTo(\n      in_shu_start.x,\n      in_shu_start.y + start_style.start_style_decorator_height,\n      in_shu_start.x + start_style.start_style_decorator_width,\n      in_shu_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_shu_start.x + start_style.start_style_decorator_width, in_shu_start.y)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_shu_start.x, out_shu_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_shu_start.x - start_style.start_style_decorator_width, out_shu_start.y)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":400,"_y":350,"uuid":"HLhM-Med3voUdKSiyrtme","name":"shu_start_ref"},{"_x":400,"_y":650,"uuid":"syX6rqv5wgD8ApJZnThjc","name":"shu_end_ref"},{"_x":400,"_y":350,"uuid":"i3a9zsvSfuQ-ShS-aZ2-w","name":"shu_start"},{"_x":400,"_y":650,"uuid":"W-A78UefhiLpzmIuVlVAF","name":"shu_end"},{"_x":400,"_y":650,"uuid":"oLFtkt0QowNSvkXk8s0-l","name":"wan_start"},{"_x":600,"_y":650,"uuid":"mNUSnqGZp5_solc9kPgK9","name":"wan_end"}],"_reflines":[{"name":"shu_start_ref-shu_end_ref","start":"shu_start_ref","end":"shu_end_ref","type":"ref"},{"name":"shu_start-shu_end","start":"shu_start","end":"shu_end"},{"name":"wan_start-wan_end","start":"wan_start","end":"wan_end"}],"_components":[{"points":[{"uuid":"4Wjmb1qeBFJCoSPDH2xHP","type":"anchor","x":362.5,"y":350,"origin":null},{"uuid":"4o-qLkuUXYsN9RpjT1Zmk","type":"control","x":362.5,"y":350,"origin":"4Wjmb1qeBFJCoSPDH2xHP"},{"uuid":"gIvtY4pH6DRdo2WXDi01c","type":"control","x":362.5,"y":370,"origin":"YR7tq_Y70L4aBvx5Z9QbZ"},{"uuid":"YR7tq_Y70L4aBvx5Z9QbZ","type":"anchor","x":362.5,"y":370,"origin":null},{"uuid":"rJKrk7DTKDFtQYddEhL8F","type":"control","x":370.8333333333333,"y":370,"origin":"YR7tq_Y70L4aBvx5Z9QbZ"},{"uuid":"gEO3CKm0JIODIUflCVCjB","type":"control","x":375,"y":376.6666666666667,"origin":"6wdrhueVPo9NJk05GCoiv"},{"uuid":"6wdrhueVPo9NJk05GCoiv","type":"anchor","x":375,"y":390,"origin":null},{"uuid":"39Uu41R9zv5H7GXsQA-2S","type":"control","x":375,"y":390,"origin":"6wdrhueVPo9NJk05GCoiv"},{"uuid":"WiQwb8zrIga6CKDt6jA6y","type":"control","x":375,"y":595,"origin":"ZEdeAYq0WcNuLswU9VkIR"},{"uuid":"ZEdeAYq0WcNuLswU9VkIR","type":"anchor","x":375,"y":595,"origin":null},{"uuid":"BPXxo7TnDzh07iuh3PqWA","type":"control","x":375,"y":648.3333333333334,"origin":"ZEdeAYq0WcNuLswU9VkIR"},{"uuid":"S1wbA2S2egBRgjQA-69nl","type":"control","x":401.6666666666667,"y":675,"origin":"--gtXE-yB9um0bG5V4Ccv"},{"uuid":"--gtXE-yB9um0bG5V4Ccv","type":"anchor","x":455,"y":675,"origin":null},{"uuid":"w0aENmUMtANoWCgMKpCGW","type":"control","x":455,"y":675,"origin":"--gtXE-yB9um0bG5V4Ccv"},{"uuid":"Tqb9qspcOROEaxphcyqxt","type":"control","x":600,"y":675,"origin":"AYzzmQv5z8lnMnaTGS7-5"},{"uuid":"AYzzmQv5z8lnMnaTGS7-5","type":"anchor","x":600,"y":675,"origin":null},{"uuid":"gKUW8bnN-AdFng3AJ7XVN","type":"control","x":600,"y":675,"origin":"AYzzmQv5z8lnMnaTGS7-5"},{"uuid":"HSSGXk79l-V5VXenOdOBH","type":"control","x":600,"y":625,"origin":"S0SO7kaCf8N9L-kF6eXpE"},{"uuid":"S0SO7kaCf8N9L-kF6eXpE","type":"anchor","x":600,"y":625,"origin":null},{"uuid":"RBQziLT3X6ys4LxYcc7Tg","type":"control","x":600,"y":625,"origin":"S0SO7kaCf8N9L-kF6eXpE"},{"uuid":"5RnpPD5AYe30AZNHJ-9AX","type":"control","x":485,"y":625,"origin":"GoPKiwZG4f-cainU139qC"},{"uuid":"GoPKiwZG4f-cainU139qC","type":"anchor","x":485,"y":625,"origin":null},{"uuid":"TsDn8Yhjmjos0geJelp5H","type":"control","x":445,"y":625,"origin":"GoPKiwZG4f-cainU139qC"},{"uuid":"sd5g2ROfyzrS0EBNxDXec","type":"control","x":425,"y":605,"origin":"SZZ0Q7cVTDyGhrCx-gwuD"},{"uuid":"SZZ0Q7cVTDyGhrCx-gwuD","type":"anchor","x":425,"y":565,"origin":null},{"uuid":"WLEkySJHJzEVrQkZUzhRj","type":"control","x":425,"y":565,"origin":"SZZ0Q7cVTDyGhrCx-gwuD"},{"uuid":"ZAB6m4_Rf-zYqtZLwIA2A","type":"control","x":425,"y":390,"origin":"PXuPz-zuMrJnyhpPvGdKu"},{"uuid":"PXuPz-zuMrJnyhpPvGdKu","type":"anchor","x":425,"y":390,"origin":null},{"uuid":"iCdFfW6BZdY0fTXM1ib9z","type":"control","x":425,"y":376.6666666666667,"origin":"PXuPz-zuMrJnyhpPvGdKu"},{"uuid":"UcfeKo7hOL49tv3S23g7F","type":"control","x":429.1666666666667,"y":370,"origin":"-APDRJ1t-9ryZCdnonqfw"},{"uuid":"-APDRJ1t-9ryZCdnonqfw","type":"anchor","x":437.5,"y":370,"origin":null},{"uuid":"KoJqzlzxZwX2nMoK3CTvp","type":"control","x":437.5,"y":370,"origin":"-APDRJ1t-9ryZCdnonqfw"},{"uuid":"xXTV0XMQLBccewaf4TwGq","type":"control","x":437.5,"y":350,"origin":"I2lYObg9tQnh1L907MjSR"},{"uuid":"I2lYObg9tQnh1L907MjSR","type":"anchor","x":437.5,"y":350,"origin":null},{"uuid":"zi37AkQTLlw96jtvso84g","type":"control","x":437.5,"y":350,"origin":"I2lYObg9tQnh1L907MjSR"},{"uuid":"Eu1JgVRBCUUHRHSqb0KLH","type":"control","x":362.5,"y":350,"origin":"iE7kQnFbHBgQZU-4b0d-b"},{"uuid":"iE7kQnFbHBgQZU-4b0d-b","type":"anchor","x":362.5,"y":350,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":362.5,"y":450},"end":{"x":362.5,"y":430},"control1":{"x":362.5,"y":450},"control2":{"x":362.5,"y":430},"fill":false},{"type":2,"start":{"x":362.5,"y":430},"end":{"x":375,"y":410},"control1":{"x":370.8333333333333,"y":430},"control2":{"x":375,"y":423.33333333333326},"fill":false},{"type":2,"start":{"x":375,"y":410},"end":{"x":375,"y":205},"control1":{"x":375,"y":410},"control2":{"x":375,"y":205},"fill":false},{"type":2,"start":{"x":375,"y":205},"end":{"x":455,"y":125},"control1":{"x":375,"y":151.66666666666663},"control2":{"x":401.6666666666667,"y":125},"fill":false},{"type":2,"start":{"x":455,"y":125},"end":{"x":600,"y":125},"control1":{"x":455,"y":125},"control2":{"x":600,"y":125},"fill":false},{"type":2,"start":{"x":600,"y":125},"end":{"x":600,"y":175},"control1":{"x":600,"y":125},"control2":{"x":600,"y":175},"fill":false},{"type":2,"start":{"x":600,"y":175},"end":{"x":485,"y":175},"control1":{"x":600,"y":175},"control2":{"x":485,"y":175},"fill":false},{"type":2,"start":{"x":485,"y":175},"end":{"x":425,"y":235},"control1":{"x":445,"y":175},"control2":{"x":425,"y":195},"fill":false},{"type":2,"start":{"x":425,"y":235},"end":{"x":425,"y":410},"control1":{"x":425,"y":235},"control2":{"x":425,"y":410},"fill":false},{"type":2,"start":{"x":425,"y":410},"end":{"x":437.5,"y":430},"control1":{"x":425,"y":423.33333333333326},"control2":{"x":429.1666666666667,"y":430},"fill":false},{"type":2,"start":{"x":437.5,"y":430},"end":{"x":437.5,"y":450},"control1":{"x":437.5,"y":430},"control2":{"x":437.5,"y":450},"fill":false},{"type":2,"start":{"x":437.5,"y":450},"end":{"x":362.5,"y":450},"control1":{"x":437.5,"y":450},"control2":{"x":362.5,"y":450},"fill":false}],"preview":[{"type":2,"start":{"x":36.25,"y":35},"end":{"x":36.25,"y":37},"control1":{"x":36.25,"y":35},"control2":{"x":36.25,"y":37},"fill":false},{"type":2,"start":{"x":36.25,"y":37},"end":{"x":37.5,"y":39},"control1":{"x":37.083333333333336,"y":37},"control2":{"x":37.5,"y":37.66666666666667},"fill":false},{"type":2,"start":{"x":37.5,"y":39},"end":{"x":37.5,"y":59.5},"control1":{"x":37.5,"y":39},"control2":{"x":37.5,"y":59.5},"fill":false},{"type":2,"start":{"x":37.5,"y":59.5},"end":{"x":45.5,"y":67.5},"control1":{"x":37.5,"y":64.83333333333334},"control2":{"x":40.16666666666667,"y":67.5},"fill":false},{"type":2,"start":{"x":45.5,"y":67.5},"end":{"x":60,"y":67.5},"control1":{"x":45.5,"y":67.5},"control2":{"x":60,"y":67.5},"fill":false},{"type":2,"start":{"x":60,"y":67.5},"end":{"x":60,"y":62.5},"control1":{"x":60,"y":67.5},"control2":{"x":60,"y":62.5},"fill":false},{"type":2,"start":{"x":60,"y":62.5},"end":{"x":48.5,"y":62.5},"control1":{"x":60,"y":62.5},"control2":{"x":48.5,"y":62.5},"fill":false},{"type":2,"start":{"x":48.5,"y":62.5},"end":{"x":42.5,"y":56.5},"control1":{"x":44.5,"y":62.5},"control2":{"x":42.5,"y":60.5},"fill":false},{"type":2,"start":{"x":42.5,"y":56.5},"end":{"x":42.5,"y":39},"control1":{"x":42.5,"y":56.5},"control2":{"x":42.5,"y":39},"fill":false},{"type":2,"start":{"x":42.5,"y":39},"end":{"x":43.75,"y":37},"control1":{"x":42.5,"y":37.66666666666667},"control2":{"x":42.91666666666667,"y":37},"fill":false},{"type":2,"start":{"x":43.75,"y":37},"end":{"x":43.75,"y":35},"control1":{"x":43.75,"y":37},"control2":{"x":43.75,"y":35},"fill":false},{"type":2,"start":{"x":43.75,"y":35},"end":{"x":36.25,"y":35},"control1":{"x":43.75,"y":35},"control2":{"x":36.25,"y":35},"fill":false}]}]}},{"uuid":"6rZMYi1jn6uv3rJa1221i","type":"system","name":"横折弯","components":[],"groups":[],"orderedList":[],"selectedComponentsUUIDs":[],"view":{"zoom":100,"translateX":0,"translateY":0},"parameters":[{"uuid":"D667W7rVbrqQ_CZq4FRCJ","name":"横-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"KFvB123EEmsByu6n6MaUK","name":"折-水平延伸","type":0,"value":0,"min":-500,"max":500},{"uuid":"ZRnf6yMR0EOV-ajA0gO1r","name":"折-竖直延伸","type":0,"value":300,"min":0,"max":1000},{"uuid":"8pJ9zVcHTqUfnc0IEmgRJ","name":"弯-长度","type":0,"value":200,"min":0,"max":1000},{"uuid":"0_EDcQ3qWnfJNS1Enrs9-","name":"字重","type":0,"value":50,"min":0,"max":200},{"uuid":"rKK7IFcYQVlMJNtD2dU6Z","name":"参考位置","type":3,"value":0,"options":[{"value":0,"label":"默认"},{"value":1,"label":"右侧（上侧）"},{"value":2,"label":"左侧（下侧）"}]},{"uuid":"7QwopdS3TeBxDDqtQijoj","name":"起笔风格","type":3,"value":2,"options":[{"value":0,"label":"无起笔样式"},{"value":1,"label":"凸笔起笔"},{"value":2,"label":"凸笔圆角起笔"}]},{"uuid":"ogJHevjMcKGPhA9afTqTI","name":"起笔数值","type":0,"value":1,"min":0,"max":2},{"uuid":"rxEuztjU2OjaI1MEp7Rg_","name":"转角风格","type":3,"value":1,"options":[{"value":0,"label":"默认转角样式"},{"value":1,"label":"转角圆滑凸起"}]},{"uuid":"2TvShqTEnXXAb6eQtG1wP","name":"转角数值","type":0,"value":1,"min":1,"max":2},{"uuid":"JyCN9eetD3s-j3zM-yim-","name":"字重变化","type":0,"value":0,"min":0,"max":2},{"uuid":"ddq_gNf06sjQN3trWQZf9","name":"弯曲程度","type":0,"value":1,"min":0,"max":2}],"joints":[],"reflines":[],"script":"function script_6rZMYi1jn6uv3rJa1221i (glyph, constants, FP) {\n\tconst ox = 500\nconst oy = 500\nconst x0 = 300\nconst y0 = 345\nconst params = {\n  heng_length: glyph.getParam('横-长度'),\n  zhe_horizonalSpan: glyph.getParam('折-水平延伸'),\n  zhe_verticalSpan: glyph.getParam('折-竖直延伸'),\n  wan_length: glyph.getParam('弯-长度'),\n  skeletonRefPos: glyph.getParam('参考位置'),\n}\nconst global_params = {\n  weights_variation_power: glyph.getParam('字重变化'),\n  start_style_type: glyph.getParam('起笔风格'),\n  start_style_value: glyph.getParam('起笔数值'),\n  turn_style_type: glyph.getParam('转角风格'),\n  turn_style_value: glyph.getParam('转角数值'),\n  bending_degree: glyph.getParam('弯曲程度'),\n  weight: glyph.getParam('字重') || 40,\n}\n\nconst refline = (p1, p2, type) => {\n  const refline =  {\n    name: `${p1.name}-${p2.name}`,\n    start: p1.name,\n    end: p2.name,\n  }\n  if (type) {\n    refline.type = type\n  }\n  return refline\n}\n\nconst distance = (p1, p2) => {\n  return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n}\n\nconst getJointsMap = (data) => {\n  const { draggingJoint, deltaX, deltaY } = data\n  const jointsMap = Object.assign({}, glyph.tempData)\n  switch (draggingJoint.name) {\n    case 'heng_end': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      break\n    }\n    case 'zhe_start': {\n      jointsMap['heng_end'] = {\n        x: glyph.tempData['heng_end'].x + deltaX,\n        y: glyph.tempData['heng_end'].y,\n      }\n      jointsMap['zhe_start'] = {\n        x: glyph.tempData['zhe_start'].x + deltaX,\n        y: glyph.tempData['zhe_start'].y,\n      }\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      break\n    }\n    case 'zhe_end': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_start': {\n      jointsMap['zhe_end'] = {\n        x: glyph.tempData['zhe_end'].x + deltaX,\n        y: glyph.tempData['zhe_end'].y + deltaY,\n      }\n      jointsMap['wan_start'] = {\n        x: glyph.tempData['wan_start'].x + deltaX,\n        y: glyph.tempData['wan_start'].y + deltaY,\n      }\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y + deltaY,\n      }\n      break\n    }\n    case 'wan_end': {\n      jointsMap['wan_end'] = {\n        x: glyph.tempData['wan_end'].x + deltaX,\n        y: glyph.tempData['wan_end'].y,\n      }\n      break\n    }\n  }\n  return jointsMap\n}\n\nglyph.onSkeletonDragStart = (data) => {\n  // joint数据格式：{x, y, name}\n  const { draggingJoint } = data\n  glyph.tempData = {}\n  glyph.getJoints().map((joint) => {\n    const _joint = {\n      name: joint.name,\n      x: joint.x,\n      y: joint.y,\n    }\n    glyph.tempData[_joint.name] = _joint\n  })\n}\n\nglyph.onSkeletonDrag = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n}\n\nglyph.onSkeletonDragEnd = (data) => {\n  if (!glyph.tempData) return\n  glyph.clear()\n  // joint数据格式：{x, y, name}\n  const jointsMap = getJointsMap(data)\n  const _params = computeParamsByJoints(jointsMap)\n  updateGlyphByParams(_params, global_params)\n  glyph.setParam('横-长度', _params.heng_length)\n  glyph.setParam('折-水平延伸', _params.zhe_horizonalSpan)\n  glyph.setParam('折-竖直延伸', _params.zhe_verticalSpan)\n  glyph.setParam('弯-长度', _params.wan_length)\n  glyph.tempData = null\n}\n\nconst range = (value, range) => {\n  if (value < range.min) {\n    return range.min\n  } else if (value > range.max) {\n    return range.max\n  }\n  return value\n}\n\nconst computeParamsByJoints = (jointsMap) => {\n  const { heng_start, heng_end, zhe_start, zhe_end, wan_start, wan_end } = jointsMap\n  const heng_length_range = glyph.getParamRange('横-长度')\n  const zhe_horizonal_span_range = glyph.getParamRange('折-水平延伸')\n  const zhe_vertical_span_range = glyph.getParamRange('折-竖直延伸')\n  const wan_length_range = glyph.getParamRange('弯-长度')\n  const heng_length = range(heng_end.x - heng_start.x, heng_length_range)\n  const zhe_horizonalSpan = range(zhe_start.x - zhe_end.x, zhe_horizonal_span_range)\n  const zhe_verticalSpan = range(zhe_end.y - zhe_start.y, zhe_vertical_span_range)\n  const wan_length = range(wan_end.x - wan_start.x, wan_length_range)\n  return {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    wan_length,\n    skeletonRefPos: glyph.getParam('参考位置'),\n  }\n}\n\nconst updateGlyphByParams = (params, global_params) => {\n  const {\n    heng_length,\n    zhe_horizonalSpan,\n    zhe_verticalSpan,\n    wan_length,\n    skeletonRefPos,\n  } = params\n  const { weight } = global_params\n\n  // 横\n  let heng_start, heng_end\n  const heng_start_ref = new FP.Joint(\n    'heng_start_ref',\n    {\n      x: x0,\n      y: y0,\n    },\n  )\n  const heng_end_ref = new FP.Joint(\n    'heng_end_ref',\n    {\n      x: heng_start_ref.x + heng_length,\n      y: heng_start_ref.y,\n    },\n  )\n  if (skeletonRefPos === 1) {\n    // 骨架参考位置为右侧（上侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y + weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y + weight / 2,\n      },\n    )\n  } else if (skeletonRefPos === 2) {\n    // 骨架参考位置为左侧（下侧）\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y - weight / 2,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y - weight / 2,\n      },\n    )\n  } else {\n    // 默认骨架参考位置，即骨架参考位置为中间实际绘制的骨架位置\n    heng_start = new FP.Joint(\n      'heng_start',\n      {\n        x: heng_start_ref.x,\n        y: heng_start_ref.y,\n      },\n    )\n    heng_end = new FP.Joint(\n      'heng_end',\n      {\n        x: heng_end_ref.x,\n        y: heng_end_ref.y,\n      },\n    )\n  }\n  glyph.addJoint(heng_start_ref)\n  glyph.addJoint(heng_end_ref)\n  glyph.addRefLine(refline(heng_start_ref, heng_end_ref, 'ref'))\n\n  // 折\n  const zhe_start = new FP.Joint(\n    'zhe_start',\n    {\n      x: heng_start.x + heng_length,\n      y: heng_start.y,\n    },\n  )\n  const zhe_end = new FP.Joint(\n    'zhe_end',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n\n  // 弯\n  const wan_start = new FP.Joint(\n    'wan_start',\n    {\n      x: zhe_start.x - zhe_horizonalSpan,\n      y: zhe_start.y + zhe_verticalSpan,\n    },\n  )\n  const wan_end = new FP.Joint(\n    'wan_end',\n    {\n      x: wan_start.x + wan_length,\n      y: wan_start.y,\n    },\n  )\n\n  glyph.addJoint(heng_start)\n  glyph.addJoint(heng_end)\n  glyph.addJoint(zhe_start)\n  glyph.addJoint(zhe_end)\n  glyph.addJoint(wan_start)\n  glyph.addJoint(wan_end)\n\n  const skeleton = {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    wan_start,\n    wan_end,\n  }\n\n  glyph.addRefLine(refline(heng_start, heng_end))\n  glyph.addRefLine(refline(zhe_start, zhe_end))\n  glyph.addRefLine(refline(wan_start, wan_end))\n\n  const components = getComponents(skeleton, global_params)\n  for (let i = 0; i < components.length; i++) {\n    glyph.addComponent(components[i])\n  }\n\n  glyph.getSkeleton = () => {\n    return skeleton\n  }\n  glyph.getComponentsBySkeleton = (skeleton) => {\n    return getComponents(skeleton, global_params)\n  }\n}\n\nconst getComponents = (skeleton) => {\n  const {\n    weights_variation_power,\n    start_style_type,\n    start_style_value,\n    turn_style_type,\n    turn_style_value,\n    bending_degree,\n    weight,\n  } = global_params\n\n  const getStartStyle = (start_style_type, start_style_value) => {\n    if (start_style_type === 1) {\n      // 起笔上下凸起长方形\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n      }\n    } else if (start_style_type === 2) {\n      // 起笔上下凸起长方形，长方形内侧转角为圆角\n      return {\n        start_style_decorator_width: start_style_value * 20,\n        start_style_decorator_height: weight * 0.25,\n        start_style_decorator_radius: 20,\n      }\n    }\n    return {}\n  }\n  \n  const start_style = getStartStyle(start_style_type, start_style_value)\n  \n  const getDistance = (p1, p2) => {\n    if(!p1 || !p2) return 0\n    return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\n  }\n  \n  const getRadiusPoint = (options) => {\n    const { start, end, radius } = options\n    const angle = Math.atan2(end.y - start.y, end.x - start.x)\n    const point = {\n      x: start.x + Math.cos(angle) * radius,\n      y: start.y + Math.sin(angle) * radius,\n    }\n    return point\n  }\n\n  // 根据骨架计算轮廓关键点\n  const {\n    heng_start,\n    heng_end,\n    zhe_start,\n    zhe_end,\n    wan_start,\n    wan_end,\n  } = skeleton\n\n  // out指右侧（外侧）轮廓线\n  // in指左侧（内侧）轮廓线\n  const { out_heng_start, out_heng_end, in_heng_start, in_heng_end } = FP.getLineContours('heng', { heng_start, heng_end }, weight)\n  const { out_zhe_start, out_zhe_end, in_zhe_start, in_zhe_end } = FP.getLineContours('zhe', { zhe_start, zhe_end }, weight)\n  const { out_wan_start, out_wan_end, in_wan_start, in_wan_end } = FP.getLineContours('wan', { wan_start, wan_end }, weight)\n  const { corner: in_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: in_heng_start, end: in_heng_end },\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n  )\n  const { corner: out_corner_heng_zhe } = FP.getIntersection(\n    { type: 'line', start: out_heng_start, end: out_heng_end },\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n  )\n  const { corner: in_corner_zhe_wan } = FP.getIntersection(\n    { type: 'line', start: in_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_wan_start, end: in_wan_end },\n  )\n  const { corner: out_corner_zhe_wan } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: out_zhe_end },\n    { type: 'line', start: out_wan_start, end: out_wan_end },\n  )\n  const { corner: out_corner_heng_zhe_down } = FP.getIntersection(\n    { type: 'line', start: out_zhe_start, end: in_zhe_end },\n    { type: 'line', start: in_heng_start, end: in_heng_end }\n  )\n  const out_corner_heng_zhe_up = {\n    x: out_corner_heng_zhe_down.x,\n    y: out_corner_heng_zhe_down.y - weight,\n  }\n\n  // 计算横折拐角处内外圆角相关的点与数据\n  let in_radius_heng_zhe = bending_degree > 1 ? 60 * (bending_degree - 1) : 0\n  let out_radius_heng_zhe = bending_degree > 1 ? 80 * (bending_degree - 1) : 0\n  // 如果in_radius超出横或折长度，取横或折的最小长度\n  const in_radius_min_length_heng_zhe = Math.min(\n    getDistance(in_corner_heng_zhe, in_heng_start),\n    getDistance(in_corner_heng_zhe, in_zhe_end),\n  )\n  const out_radius_min_length_heng_zhe = Math.min(\n    getDistance(out_zhe_end, out_heng_start),\n    getDistance(out_zhe_start, out_zhe_end),\n  )\n  if (in_radius_heng_zhe >= in_radius_min_length_heng_zhe) {\n    in_radius_heng_zhe = in_radius_min_length_heng_zhe\n  }\n  if (out_radius_heng_zhe >= out_radius_min_length_heng_zhe) {\n    out_radius_heng_zhe = out_radius_min_length_heng_zhe\n  }\n  const in_radius_start_heng_zhe = {\n    x: in_corner_heng_zhe.x - in_radius_heng_zhe,\n    y: in_corner_heng_zhe.y,\n  }\n  const in_radius_end_heng_zhe = getRadiusPoint({\n    start: in_corner_heng_zhe,\n    end: in_zhe_end,\n    radius: in_radius_heng_zhe,\n  })\n  const out_radius_start_heng_zhe = {\n    x: out_corner_heng_zhe.x - out_radius_heng_zhe,\n    y: out_corner_heng_zhe.y,\n  }\n  const out_radius_end_heng_zhe = getRadiusPoint({\n    start: out_corner_heng_zhe,\n    end: out_zhe_end,\n    radius: out_radius_heng_zhe,\n  })\n\n  // 计算折弯拐角处内外圆角相关的点与数据\n  let in_radius_zhe_wan = 80 * bending_degree\n  let out_radius_zhe_wan = 60 * bending_degree\n  // 如果in_radius超出竖或弯长度，取竖或弯的最小长度\n  const in_radius_min_length_zhe_wan = Math.min(\n    getDistance(in_corner_zhe_wan, in_radius_end_heng_zhe),\n    getDistance(in_corner_zhe_wan, in_wan_end),\n  )\n  const out_radius_min_length_zhe_wan = Math.min(\n    getDistance(out_corner_zhe_wan, out_radius_end_heng_zhe),\n    getDistance(out_corner_zhe_wan, out_wan_end),\n  )\n  if (in_radius_zhe_wan >= in_radius_min_length_zhe_wan) {\n    in_radius_zhe_wan = in_radius_min_length_zhe_wan\n  }\n  if (out_radius_zhe_wan >= out_radius_min_length_zhe_wan) {\n    out_radius_zhe_wan = out_radius_min_length_zhe_wan\n  }\n  const in_radius_start_zhe_wan = getRadiusPoint({\n    start: in_corner_zhe_wan,\n    end: in_corner_heng_zhe,\n    radius: in_radius_zhe_wan,\n  })\n  const in_radius_end_zhe_wan = getRadiusPoint({\n    start: in_corner_zhe_wan,\n    end: in_wan_end,\n    radius: in_radius_zhe_wan,\n  })\n  const out_radius_start_zhe_wan = getRadiusPoint({\n    start: out_corner_zhe_wan,\n    end: out_corner_heng_zhe_down,\n    radius: out_radius_zhe_wan,\n  })\n  const out_radius_end_zhe_wan = getRadiusPoint({\n    start: out_corner_zhe_wan,\n    end: out_wan_end,\n    radius: out_radius_zhe_wan,\n  })\n\n  let turn_data = {}\n  if (turn_style_type === 1) {\n    // 计算转角风格1（凸起，圆滑连接）所需要的数据\n    const turn_length = 20 * turn_style_value\n    const { inner_angle, mid_angle, angle1, angle2 } = FP.getTurnAngles(out_heng_start, out_corner_heng_zhe, out_zhe_end)\n    const inner_corner_length = weight\n    const corner_radius = (inner_corner_length / 2) / Math.sin(inner_angle / 2)\n    const turn_control_1 = {\n      x: out_corner_heng_zhe.x - corner_radius,\n      y: out_corner_heng_zhe.y,\n    }\n    const turn_start_1 = {\n      x: turn_control_1.x - corner_radius,\n      y: turn_control_1.y,\n    }\n    const turn_end_1 = {\n      x: turn_control_1.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_1.y - turn_length * Math.sin(mid_angle),\n    }\n    const turn_control_2 = getRadiusPoint({\n      start: out_corner_heng_zhe,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_start_2 = getRadiusPoint({\n      start: turn_control_2,\n      end: out_zhe_end,\n      radius: corner_radius,\n    })\n    const turn_end_2 = {\n      x: turn_control_2.x + turn_length * Math.cos(mid_angle),\n      y: turn_control_2.y - turn_length * Math.sin(mid_angle),\n    }\n    turn_data = {\n      turn_start_1,\n      turn_control_1,\n      turn_end_1,\n      turn_start_2,\n      turn_control_2,\n      turn_end_2,\n    }\n  }\n\n  // 创建钢笔组件\n  const pen = new FP.PenComponent()\n  pen.beginPath()\n\n  // 绘制右侧（外侧）轮廓\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.moveTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.moveTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.lineTo(out_heng_start.x + start_style.start_style_decorator_width, out_heng_start.y - start_style.start_style_decorator_height)\n    pen.quadraticBezierTo(\n      out_heng_start.x + start_style.start_style_decorator_width,\n      out_heng_start.y,\n      out_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      out_heng_start.y,\n    )\n  }\n  if (bending_degree > 1 && turn_style_type === 0) {\n    // 绘制外侧横折圆角\n    pen.lineTo(out_radius_start_heng_zhe.x, out_radius_start_heng_zhe.y)\n    pen.quadraticBezierTo(out_corner_heng_zhe.x, out_corner_heng_zhe.y, out_radius_end_heng_zhe.x, out_radius_end_heng_zhe.y)\n  } else if (turn_style_type === 0){\n    // 绘制外侧横折转角\n    pen.lineTo(out_corner_heng_zhe_up.x, out_corner_heng_zhe_up.y)\n    pen.lineTo(out_corner_heng_zhe_down.x, out_corner_heng_zhe_down.y)\n  } else if (turn_style_type === 1) {\n    // 转角样式1\n    pen.lineTo(turn_data.turn_start_1.x, turn_data.turn_start_1.y)\n    pen.quadraticBezierTo(turn_data.turn_control_1.x, turn_data.turn_control_1.y, turn_data.turn_end_1.x, turn_data.turn_end_1.y)\n    pen.lineTo(turn_data.turn_end_2.x, turn_data.turn_end_2.y)\n    pen.quadraticBezierTo(turn_data.turn_control_2.x, turn_data.turn_control_2.y, turn_data.turn_start_2.x, turn_data.turn_start_2.y)\n  }\n  // 绘制外侧折弯圆角\n  pen.lineTo(out_radius_start_zhe_wan.x, out_radius_start_zhe_wan.y)\n  pen.quadraticBezierTo(out_corner_zhe_wan.x, out_corner_zhe_wan.y, out_radius_end_zhe_wan.x, out_radius_end_zhe_wan.y)\n  // 绘制外侧弯\n  pen.lineTo(out_wan_end.x, out_wan_end.y)\n\n  // 绘制轮廓连接线\n  pen.lineTo(in_wan_end.x, in_wan_end.y)\n\n  // 绘制左侧（内侧）轮廓\n  // 绘制内侧折弯圆角\n  pen.lineTo(in_radius_end_zhe_wan.x, in_radius_end_zhe_wan.y)\n  pen.quadraticBezierTo(in_corner_zhe_wan.x, in_corner_zhe_wan.y, in_radius_start_zhe_wan.x, in_radius_start_zhe_wan.y)\n  if (bending_degree > 1) {\n    // 绘制内侧横折圆角\n    pen.lineTo(in_radius_end_heng_zhe.x, in_radius_end_heng_zhe.y)\n    pen.quadraticBezierTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y, in_radius_start_heng_zhe.x, in_radius_start_heng_zhe.y)\n  } else {\n    pen.lineTo(in_corner_heng_zhe.x, in_corner_heng_zhe.y)\n  }\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(in_heng_start.x, in_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y)\n    pen.lineTo(in_heng_start.x + start_style.start_style_decorator_width, in_heng_start.y + start_style.start_style_decorator_height)\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(\n      in_heng_start.x + start_style.start_style_decorator_width + start_style.start_style_decorator_radius,\n      in_heng_start.y,\n    )\n    pen.quadraticBezierTo(\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y,\n      in_heng_start.x + start_style.start_style_decorator_width,\n      in_heng_start.y + start_style.start_style_decorator_height,\n    )\n    pen.lineTo(in_heng_start.x, in_heng_start.y + start_style.start_style_decorator_height)\n  }\n\n  // 绘制轮廓连接线\n  if (start_style_type === 0) {\n    // 无起笔样式\n    pen.lineTo(out_heng_start.x, out_heng_start.y)\n  } else if (start_style_type === 1) {\n    // 起笔上下凸起长方形\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  } else if (start_style_type === 2) {\n    // 起笔上下凸起长方形，长方形内侧转角为圆角\n    pen.lineTo(out_heng_start.x, out_heng_start.y - start_style.start_style_decorator_height)\n  }\n\n  pen.closePath()\n  return [ pen ]\n}\n\nupdateGlyphByParams(params, global_params)\n}","objData":{"_joints":[{"_x":300,"_y":345,"uuid":"TG8w44UyjMvxzIUpyxGi0","name":"heng_start_ref"},{"_x":500,"_y":345,"uuid":"oK02ioaygJJSo00tH1Dc1","name":"heng_end_ref"},{"_x":300,"_y":345,"uuid":"kt9nfKbmmHu9EugNB8_Jj","name":"heng_start"},{"_x":500,"_y":345,"uuid":"Z_5l_KyOEyfdTewLpPlJH","name":"heng_end"},{"_x":500,"_y":345,"uuid":"xr8JjeXxlBe14B4yQMtd6","name":"zhe_start"},{"_x":500,"_y":645,"uuid":"dkmOTMvtNNqs_rcgq5fzl","name":"zhe_end"},{"_x":500,"_y":645,"uuid":"uqKCgM-DUYXv5kuKR_ort","name":"wan_start"},{"_x":700,"_y":645,"uuid":"UCp4jHp6ivW3Toxfnv-GG","name":"wan_end"}],"_reflines":[{"name":"heng_start_ref-heng_end_ref","start":"heng_start_ref","end":"heng_end_ref","type":"ref"},{"name":"heng_start-heng_end","start":"heng_start","end":"heng_end"},{"name":"zhe_start-zhe_end","start":"zhe_start","end":"zhe_end"},{"name":"wan_start-wan_end","start":"wan_start","end":"wan_end"}],"_components":[{"points":[{"uuid":"MU0xzK6dJfvCWAyx3OQpE","type":"anchor","x":300,"y":307.5,"origin":null},{"uuid":"YeEG-YjplqjWRQiBqjF2E","type":"control","x":300,"y":307.5,"origin":"MU0xzK6dJfvCWAyx3OQpE"},{"uuid":"qjs56FmV-Bd0se4QyanqO","type":"control","x":320,"y":307.5,"origin":"V8_1mrpncO1DPxI2ZyC1y"},{"uuid":"V8_1mrpncO1DPxI2ZyC1y","type":"anchor","x":320,"y":307.5,"origin":null},{"uuid":"U3QL2GwXg_ihMmSrk4jFC","type":"control","x":320,"y":315.8333333333333,"origin":"V8_1mrpncO1DPxI2ZyC1y"},{"uuid":"DfyeFxIWgrYa5REhEGF1N","type":"control","x":326.6666666666667,"y":320,"origin":"TPcxyRZYBDLQpDo7584l5"},{"uuid":"TPcxyRZYBDLQpDo7584l5","type":"anchor","x":340,"y":320,"origin":null},{"uuid":"X6H0SeBzERutC-ORad8sZ","type":"control","x":340,"y":320,"origin":"TPcxyRZYBDLQpDo7584l5"},{"uuid":"yNSuHvbiaYMXlVkqquoPF","type":"control","x":454.28932188134524,"y":320,"origin":"zQh8EyqcI4u-jzg-NU9uM"},{"uuid":"zQh8EyqcI4u-jzg-NU9uM","type":"anchor","x":454.28932188134524,"y":320,"origin":null},{"uuid":"qa_eRsQYplj4tkEAAwqlK","type":"control","x":477.85954792089683,"y":320,"origin":"zQh8EyqcI4u-jzg-NU9uM"},{"uuid":"OeEx8hhf1fKr0a_1RR2FY","type":"control","x":494.35870614858294,"y":315.2859547920897,"origin":"qnfy2q2--4eicBB8TnSpb"},{"uuid":"qnfy2q2--4eicBB8TnSpb","type":"anchor","x":503.7867965644036,"y":305.85786437626905,"origin":null},{"uuid":"FK8ymLIC4KrXf8bSBvbeG","type":"control","x":503.7867965644036,"y":305.85786437626905,"origin":"qnfy2q2--4eicBB8TnSpb"},{"uuid":"XKirjhLJo_3sf3qpZ_e_3","type":"control","x":539.142135623731,"y":341.2132034355964,"origin":"C1QCFFpflOtW97d2frYHa"},{"uuid":"C1QCFFpflOtW97d2frYHa","type":"anchor","x":539.142135623731,"y":341.2132034355964,"origin":null},{"uuid":"zbqggs2Ez-W0hpcRPW4eu","type":"control","x":529.7140452079103,"y":350.64129385141706,"origin":"C1QCFFpflOtW97d2frYHa"},{"uuid":"uUDa04Wl5JmPSFjd0Rj7m","type":"control","x":525,"y":367.14045207910317,"origin":"yjEFfyjwz-5c5H_e8aX-C"},{"uuid":"yjEFfyjwz-5c5H_e8aX-C","type":"anchor","x":525,"y":390.71067811865476,"origin":null},{"uuid":"bKW_VaxnOv_MBDifYCy-b","type":"control","x":525,"y":390.71067811865476,"origin":"yjEFfyjwz-5c5H_e8aX-C"},{"uuid":"a4gC6yB249BN-9sxpYK9M","type":"control","x":524.0001388599604,"y":560.008331597624,"origin":"y7C3lWVBnp_cqLZIAz7A3"},{"uuid":"y7C3lWVBnp_cqLZIAz7A3","type":"anchor","x":524.0001388599604,"y":560.008331597624,"origin":null},{"uuid":"T1cbuBWWxkY4LYkRYho8Y","type":"control","x":524.6667129533201,"y":600.002777199208,"origin":"y7C3lWVBnp_cqLZIAz7A3"},{"uuid":"AVj3ATk49pVeQ8QtMNSEJ","type":"control","x":545,"y":620,"origin":"X0rbzJlydcRf3NxVOwJCN"},{"uuid":"X0rbzJlydcRf3NxVOwJCN","type":"anchor","x":585,"y":620,"origin":null},{"uuid":"tDSPsxcscEz3uOV7SREiV","type":"control","x":585,"y":620,"origin":"X0rbzJlydcRf3NxVOwJCN"},{"uuid":"bUUKEpY-0xwRkOdosdfwg","type":"control","x":700,"y":620,"origin":"GwxcYvigssNpkQtARjocR"},{"uuid":"GwxcYvigssNpkQtARjocR","type":"anchor","x":700,"y":620,"origin":null},{"uuid":"x6UmzXZ6mjTk1tByRJhb7","type":"control","x":700,"y":620,"origin":"GwxcYvigssNpkQtARjocR"},{"uuid":"zs0ffFF4kdSOBfh-sCwdg","type":"control","x":700,"y":670,"origin":"-4h24CV38XV4bG-63zq-e"},{"uuid":"-4h24CV38XV4bG-63zq-e","type":"anchor","x":700,"y":670,"origin":null},{"uuid":"_6niACN5FoSV4U2YEUDTd","type":"control","x":700,"y":670,"origin":"-4h24CV38XV4bG-63zq-e"},{"uuid":"BLG9gLZvJKnwalSDfsOlH","type":"control","x":555,"y":670,"origin":"FhDY-5h9hCCUKfl5AFULo"},{"uuid":"FhDY-5h9hCCUKfl5AFULo","type":"anchor","x":555,"y":670,"origin":null},{"uuid":"BHrdUrQDLZU8f44m9sFW2","type":"control","x":501.6666666666667,"y":670,"origin":"FhDY-5h9hCCUKfl5AFULo"},{"uuid":"JRZv9MHbKdNAho4RI-QbR","type":"control","x":475,"y":643.3333333333334,"origin":"lKZjSPfIOZiDfqK2pTnMp"},{"uuid":"lKZjSPfIOZiDfqK2pTnMp","type":"anchor","x":475,"y":590,"origin":null},{"uuid":"XkM35KQxb9VogAfHbiPz1","type":"control","x":475,"y":590,"origin":"lKZjSPfIOZiDfqK2pTnMp"},{"uuid":"2ElxTQqvMlRcclJiKdRY4","type":"control","x":475,"y":370,"origin":"GFvlmUin1PRWK0sTiaIOJ"},{"uuid":"GFvlmUin1PRWK0sTiaIOJ","type":"anchor","x":475,"y":370,"origin":null},{"uuid":"BSjpq_EJ7kMKfy7RJCtTH","type":"control","x":475,"y":370,"origin":"GFvlmUin1PRWK0sTiaIOJ"},{"uuid":"SWcrL7Ugr7jzMD2tWIitF","type":"control","x":340,"y":370,"origin":"OGhj-HaNv-dXpp4Z4fVdI"},{"uuid":"OGhj-HaNv-dXpp4Z4fVdI","type":"anchor","x":340,"y":370,"origin":null},{"uuid":"GqpQ2GUzTG7RDATrTzutG","type":"control","x":326.6666666666667,"y":370,"origin":"OGhj-HaNv-dXpp4Z4fVdI"},{"uuid":"sjhAnls3F8j_kH0X0mB_3","type":"control","x":320,"y":374.1666666666667,"origin":"zNTPXJrZv_5qW1soBGB0i"},{"uuid":"zNTPXJrZv_5qW1soBGB0i","type":"anchor","x":320,"y":382.5,"origin":null},{"uuid":"R4DzgsFJLxpfsvbylfkJQ","type":"control","x":320,"y":382.5,"origin":"zNTPXJrZv_5qW1soBGB0i"},{"uuid":"Onpa0WDo4AxuoEjzDu-1E","type":"control","x":300,"y":382.5,"origin":"XjhNLDEzJMy1-Q58Ru7C5"},{"uuid":"XjhNLDEzJMy1-Q58Ru7C5","type":"anchor","x":300,"y":382.5,"origin":null},{"uuid":"kvs1Cmg6nkMSdkY38yGsM","type":"control","x":300,"y":382.5,"origin":"XjhNLDEzJMy1-Q58Ru7C5"},{"uuid":"B2ttobGPXWgUcv2eWxs8L","type":"control","x":300,"y":307.5,"origin":"imC4CI4crEeoSQsKSw-yX"},{"uuid":"imC4CI4crEeoSQsKSw-yX","type":"anchor","x":300,"y":307.5,"origin":null}],"type":"glyph-pen","hasPathBegan":false,"usedInCharacter":true,"contour":[{"type":2,"start":{"x":300,"y":492.5},"end":{"x":320,"y":492.5},"control1":{"x":300,"y":492.5},"control2":{"x":320,"y":492.5},"fill":false},{"type":2,"start":{"x":320,"y":492.5},"end":{"x":340,"y":480},"control1":{"x":320,"y":484.16666666666674},"control2":{"x":326.6666666666667,"y":480},"fill":false},{"type":2,"start":{"x":340,"y":480},"end":{"x":454.28932188134524,"y":480},"control1":{"x":340,"y":480},"control2":{"x":454.28932188134524,"y":480},"fill":false},{"type":2,"start":{"x":454.28932188134524,"y":480},"end":{"x":503.7867965644036,"y":494.14213562373095},"control1":{"x":477.85954792089683,"y":480},"control2":{"x":494.35870614858294,"y":484.7140452079103},"fill":false},{"type":2,"start":{"x":503.7867965644036,"y":494.14213562373095},"end":{"x":539.142135623731,"y":458.78679656440363},"control1":{"x":503.7867965644036,"y":494.14213562373095},"control2":{"x":539.142135623731,"y":458.78679656440363},"fill":false},{"type":2,"start":{"x":539.142135623731,"y":458.78679656440363},"end":{"x":525,"y":409.28932188134524},"control1":{"x":529.7140452079103,"y":449.358706148583},"control2":{"x":525,"y":432.85954792089683},"fill":false},{"type":2,"start":{"x":525,"y":409.28932188134524},"end":{"x":524.0001388599604,"y":239.99166840237604},"control1":{"x":525,"y":409.28932188134524},"control2":{"x":524.0001388599604,"y":239.99166840237604},"fill":false},{"type":2,"start":{"x":524.0001388599604,"y":239.99166840237604},"end":{"x":585,"y":180},"control1":{"x":524.6667129533201,"y":199.99722280079197},"control2":{"x":545,"y":180},"fill":false},{"type":2,"start":{"x":585,"y":180},"end":{"x":700,"y":180},"control1":{"x":585,"y":180},"control2":{"x":700,"y":180},"fill":false},{"type":2,"start":{"x":700,"y":180},"end":{"x":700,"y":130},"control1":{"x":700,"y":180},"control2":{"x":700,"y":130},"fill":false},{"type":2,"start":{"x":700,"y":130},"end":{"x":555,"y":130},"control1":{"x":700,"y":130},"control2":{"x":555,"y":130},"fill":false},{"type":2,"start":{"x":555,"y":130},"end":{"x":475,"y":210},"control1":{"x":501.6666666666667,"y":130},"control2":{"x":475,"y":156.66666666666663},"fill":false},{"type":2,"start":{"x":475,"y":210},"end":{"x":475,"y":430},"control1":{"x":475,"y":210},"control2":{"x":475,"y":430},"fill":false},{"type":2,"start":{"x":475,"y":430},"end":{"x":340,"y":430},"control1":{"x":475,"y":430},"control2":{"x":340,"y":430},"fill":false},{"type":2,"start":{"x":340,"y":430},"end":{"x":320,"y":417.5},"control1":{"x":326.6666666666667,"y":430},"control2":{"x":320,"y":425.83333333333326},"fill":false},{"type":2,"start":{"x":320,"y":417.5},"end":{"x":300,"y":417.5},"control1":{"x":320,"y":417.5},"control2":{"x":300,"y":417.5},"fill":false},{"type":2,"start":{"x":300,"y":417.5},"end":{"x":300,"y":492.5},"control1":{"x":300,"y":417.5},"control2":{"x":300,"y":492.5},"fill":false}],"preview":[{"type":2,"start":{"x":30,"y":30.75},"end":{"x":32,"y":30.75},"control1":{"x":30,"y":30.75},"control2":{"x":32,"y":30.75},"fill":false},{"type":2,"start":{"x":32,"y":30.75},"end":{"x":34,"y":32},"control1":{"x":32,"y":31.583333333333332},"control2":{"x":32.66666666666667,"y":32},"fill":false},{"type":2,"start":{"x":34,"y":32},"end":{"x":45.428932188134524,"y":32},"control1":{"x":34,"y":32},"control2":{"x":45.428932188134524,"y":32},"fill":false},{"type":2,"start":{"x":45.428932188134524,"y":32},"end":{"x":50.37867965644036,"y":30.585786437626908},"control1":{"x":47.78595479208968,"y":32},"control2":{"x":49.435870614858295,"y":31.52859547920897},"fill":false},{"type":2,"start":{"x":50.37867965644036,"y":30.585786437626908},"end":{"x":53.9142135623731,"y":34.121320343559645},"control1":{"x":50.37867965644036,"y":30.585786437626908},"control2":{"x":53.9142135623731,"y":34.121320343559645},"fill":false},{"type":2,"start":{"x":53.9142135623731,"y":34.121320343559645},"end":{"x":52.5,"y":39.071067811865476},"control1":{"x":52.97140452079103,"y":35.064129385141705},"control2":{"x":52.5,"y":36.71404520791032},"fill":false},{"type":2,"start":{"x":52.5,"y":39.071067811865476},"end":{"x":52.400013885996046,"y":56.0008331597624},"control1":{"x":52.5,"y":39.071067811865476},"control2":{"x":52.400013885996046,"y":56.0008331597624},"fill":false},{"type":2,"start":{"x":52.400013885996046,"y":56.0008331597624},"end":{"x":58.5,"y":62},"control1":{"x":52.46667129533202,"y":60.0002777199208},"control2":{"x":54.5,"y":62},"fill":false},{"type":2,"start":{"x":58.5,"y":62},"end":{"x":70,"y":62},"control1":{"x":58.5,"y":62},"control2":{"x":70,"y":62},"fill":false},{"type":2,"start":{"x":70,"y":62},"end":{"x":70,"y":67},"control1":{"x":70,"y":62},"control2":{"x":70,"y":67},"fill":false},{"type":2,"start":{"x":70,"y":67},"end":{"x":55.5,"y":67},"control1":{"x":70,"y":67},"control2":{"x":55.5,"y":67},"fill":false},{"type":2,"start":{"x":55.5,"y":67},"end":{"x":47.5,"y":59},"control1":{"x":50.16666666666667,"y":67},"control2":{"x":47.5,"y":64.33333333333334},"fill":false},{"type":2,"start":{"x":47.5,"y":59},"end":{"x":47.5,"y":37},"control1":{"x":47.5,"y":59},"control2":{"x":47.5,"y":37},"fill":false},{"type":2,"start":{"x":47.5,"y":37},"end":{"x":34,"y":37},"control1":{"x":47.5,"y":37},"control2":{"x":34,"y":37},"fill":false},{"type":2,"start":{"x":34,"y":37},"end":{"x":32,"y":38.25},"control1":{"x":32.66666666666667,"y":37},"control2":{"x":32,"y":37.41666666666667},"fill":false},{"type":2,"start":{"x":32,"y":38.25},"end":{"x":30,"y":38.25},"control1":{"x":32,"y":38.25},"control2":{"x":30,"y":38.25},"fill":false},{"type":2,"start":{"x":30,"y":38.25},"end":{"x":30,"y":30.75},"control1":{"x":30,"y":38.25},"control2":{"x":30,"y":30.75},"fill":false}]}]}}],"radical_glyphs":[],"comp_glyphs":[]}